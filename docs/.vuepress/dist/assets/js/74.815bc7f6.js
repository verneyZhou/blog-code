(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{673:function(t,s,e){"use strict";e.r(s);var n=e(8),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"jenkins前端自动化部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jenkins前端自动化部署"}},[t._v("#")]),t._v(" Jenkins前端自动化部署")]),t._v(" "),e("blockquote",[e("p",[t._v("Jenkins 是开源 CI&CD 软件领导者，提供超过 1000 个插件来支持构建、部署、自动化，满足任何项目的需要。")])]),t._v(" "),e("p",[t._v("Jenkins 是一款以插件化的方式实现 CI/CD 的软件。")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.jenkins.io/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jenkins"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"准备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[t._v("#")]),t._v(" 准备")]),t._v(" "),e("ol",[e("li",[t._v("ECS服务器")])]),t._v(" "),e("blockquote",[e("p",[t._v("一个ECS服务器，我的是阿里云 CentOS 服务器：2核(vCPU) 2 GiB~")])]),t._v(" "),e("blockquote",[e("p",[t._v("在操作之前，假设你的服务器已经安装了"),e("code",[t._v("git, nginx, node")]),t._v("，并且已经配置了"),e("code",[t._v("nginx.conf")]),t._v("~")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("有一个开发完成，即将推送到github的项目，我的项目地址是"),e("a",{attrs:{href:"https://github.com/verneyZhou/jenkins-vite-test",target:"_blank",rel:"noopener noreferrer"}},[t._v("jenkins-vite-test"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"安装jenkins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装jenkins"}},[t._v("#")]),t._v(" 安装jenkins")]),t._v(" "),e("ul",[e("li",[t._v("登录ECS云服务器")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("➜  ~ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" root@123.57.172.182\nLast login: Thu Aug "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" 02:17:58 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v(" from "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("222.128")]),t._v(".185.117\n\nWelcome to Alibaba Cloud Elastic Compute Service "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("Jenkins 默认占用"),e("code",[t._v("8080")]),t._v("端口，同时需要在"),e("a",{attrs:{href:"https://ecs.console.aliyun.com/server/i-2zef9ue9eyhqrvjxs3aq/group/group?regionId=cn-beijing",target:"_blank",rel:"noopener noreferrer"}},[t._v("安全组"),e("OutboundLink")],1),t._v("中增加~")])]),t._v(" "),e("ul",[e("li",[t._v("安装 Java JDK")])]),t._v(" "),e("blockquote",[e("p",[t._v("Jenkins 依赖于 java 所以需要安装 "),e("code",[t._v("Java JDK")]),t._v("; 因为最新的 Jenkins 版本需要 Java11 或者 Java17，更多 Jenkins 版本查看"),e("a",{attrs:{href:"https://pkg.origin.jenkins.io/redhat/",target:"_blank",rel:"noopener noreferrer"}},[t._v("pkg.jenkins.io"),e("OutboundLink")],1),t._v("，所以我们选择安装"),e("code",[t._v("Java11")])])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum -y list java*   # 查看可用的java版本")]),t._v("\n已加载插件：fastestmirror\nLoading mirror speeds from cached hostfile\n已安装的软件包\njava-11-openjdk.x86_64                                 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":11.0.19.0.7-1.el7_9                      @updates\njava-11-openjdk-headless.x86_64                        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":11.0.19.0.7-1.el7_9                      @updates\njavapackages-tools.noarch                              "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.4")]),t._v(".1-11.el7                               @base\n可安装的软件包\njava-1.6.0-openjdk.x86_64                              "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":1.6.0.41-1.13.13.1.el7_3                 base\njava-1.6.0-openjdk-demo.x86_64                         "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":1.6.0.41-1.13.13.1.el7_3                 base\njava-1.6.0-openjdk-devel.x86_64\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装指定版本java依赖包")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install java-11-openjdk-devel.x86_64  # 或  sudo yum install java-11-openjdk")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装成功后，查看java版本")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# java --version")]),t._v("\nopenjdk "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.0")]),t._v(".19 "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-04-18 LTS\nOpenJDK Runtime Environment "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Red_Hat-11.0.19.0.7-1.el7_9"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.0")]),t._v(".19+7-LTS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nOpenJDK "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),t._v("-Bit Server VM "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Red_Hat-11.0.19.0.7-1.el7_9"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("build "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11.0")]),t._v(".19+7-LTS, mixed mode, sharing"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n\n")])])]),e("ul",[e("li",[t._v("安装Jenkins")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo")]),t._v("\n--2023-08-10 02:38:35--  https://pkg.jenkins.io/redhat-stable/jenkins.repo\n正在解析主机 pkg.jenkins.io "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkg.jenkins.io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("151.101")]),t._v(".110.133, 2a04:4e42:1a::645\n正在连接 pkg.jenkins.io "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pkg.jenkins.io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("151.101")]),t._v(".110.133"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(":443"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". 已连接。\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误: 无法验证 pkg.jenkins.io 的由 “/C=US/O=Let's Encrypt/CN=R3” 颁发的证书: 颁发的证书已经过期。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要以不安全的方式连接至 pkg.jenkins.io，使用“--no-check-certificate”。")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo --no-check-certificate")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io.key")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum install jenkins")]),t._v("\n")])])]),e("ul",[e("li",[t._v("启动 Jenkins:")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动 Jenkins 服务")]),t._v("\nsystemctl start jenkins\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重启 Jenkins 服务")]),t._v("\nsystemctl restart jenkins\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 停止 Jenkins 服务")]),t._v("\nsystemctl stop jenkins\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 Jenkins 服务状态")]),t._v("\nsystemctl status jenkins\n")])])]),e("ul",[e("li",[t._v("启动后，在浏览器输入："),e("code",[t._v("http://123.57.172.182:8080/")]),t._v(", 就可以访问到以下页面，代表 Jenkins 安装成功：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins01.png"),width:"auto"}}),t._v(" "),e("h2",{attrs:{id:"配置jenkins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置jenkins"}},[t._v("#")]),t._v(" 配置Jenkins")]),t._v(" "),e("blockquote",[e("p",[t._v("接下来可以开始配置Jenkins了~")])]),t._v(" "),e("ul",[e("li",[t._v("如上图所示，需要先获取密码：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看密码")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cat /var/lib/jenkins/secrets/initialAdminPassword")]),t._v("\nf63310f95***********bc45b2\n")])])]),e("ul",[e("li",[t._v("复制密码，粘贴，点击继续；选择【安装推荐的组件】:")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins02.png"),width:"auto"}}),t._v(" "),e("ul",[e("li",[t._v("等待安装插件，可能需要几分钟，安装完成后设置管理员账号；设置完成后，点击【保存并完成】，跟着提示进入下一步，就来到了 Jenkins 首页：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins03.png"),width:"auto"}}),t._v(" "),e("h3",{attrs:{id:"配置node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置node"}},[t._v("#")]),t._v(" 配置Node")]),t._v(" "),e("blockquote",[e("p",[t._v("在构建流程中，想要部署前端项目，需要执行我们编写的shell脚本，还需要依赖一个 Node 环境~")])]),t._v(" "),e("ol",[e("li",[t._v("安装：Manage Jenkins   =>  System Configuration   =>  插件管理  =>  Available Plugins =>  输入 "),e("code",[t._v("NodeJS")]),t._v("，安装：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins04.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("配置：安装完成后，Manage Jenkins  =>  Tools => 滑到底部，选择 NodeJS 安装：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins041.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("之后创建的构建任务时，在 【构建环境】 中会多出一个选项 "),e("code",[t._v("Provide Node & npm bin/ folder to PATH")]),t._v(" 勾选即可~")])]),t._v(" "),e("h3",{attrs:{id:"配置publish-over-ssh"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置publish-over-ssh"}},[t._v("#")]),t._v(" 配置Publish Over SSH")]),t._v(" "),e("blockquote",[e("p",[t._v("在真实的开发场景中，Jenkins 几乎不会和前端资源放到一个服务器。大多数情况下 Jenkins 所处的服务器环境就是一个工具用的服务器，放置了一些公司中常用的工具。因此构建到指定的服务器也至关重要。所以部署到目标主机就需要安装这个插件~")])]),t._v(" "),e("ol",[e("li",[t._v("安装：Manage Jenkins   =>  System Configuration   =>  插件管理  =>  Available Plugins =>  输入 "),e("code",[t._v("Publish Over SSH")]),t._v("，安装：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins16.jpeg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("安装完成后，原本默认的英文界面可能会自动转成中文~~~")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("配置：安装重启后jenkins后，"),e("code",[t._v("系统管理 => 系统配置")]),t._v("，页面往下滑，找到"),e("code",[t._v("Publish over SSH")]),t._v("，点击新增"),e("code",[t._v("SSH Servers")]),t._v("：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins17.jpeg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("上面的密码是服务器密码~")])]),t._v(" "),e("p",[t._v("如图所示添加服务器信息，填完后点击下方的"),e("code",[t._v("Test Configuration")]),t._v("进行连接测试，如果测试成功，会显示"),e("code",[t._v("Success")]),t._v("；之后保存即可~")]),t._v(" "),e("blockquote",[e("p",[t._v("我这里配置的就是jenkins所在的服务器，刚开始报错了，后来在阿里云安全规则里添加了如下配置，重新测试就连上了~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins18.jpeg"),width:"auto"}}),t._v(" "),e("h3",{attrs:{id:"添加-github-token"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加-github-token"}},[t._v("#")]),t._v(" 添加 Github Token")]),t._v(" "),e("blockquote",[e("p",[t._v("为了我们能够在"),e("code",[t._v("github")]),t._v("上拉取代码，需要我们添加"),e("code",[t._v("git token")]),t._v("，在"),e("code",[t._v("github")]),t._v("中添加一个 "),e("code",[t._v("token")]),t._v("~")])]),t._v(" "),e("p",[t._v("使用 GitHub API 或命令行时，可使用 Personal access token 替代密码向 GitHub 进行身份验证。"),e("a",{attrs:{href:"https://docs.github.com/zh/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github-管理个人访问令牌"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("Personal access token 旨在代表你自己访问 GitHub 资源。")])]),t._v(" "),e("ul",[e("li",[t._v("安装Github API")])]),t._v(" "),e("blockquote",[e("p",[t._v("在配置"),e("code",[t._v("Github Token")]),t._v("之前需要先安装"),e("code",[t._v("Github API")]),t._v("插件，安装方式跟上面的"),e("code",[t._v("Publish Over SSH")]),t._v("一样；可以现在插件管理的"),e("code",[t._v("avaliable plugins")]),t._v("处查询是否已安装该插件，如果没有则需要安装（因为刚开始 配置jenkins 选择 安装推荐插件 时可能已经安装了~）")])]),t._v(" "),e("ol",[e("li",[t._v("进入 "),e("a",{attrs:{href:"https://github.com/settings/apps",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),e("OutboundLink")],1),t._v("，点击右上角 头像 - 【Settings】； 滑到最底部，点击【Developer settings】，然后选中 【Personal access tokens】，点击右上角 【Generate new token】：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins05.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("输入Note, 配置有效期，勾选 相应Auth，如图所示：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins06.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("既然是要实现代码 push 到仓库就自动构建并发布，那么我们肯定得用到 Webhook，不过我们不需要手动创建 Webhook，插件会帮我们自动创建。")])]),t._v(" "),e("p",[t._v("勾选后，点击【Generate】生成一段 token；token 只会显示一次，建议用记事本记一下。")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("接着回到Jenkins中：Manage Jenkins  =>  System  => 滑到下面找到GitHub, 点击添加 Github服务器  => 输入名称，凭据下面点击添加Jenkins：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins07.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("出来弹窗，类型选择 Secret Text；Secret 中添加刚生成的 Token；点击添加：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins08.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("之后在 Github服务器 中选择 Secret Text 凭据，勾选 管理Hooks, 点击 连接测试；如果出现你的 github账号名称 则说明配置成功：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins09.jpg"),width:"auto"}}),t._v(" "),e("h3",{attrs:{id:"新建构建任务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新建构建任务"}},[t._v("#")]),t._v(" 新建构建任务")]),t._v(" "),e("blockquote",[e("p",[t._v("在新建项目之前，需要先把自己的本地的项目推送到github上~")])]),t._v(" "),e("ol",[e("li",[t._v("Create A Job：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins10.jpg"),width:"auto"}}),t._v(" "),e("p",[t._v("输入名称  => 选择 Freestyle Project：")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins101.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("如图所示，进行github配置:")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins11.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("添加git仓库Url后，可能会因为没有认证而报错：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins12.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("跟添加 Token 凭证类似，点击下方【添加】，添加jenkins凭证~")])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("出来弹窗，选择【Username and Password】，输入Github账号和密码，保存：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins13.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("也可添加 "),e("code",[t._v("SSH Username with private key")]),t._v("，都是一种获取github登录权限的凭据~")])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("之后选择新生成的凭证，报错消失则说明凭证生效了：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins14.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("之后配置构建触发器和构建环境，如图所示勾选：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins15.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[t._v("接着添加构建步骤：")])]),t._v(" "),e("p",[t._v("点击【增加构建步骤】 ===>  选择 【执行shell】, 然后可先输入如下简单的打包命令试下是否能执行成功~")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins19.jpeg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"8"}},[e("li",[t._v("保存配置之后回到构建任务，点击【立即构建】下方会出现构建历史记录，点击则能查看脚本执行详情~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins20.jpeg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"9"}},[e("li",[t._v("点击【控制台输出】则能看到详细的脚本执行信息，可看到执行了刚才在配置的脚本命令~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins21.jpeg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("不出意外的话，构建任务结束后会提示"),e("code",[t._v("success")]),t._v("，但刚开始执行也很可能会出现报错，一般可能是权限相关问题~")])]),t._v(" "),e("h2",{attrs:{id:"继续配置jenkins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#继续配置jenkins"}},[t._v("#")]),t._v(" 继续配置jenkins")]),t._v(" "),e("h3",{attrs:{id:"优化构建脚本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优化构建脚本"}},[t._v("#")]),t._v(" 优化构建脚本")]),t._v(" "),e("p",[t._v("接下来，继续添加构建脚本，把构建后的打包文件复制到指定目录:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ls-remote -t "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看远程tags")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -l "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看本地tag")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"当前目录为："')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("pwd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前目录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" -v\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" -v\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf node_modules")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在加载安装包..."')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm install")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"下载安装包成功！！！"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在构建..."')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"构建成功！！！"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf /root/nginx/upload/jenkins-vite-test/\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" /root/nginx/upload/jenkins-vite-test/\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"正在复制..."')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -rf ./dist/* /root/nginx/upload/jenkins-vite-test\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"复制成功！！！"')]),t._v("\n\n")])])]),e("p",[t._v("这里的 "),e("code",[t._v("/root/nginx/upload/")]),t._v(" 是已经在"),e("code",[t._v("nginx.conf")]),t._v("里配置好的项目访问目录：")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# nginx.conf")]),t._v("\n\nserver "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  http默认端口号80,这里用了80之后，直接在浏览器输入ip就可以访问了~")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  最好把/usr/local/nginx/conf/nginx.conf中的端口改成其他，不然会有冲突")]),t._v("\n        server_name localhost"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        root /root/nginx/upload"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 资源访问路径")]),t._v("\n        autoindex on"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打开索引")]),t._v("\n        add_header Cache-Control "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no-cache,must-revalidate"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  http中添加不进行缓存的配置")]),t._v("\n        location / "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所有路由匹配")]),t._v("\n                add_header Access-Control-Allow-Origin *"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  添加跨域支持")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("构建成功后，我们的项目就已经部署到服务器上了，直接访问"),e("code",[t._v("http://123.57.172.182/jenkins-vite-test")]),t._v("即可访问最新的页面！！！")])]),t._v(" "),e("blockquote",[e("p",[t._v("至此，我们也算是大致完成了jenkins自动部署的主要流程，接下来继续优化~")])]),t._v(" "),e("h3",{attrs:{id:"ssh推送部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssh推送部署"}},[t._v("#")]),t._v(" SSH推送部署")]),t._v(" "),e("p",[t._v("上面部署脚本中，在"),e("code",[t._v("run build")]),t._v("之后是通过执行"),e("code",[t._v("cp")]),t._v("来将打包后的产物复制到指定目录，接下来我试试通过配置"),e("code",[t._v("SSH")]),t._v("来自动推送部署~")]),t._v(" "),e("ol",[e("li",[t._v("首先进到"),e("code",[t._v("deplot-test01")]),t._v("的"),e("code",[t._v("Configure")]),t._v("，增加【构建后操作】：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins31.jpeg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("选择在配置"),e("code",[t._v("Publish Over SSH")]),t._v("时添加的服务器，配置路径，保存；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins32.jpeg"),width:"auto"}}),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("Rransfer Set Source files")]),t._v("：要上传到目标服务器的文件。它是一个相对路径，相对于 Jenkins 的工作目录，默认是"),e("code",[t._v("/var/lib/jenkins/workspace/deploy-test01")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Remove prefix")]),t._v("：去前缀。")])])]),t._v(" "),e("blockquote",[e("p",[t._v("假设此时打包文件在 "),e("code",[t._v("/var/lib/jenkins/workspace/deploy-test01/dist/")]),t._v("，那么 "),e("code",[t._v("Rransfer Set Source files")]),t._v(" 则应该为 "),e("code",[t._v("/dist/**/*")]),t._v("，此时 "),e("code",[t._v("Remove prefix")]),t._v(" 配置为 "),e("code",[t._v("dist")]),t._v(" 则可以去除这个前缀，否则会在目标服务中创建 "),e("code",[t._v("dist")]),t._v(" 。")])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("Remote directory")]),t._v("：远程的静态资源托管目录。由于配置服务器默认为"),e("code",[t._v("/")]),t._v("，所以 "),e("code",[t._v("root/nginx/upload/jenkins-vite-test")]),t._v(" 不用以 "),e("code",[t._v("/")]),t._v(" 开头。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("Exec command")]),t._v("：远程机执行 "),e("code",[t._v("shell")]),t._v("，由于配置服务器默认为 "),e("code",[t._v("/")]),t._v("， 所以 工作目录也是以 "),e("code",[t._v("/")]),t._v(" 开始。")])])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("注释掉【Build Steps】中的脚本命令，然后重新构建：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##### 注释掉复制部分代码")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rm -rf /root/nginx/upload/jenkins-vite-test/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mkdir /root/nginx/upload/jenkins-vite-test/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# echo "正在复制..."')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# cp -rf ./dist/* /root/nginx/upload/jenkins-vite-test")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# echo "复制成功！！！"')]),t._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("构建成功后，可点击【控制台输出】查看构建详情：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins33.jpeg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("如果 "),e("code",[t._v("Transferred 0 file")]),t._v(" 则需要查看配置的路径是否正确。表示文件并没有被移动到远程主机中。")])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("构建成功后访问"),e("code",[t._v("http://123.57.172.182/jenkins-vite-test")]),t._v("也可以看到最新的修改；")])]),t._v(" "),e("blockquote",[e("p",[t._v("这里我配置的服务器ip就是jenkins所在的服务器（因为我只有这一个服务器...），以后如果想推送到其他服务器也是完全可以的，在"),e("code",[t._v("SSH")]),t._v("里更新配置即可~")])]),t._v(" "),e("h3",{attrs:{id:"git-webhooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-webhooks"}},[t._v("#")]),t._v(" Git Webhooks")]),t._v(" "),e("blockquote",[e("p",[t._v("我们向github/码云等远程仓库push我们的代码时，jenkins能知道我们提交了代码，这是自动构建自动部署的前提，钩子的实现原理是在远端仓库上配置一个Jenkins服务器的接口地址，当本地向远端仓库发起push时，远端仓库会向配置的Jenkins服务器的接口地址发起一个带参数的请求，jenkins收到后开始工作。")])]),t._v(" "),e("ul",[e("li",[t._v("在上面"),e("code",[t._v("新建构建任务 => 构建触发器")]),t._v(" 时，我已经选择的是【"),e("strong",[t._v("GitHub hook trigger for GITScm polling")]),t._v("】，意思就是：")])]),t._v(" "),e("p",[e("strong",[t._v("在上面的源码管理中指定的 main 分支的代码有改动，就会触发自动构建")]),t._v("。")]),t._v(" "),e("ul",[e("li",[t._v("接着可以看下github上是否已经添加了"),e("code",[t._v("webhooks")]),t._v(":")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins34.jpeg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("可以看到 github 上已经添加了我的jenkins服务器所在的地址: http://123.57.172.182:8080/github-webhook/，可能是在配置构建任务勾选【GitHub hook trigger for GITScm polling】就自动加上了吧，如果没有，那就手动加上~")])]),t._v(" "),e("ul",[e("li",[t._v("如果上面配置没问题，之后我们每次"),e("code",[t._v("git push")]),t._v("代码到github，我们的jenkins应该都会自动构建"),e("code",[t._v("deploy-test01")]),t._v("项目~")])]),t._v(" "),e("h3",{attrs:{id:"增加钉钉提醒"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增加钉钉提醒"}},[t._v("#")]),t._v(" 增加钉钉提醒")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://jenkinsci.github.io/dingtalk-plugin/guide/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("钉钉机器人插件"),e("OutboundLink")],1)]),t._v(" "),e("ol",[e("li",[t._v("首先在jenkins插件管理中安装 "),e("code",[t._v("DingTalk")]),t._v(" 插件：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins41.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("之后在钉钉中新建一个群，添加机器人：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins43.jpg"),width:"auto"}}),t._v(" "),e("p",[t._v("然后填写机器人信息：")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins44.jpg"),width:"auto"}}),t._v(" "),e("p",[t._v("复制Webhook:")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins45.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("之后回到 "),e("code",[t._v("Jenkins => 系统管理")]),t._v(" 中，配置钉钉机器人：")])]),t._v(" "),e("blockquote",[e("p",[t._v("当我们安装了 "),e("code",[t._v("DingTalk")]),t._v(" 插件后，系统配置下方中就会自动出现钉钉tab~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins42.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("【新增】，配置信息：id随便输入，名称自定义，webhook是刚在钉钉复制的链接，关键词是刚在钉钉中输入的；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins46.jpg"),width:"auto"}}),t._v(" "),e("p",[t._v("输入完成，点击右下角【测试】，显示"),e("code",[t._v("测试成功")]),t._v("即表示配置成功，【submit】~")]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("最后进入需要钉钉通知的构建任务，修改构建配置：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins47.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("提交之后，重新构建，构建成功后，不出意外我们的钉钉群就会收到如下通知~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins48.jpg"),width:"auto"}}),t._v(" "),e("h3",{attrs:{id:"配置分支和环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置分支和环境"}},[t._v("#")]),t._v(" 配置分支和环境")]),t._v(" "),e("blockquote",[e("p",[t._v("在实际项目构建中，我们需要部署不同的分支，也需要部署到不同的环境，所以也需要参数化构建~")])]),t._v(" "),e("ol",[e("li",[t._v("jenkins插件管理，安装"),e("code",[t._v("Git Parameter")]),t._v(":")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins51.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("安装完成后，进入构建任务【配置】，这是会出现如下【参数化构建过程】选项，选中，新增【选项参数】，填入自己的分支和环境信息：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins52.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("之后修改【源码管理】配置，分支修改为"),e("code",[t._v("*/${feature}")]),t._v("：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins53.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("然后在【构建触发器】中取消【GitHub hook trigger for GITScm polling】勾选，之后在 github 上 Webhooks 中就会自动取消该配置项~")])]),t._v(" "),e("blockquote",[e("p",[t._v("因为这里需要用户手动选择分支和环境，所以就暂不需要监听"),e("code",[t._v("git push")]),t._v("提交，自动构建功能了~")])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("接着修改 SSH 中的 "),e("code",[t._v("Remote direcotory")]),t._v("路径如下：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/jenkins54.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("还需要修改下项目代码的构建配置：")])]),t._v(" "),e("blockquote",[e("p",[t._v("因为现在是用户手动选择环境，所以构建的目录是不固定的，那就需要获取用户所选环境参数来进行静态资源的构建~")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vite.config.js")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取环境变量")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" env "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" process"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENV")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 环境")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("command"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineConfig")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("base")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" env "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("/jenkins-vite-test/")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/jenkins-vite-test/'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据环境变量生成公共路径前缀")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("plugins")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vue")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"7"}},[e("li",[t._v("最后回到jenkins的构建任务配置，修改【Build Steps】的 Shell 脚本命令：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm run build")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ENV")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${env}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  获取用户选择的环境变量")]),t._v("\n")])])]),e("ol",{attrs:{start:"8"}},[e("li",[t._v("至此配置完成，项目提交后，选择分支，环境，重新构建；")])]),t._v(" "),e("p",[t._v("成功后，直接访问："),e("code",[t._v("http://123.57.172.182/dev/jenkins-vite-test")]),t._v("就可以访问到我们的项目了！！！")]),t._v(" "),e("h2",{attrs:{id:"报错记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#报错记录"}},[t._v("#")]),t._v(" 报错记录")]),t._v(" "),e("ol",[e("li",[t._v("安装"),e("code",[t._v("jenkins")]),t._v("提示：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo yum install jenkins")]),t._v("\n已加载插件：fastestmirror\nLoading mirror speeds from cached hostfile\n没有可用软件包 jenkins。\n错误：无须任何处理\n")])])]),e("blockquote",[e("p",[t._v("Centos 有个很方便的软件安装工具 yum，但是默认安装完centos，系统里使用的是国外的centos更新源，这就造成了我们使用默认更新源安装或者更新软件时速度很慢的问题。为了使用yum工具能快速的安装更新软件，我们需要将默认的yum更新源配置为国内的更新源。yum更新源配置文件位于centos目录  "),e("code",[t._v("/etc/yum.repos.d/")]),t._v("  下。")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看服务器所有的默认源")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yum repolist all")]),t._v("\n已加载插件：fastestmirror\nLoading mirror speeds from cached hostfile\n源标识                              源名称                          状态\nC7.0.1406-base/x86_64               CentOS-7.0.1406 - Base          禁用\nC7.0.1406-centosplus/x86_64         CentOS-7.0.1406 - CentOSPlus    禁用\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nC7.7.1908-updates/x86_64            CentOS-7.7.1908 - Updates       禁用\nC7.8.2003-fasttrack/x86_64          CentOS-7.8.2003 - Fasttrack     禁用\nC7.8.2003-updates/x86_64            CentOS-7.8.2003 - Updates       禁用\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aegisbase/7/x86_64                 CentOS-7                        禁用\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aegisextras/7/x86_64               CentOS-7                        禁用\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aegisupdates/7/x86_64              CentOS-7                        禁用\nbase/7/x86_64                       CentOS-7                        启用: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10,072")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认源")]),t._v("\nbase-debuginfo/x86_64               CentOS-7 - Debuginfo            禁用\nbase-source/7                       CentOS-7 - Base Sources         禁用\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果上面查到都为禁用的话，将默认的yum更新源配置为国内的更新源")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ~"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# curl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.163.com/.help/CentOS7-Base-163.repo")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aegisbase/7/x86_64                 CentOS-7                                                  禁用\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aegisextras/7/x86_64               CentOS-7                                                  禁用\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("aegisupdates/7/x86_64              CentOS-7                                                  禁用\nbase/7/x86_64                       CentOS-7 - Base - "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("163")]),t._v(".com                                 启用: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10,072")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 更新之后")]),t._v("\nbase-debuginfo/x86_64               CentOS-7 - Debuginfo                                      禁用\n")])])]),e("p",[e("a",{attrs:{href:"http://mirrors.163.com/.help/centos.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("CentOS镜像使用帮助"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://jingyan.baidu.com/article/0bc808fcee5d471bd485b901.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Linux的默认源出现问题无法yum解决办法"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("实践之后，发现上面提示 jenkins 没有其实不是这个原因，这里记录下方便以后学习~")])]),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[t._v("jenkins新建任务时，添加git项目时报错：")])]),t._v(" "),e("ul",[e("li",[t._v("报错1：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("无法连接仓库：Command "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git ls-remote -h https://github.com/verneyZhou/jenkins-vite-test.git HEAD"')]),t._v(" returned status code "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v(":\nstdout:\nstderr: fatal: unable to access "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://github.com/verneyZhou/jenkins-vite-test.git/'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Failed connect to github.com:443"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Connection timed out\n")])])]),e("blockquote",[e("p",[t._v("可能是权限问题，可以在 "),e("code",[t._v("Credentials")]),t._v(" 中添加凭证；可以选择"),e("code",[t._v("Secret Text")]),t._v(" 或  "),e("code",[t._v("SSH Username with private key")]),t._v(";")])]),t._v(" "),e("p",[e("code",[t._v("Secret Text")]),t._v("在github中生成的Token, "),e("code",[t._v("private key")]),t._v("就是在服务器的"),e("code",[t._v("/root/.ssh/id_rsa")]),t._v("中的内容，添加见下方备注~")]),t._v(" "),e("ul",[e("li",[t._v("报错2：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Failed to connect to repository "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Command "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git ls-remote -h -- git@github.com:xxx/xxx.git HEAD"')]),t._v(" returned status code "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v(":\nstdout:\nstderr: No ECDSA "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key is known "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" github.com and you have requested strict checking.\nHost key verification failed.\nfatal: Could not "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" from remote repository.\n\nPlease "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" sure you have the correct access rights\nand the repository exists.\n")])])]),e("blockquote",[e("p",[t._v("权限校验问题，可能是更新了github的ssh key导致的~")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("jenkins构建过程报错：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 报错1：")]),t._v("\nERROR: Error fetching remote repo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin'")]),t._v("\nhudson.plugins.git.GitException: Failed to fetch from https://github.com/verneyZhou/jenkins-vite-test.git\n\tat hudson.plugins.git.GitSCM.fetchFrom"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GitSCM.java:999"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.plugins.git.GitSCM.retrieveChanges"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GitSCM.java:1241"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.plugins.git.GitSCM.checkout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GitSCM.java:1305"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.scm.SCM.checkout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SCM.java:540"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.model.AbstractProject.checkout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AbstractProject.java:1240"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.model.AbstractBuild"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$AbstractBuildExecution")]),t._v(".defaultCheckout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AbstractBuild.java:649"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat jenkins.scm.SCMCheckoutStrategy.checkout"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SCMCheckoutStrategy.java:85"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.model.AbstractBuild"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$AbstractBuildExecution")]),t._v(".run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AbstractBuild.java:521"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.model.Run.execute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Run.java:1900"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.model.FreeStyleBuild.run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("FreeStyleBuild.java:44"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.model.ResourceController.execute"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ResourceController.java:101"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tat hudson.model.Executor.run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Executor.java:442"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nCaused by: hudson.plugins.git.GitException: Command "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git fetch --tags --progress https://github.com/verneyZhou/jenkins-vite-test.git +refs/heads/*:refs/remotes/origin/*"')]),t._v(" returned status code "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v(":\nstdout: \nstderr: fatal: unable to access "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://github.com/verneyZhou/jenkins-vite-test.git/'")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" Encountered end of "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂无无解，可能也是权限问题")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 报错2：")]),t._v("\nPermission denied "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("publickey"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\nfatal: Could not "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" from remote repository.\n\nPlease "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" sure you have the correct access rights\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 权限问题")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 报错3：")]),t._v("\neturned status code "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v(":\nstdout: \nstderr: Warning: the ECDSA "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github.com'")]),t._v(" differs from the key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the IP address "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'20.205.243.166'")]),t._v("\nOffending key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token for-or-select variable"}},[t._v("IP")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /root/.ssh/known_hosts:3\nMatching "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /root/.ssh/known_hosts:4\nExiting, you have requested strict checking.\nHost key verification failed.\nfatal: Could not "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" from remote repository.\n\nPlease "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" sure you have the correct access rights\nand the repository exists.\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 警告:“github.com”的 ecdsa 主机密钥与 ip 地址“20.205.243.166”的密钥不同，更新了github的ssh key导致的~")]),t._v("\n\n")])])]),e("p",[t._v("权限问题：登录服务器，修改 "),e("code",[t._v("/lib/systemed/system/jenkins.service")]),t._v(" 文件，将 "),e("code",[t._v("User=jenkins")]),t._v(" 修改为 "),e("code",[t._v("User=root")]),t._v("，表示给 Jenkins 赋权限。修改配置文件后记得重启服务。")]),t._v(" "),e("p",[t._v("ssh key不一致问题：最简单粗暴的方法就是ssh登录服务器，"),e("strong",[t._v("直接删除"),e("code",[t._v("~/.ssh/known_hosts")]),t._v("文件")]),t._v("，然后再重新clone~")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/orgs/community/discussions/50878",target:"_blank",rel:"noopener noreferrer"}},[t._v("Has GitHub changed his remote host key"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("jenkins部署, 准备从git上拉取代码时报错：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("You"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'re using '")]),t._v("Known hosts "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' strategy to verify ssh host keys, but your known_hosts file does not exist, please go to '")]),t._v("Manage Jenkins"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' -> '")]),t._v("Configure Global Security"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' -> '")]),t._v("Git Host Key Verification Configuration' and configure "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key verification.\n")])])]),e("blockquote",[e("p",[t._v("应该是服务器上的"),e("code",[t._v("known_hosts")]),t._v("文件被误删了，该文件会把每一个访问过服务器的公钥（public key）保存下来，这里服务器准备访问github，但"),e("code",[t._v("known_hosts")]),t._v("被删了，公钥核验不通过，就会报错；")])]),t._v(" "),e("p",[t._v("解决方法："),e("code",[t._v("ssh")]),t._v("登录服务器，手动"),e("code",[t._v("git clone")]),t._v("一个项目到服务器，会提示是否添加"),e("code",[t._v("github")]),t._v("的"),e("code",[t._v("rsa")]),t._v("信息到"),e("code",[t._v("known_hosts")]),t._v("，按提示输入"),e("code",[t._v("yes")]),t._v("后就会自动添加上了；之后"),e("code",[t._v("git clone")]),t._v("就不会报错了~")]),t._v(" "),e("ul",[e("li",[t._v("jenkins部署时报错：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("SSH: Connecting from "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("iz2zef9ue9eyhqrvjxs3aqz"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nSSH: Connecting with configuration "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("阿里云"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nERROR: Exception when publishing, exception message "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Failed to connect and initialize SSH connection. Message: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Failed to connect session "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("阿里云"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(". Message "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Auth fail "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" methods "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'publickey,gssapi-keyex,gssapi-with-mic'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nBuild step "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Send build artifacts over SSH'")]),t._v(" changed build result to UNSTABLE\nFinished: UNSTABLE\n")])])]),e("blockquote"),t._v(" "),e("h2",{attrs:{id:"备注"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[t._v("#")]),t._v(" 备注")]),t._v(" "),e("h3",{attrs:{id:"jenkins工作目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jenkins工作目录"}},[t._v("#")]),t._v(" jenkins工作目录")]),t._v(" "),e("p",[t._v("jenkins默认安装目录是在："),e("code",[t._v("/var/lib/jenkins")]),t._v("，可在"),e("code",[t._v("系统管理 => 系统配置 => 主目录")]),t._v("中查看~")]),t._v(" "),e("p",[t._v("当执行构建任务时，Jenkins 的执行目录是 "),e("code",[t._v("/var/lib/jenkins/workspace/deploy-test01")]),t._v(", 前面的"),e("code",[t._v("/var/lib/jenkins/workspace/")]),t._v("是前缀，后面的"),e("code",[t._v("deploy-test01")]),t._v("是构建任务名称。")]),t._v(" "),e("h3",{attrs:{id:"添加-ssh-username-with-private-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加-ssh-username-with-private-key"}},[t._v("#")]),t._v(" 添加 SSH Username with private key")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("ssh登录服务器，进入"),e("code",[t._v("vim /root/.ssh/id_rsa")]),t._v(", 复制private key;")])]),t._v(" "),e("li",[e("p",[t._v("Credentials > 添加 > 类型选【SSH Username with private key】 > 范围选【全局】，Username自定义 > Private Key处点击【Enter directly】, 【Add】，粘贴 > 保存；")])])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/tt75281920/article/details/105434989",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jenkins连接gitlab报错：returned status code 128"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"查看内存占用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查看内存占用"}},[t._v("#")]),t._v(" 查看内存占用")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# free 命令是Linux系统中最简单和最常用的内存查看命令")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -m 选项是以MB为单位来展示内存使用信息; -h 选项则是以人类(human)可读的单位来展示。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ebook-admin-vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# free -h")]),t._v("\n              total        used        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("      shared  buff/cache   available\nMem:           "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".8G        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".5G         77M        460K        188M        116M\nSwap:            0B          0B          0B\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ebook-admin-vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# free -m")]),t._v("\n              total        used        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("      shared  buff/cache   available\nMem:           "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1837")]),t._v("        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1571")]),t._v("          "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("76")]),t._v("           "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("189")]),t._v("         "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("116")]),t._v("\nSwap:             "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("           "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##### Mem这一行表示内存信息；Swap 这一行表示交换内存")]),t._v("\ntotal 表示总共有 1837MB 的物理内存"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RAM"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，即1.8G。\nused 表示物理内存的使用量，大约是 1571M。\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" 表示空闲内存"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nshared 表示共享内存?"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbuff/cache 表示缓存和缓冲内存量"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Linux 系统会将很多东西缓存起来以提高性能，这部分内存可以在必要时进行释放，给其他程序使用。\navailable 表示可用内存"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n */\n\n\n")])])]),e("h3",{attrs:{id:"top-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#top-命令"}},[t._v("#")]),t._v(" top 命令")]),t._v(" "),e("blockquote",[e("p",[t._v("一般用于查看进程的CPU和内存使用情况~")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# CentOS")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" -o %MEM  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看内存")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" -o %CPU  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看cpu")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# mac")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" -o mem\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" -o cpu\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看内存")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz ebook-admin-vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# top -o %MEM")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),t._v(" - 01:19:09 up "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("186")]),t._v(" days,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(":58,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" user,  load average: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.05")]),t._v("\nTasks:  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("87")]),t._v(" total,   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" running,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("86")]),t._v(" sleeping,   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" stopped,   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" zombie\n%Cpu"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.8")]),t._v(" us,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.7")]),t._v(" sy,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" ni, "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("98.5")]),t._v(" id,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" wa,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" hi,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" si,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" st\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# KiB Mem 和 KiB Swap 这两行： 表示内存的总量、使用量，以及可用量。")]),t._v("\nKiB Mem "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1881776")]),t._v(" total,    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("70156")]),t._v(" free,  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1609356")]),t._v(" used,   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("202264")]),t._v(" buff/cache\nKiB Swap:        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" total,        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" free,        "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" used.   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("119020")]),t._v(" avail Mem\n\n  PID "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("USER")]),t._v("      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("24208")]),t._v(" jenkins   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3317808")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("730432")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("9468")]),t._v(" S   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("38.8")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(":35.81 java\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16584")]),t._v(" root      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v(".8g "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("470364")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2212")]),t._v(" S   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("25.0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("578")]),t._v(":37.80 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" /root/ngin\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1244")]),t._v(" mysql     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1490140")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("122876")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("684")]),t._v(" S   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.5")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("171")]),t._v(":49.30 mysqld\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20274")]),t._v(" root      "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" -10  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("167036")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("39552")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1944")]),t._v(" S   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.7")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("258")]),t._v(":36.61 AliYunDunMonito\n")])])]),e("h3",{attrs:{id:"centos查看文件占用空间大小"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos查看文件占用空间大小"}},[t._v("#")]),t._v(" centos查看文件占用空间大小")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("du")]),t._v(" -sh "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前目录总共占的容量。而不单独列出各子项占用的容量")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("du")]),t._v(" -sh * "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),t._v(" -n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 统计当前文件夹(目录)大小，并按文件大小排序")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("du")]),t._v(" -sk filename    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看指定文件大小")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("du")]),t._v(" -lh --max-depth"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看当前目录下一级子文件和子目录占用的磁盘容量")]),t._v("\n")])])]),e("h3",{attrs:{id:"scp命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scp命令"}},[t._v("#")]),t._v(" scp命令")]),t._v(" "),e("blockquote",[e("p",[t._v("SCP (Secure Copy) 是一种在 Linux 和 Unix 系统之间进行文件传输的方式。它使用 SSH (Secure Shell) 协议进行加密，可以安全地、可靠地将文件从一个系统复制到另一个系统。")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("基本语法："),e("code",[t._v("scp [options] source_file destination_file")])])]),t._v(" "),e("li",[e("p",[t._v("将本地文件复制到远程服务器："),e("code",[t._v("scp local_file user@remote_host:remote_folder")])])]),t._v(" "),e("li",[e("p",[t._v("SCP命令默认使用22号端口进行传输，但是有时候需要使用其他端口进行传输。可以使用-P选项指定端口号。")])])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将本地文件 /home/user/test.txt 复制到远程服务器 192.168.1.100 的 /home/user 目录下:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" /home/user/test.txt user@192.168.1.100:/home/user/\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用端口号 2222 将本地文件复制到远程服务器 192.168.1.100 的 /home/user 目录下")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" -P "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2222")]),t._v(" /home/user/test.txt user@192.168.1.100:/home/user/\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" -r  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -r 递归复制整个目录")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" -v  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SCP命令默认不显示传输进度，但是可以使用-v选项显示详细输出，包括传输进度")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SCP命令默认复制所有文件，但是有时候只需要复制新文件。可以使用-u选项只复制新文件。")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" -ru /home/user/test user@192.168.1.100:/home/user/\n\n\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("scp")]),t._v(" /home/user/*.test user@192.168.1.100:/home/user/ "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 通配符匹配：将本地目录下所有以.test结尾的文件复制到远程服务器的/home/user目录下")]),t._v("\n\n")])])]),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/tott_0322/article/details/88107026",target:"_blank",rel:"noopener noreferrer"}},[t._v("scp命令详解"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7191076198506561573",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何使用jenkins搭建一个中小企业前端项目部署环境"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7144989607757611045",target:"_blank",rel:"noopener noreferrer"}},[t._v("CentOS 安装Jenkins踩坑"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7102360505313918983",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端工程化：保姆级教学 Jenkins 部署前端项目"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://juejin.cn/post/6896151951545729031",target:"_blank",rel:"noopener noreferrer"}},[t._v("写给前端的 Jenkins 教程——10分钟实现前端/ Node.js 项目的 CI/CD"),e("OutboundLink")],1)])])])])}),[],!1,null,null,null);s.default=a.exports}}]);
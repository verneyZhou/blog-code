(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{685:function(t,s,e){"use strict";e.r(s);var a=e(8),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vercel部署笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vercel部署笔记"}},[t._v("#")]),t._v(" Vercel部署笔记")]),t._v(" "),e("h2",{attrs:{id:"vercel简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vercel简介"}},[t._v("#")]),t._v(" Vercel简介")]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://vercel.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vercel"),e("OutboundLink")],1),t._v(" 是由 Guillermo Rauch 创立的云服务公司，前身为 Zeit，有 "),e("a",{attrs:{href:"https://nextjs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Next.js"),e("OutboundLink")],1),t._v("、Node.js 的 websocket 框架 socket.io 和 MongoDB 客户端 "),e("a",{attrs:{href:"http://www.mongoosejs.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mongoose"),e("OutboundLink")],1),t._v(" 等知名开源项目为大众所知。")])]),t._v(" "),e("p",[t._v("Vercel 是一个"),e("strong",[t._v("面向现代 Web 应用程序的全球托管平台")]),t._v("，可以帮助开发者在不需要管理服务器的情况下，轻松地将网站和应用程序部署到各种基础架构之上。它提供了一个强大的、可扩展的平台，可以让开发者在不同的平台和环境中部署和管理他们的代码。")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://github.com/vercel",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/vercel"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://vercel.com/docs",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vercel官方文档"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://vercel.com/docs/concepts/get-started",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vercel快速上手"),e("OutboundLink")],1)])])]),t._v(" "),e("blockquote",[e("p",[t._v("Vercel 是一个云服务平台，支持静态网站（纯静态页面，没有接口数据交互）和动态网站的应用部署、预览和上线。同类的平台有Netlify 和 Github Pages，相比之下，vercel 国内的访问速度更快，并且提供Production环境和development环境，对于项目开发非常的有用的，并且支持持续集成，一次push或者一次PR会自动化构建发布，发布在development环境，都会生成不一样的链接可供预览。")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("特点")]),t._v(" "),e("ul",[e("li",[t._v("从开发到生产，Vercel 的内置 CI/CD 可以轻松自动化您的工作流程，从而简化协作。")]),t._v(" "),e("li",[t._v("专为 Web 设计的无服务器存储")]),t._v(" "),e("li",[t._v("Vercel 与 Github 仓库关联，当仓库代码有变动的时候，就会自动触发 Vercel 的部署。")]),t._v(" "),e("li",[t._v("支持自定义域名")]),t._v(" "),e("li",[t._v("支持很多前端框架，例如 next.js，vitepress 等。")]),t._v(" "),e("li",[t._v("支持 Serverless Function，可以很方便的写一些后端 API 接口。")])])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("优势")])])]),t._v(" "),e("ol",[e("li",[t._v("个人版永久免费，每个月 100G 带宽（别人访问你的项目所耗费的流量）），个人项目部署完全够用，需要注意的是团队模式收费;")]),t._v(" "),e("li",[t._v("内置 "),e("code",[t._v("CI CD")]),t._v("，只需要将项目导入 vercel ，一句命令自动部署，上手成本极低;")]),t._v(" "),e("li",[t._v("Vercel支持各种编程语言和框架，使开发人员能够使用他们喜欢的工具构建和部署应用程序: "),e("code",[t._v("Next.js, Nuxt.js, Svelte, ...")])]),t._v(" "),e("li",[t._v("Vercel实施了多种安全功能和实践来保护用户数据和应用程序："),e("code",[t._v("自动 SSL, DDoS 保护, ...")])])]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Vercel用例")])])]),t._v(" "),e("blockquote",[e("p",[t._v("Vercel是一个多功能平台，可用于各种用例。以下是Vercel的一些最常见的用例:")])]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("Web 应用程序")]),t._v(": 如果您希望构建和启动快速响应的Web应用程序，Vercel是必经之路！它针对性能进行了优化，将帮助您提供一流的用户体验。")]),t._v(" "),e("li",[e("strong",[t._v("静态网站")]),t._v(": Vercel也非常适合托管和部署静态网站。无论您的用户身在何处，它们都能快速加载并无缝工作。")]),t._v(" "),e("li",[e("strong",[t._v("无服务器函数")]),t._v(": 想要为应用程序构建后端逻辑，而无需使用专用服务器？Vercel为您提供了对无服务器功能的支持。")]),t._v(" "),e("li",[e("strong",[t._v("渐进式 Web 应用程序")]),t._v(": Vercel 还可以轻松构建和部署跨多个设备和平台工作的 PWA。")]),t._v(" "),e("li",[e("strong",[t._v("电子商务网站")]),t._v(": 如果您正在构建一个可组合的商业店面，Vercel 是一个绝佳的选择。它针对这些网站进行了优化，并支持流行的电子商务框架，如 Shopify 和 Magento.")]),t._v(" "),e("li",[e("strong",[t._v("开发人员作品集")]),t._v(": 最后，如果您是希望展示您的作品的开发人员，Vercel 是构建和部署您的作品集的绝佳选择。它们支持流行的前端框架，如 React 和 Next.js，因此您可以真正制作自己的框架。")])]),t._v(" "),e("h2",{attrs:{id:"例一-vercel部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例一-vercel部署"}},[t._v("#")]),t._v(" 例一：Vercel部署")]),t._v(" "),e("blockquote",[e("p",[t._v("这里通过手动部署一个项目来实践一下~")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("首先是新建一个项目，这里假设你的项目已经建好，并已经"),e("code",[t._v("push")]),t._v("到github上了；这里我以"),e("a",{attrs:{href:"https://github.com/verneyZhou/githook-vite-test",target:"_blank",rel:"noopener noreferrer"}},[t._v("githook-vite-test"),e("OutboundLink")],1),t._v("为例进行部署；")])]),t._v(" "),e("li",[e("p",[t._v("之后进入"),e("a",{attrs:{href:"https://vercel.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vercel官网"),e("OutboundLink")],1),t._v("，第一次进来需要注册账号；有 github 账号的也可以直接用github登录（推荐）；")])])]),t._v(" "),e("blockquote",[e("p",[t._v("登录成功后需要选择"),e("code",[t._v("Hobby模式")]),t._v("还是"),e("code",[t._v("Pro模式")]),t._v("，像我们自己玩的选择"),e("code",[t._v("Hobby模式")]),t._v("就可以了~")])]),t._v(" "),e("p",[t._v("账号创建成功后，就可以开始导入项目了~")]),t._v(" "),e("blockquote",[e("p",[t._v("在"),e("code",[t._v("Vercel")]),t._v("上你可以基于它提供的模板快速创建项目，如："),e("code",[t._v("Next.js, Vite, Nuxt.js, Svelte, ...")]),t._v("，也可以拉取"),e("code",[t._v("github")]),t._v("上自己新建的项目来快速部署~")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("首先进入"),e("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),e("OutboundLink")],1),t._v("，点击右上角头像 >> 【Settings】，如图所示安装"),e("code",[t._v("Vercel")]),t._v("；之后就点击【Configure】进行配置；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel01.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("之后就可以选择需要关联"),e("code",[t._v("Vercel")]),t._v("的项目，选择完后，【Save】即可~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel02.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("通过授权Github给Vercel后，就可以选择我们要部署的项目Github仓库~")])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("之后回到"),e("code",[t._v("Vercel")]),t._v("页面，会看到你的账号下就会看到刚添加的项目，直接【Import】即可；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel03.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("import之后需要简单配置下，一般就是你项目的打包命令和打包输出文件；配置完成后，直接【Deploy】，等待部署完成；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel04.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[t._v("不出意外部署成功后，就可以进去到这个页面，点击"),e("a",{attrs:{href:"https://githook-vite-test.vercel.app",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://githook-vite-test.vercel.app"),e("OutboundLink")],1),t._v("就可以访问到刚部署的项目了~~！！！")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel05.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("Vercel配置时默认关联的是"),e("code",[t._v("main")]),t._v("分支，以后只要是"),e("code",[t._v("main")]),t._v("分支的更改"),e("code",[t._v("push")]),t._v("到仓库里，"),e("code",[t._v("Vercel")]),t._v("就会自动拉取代码，自动部署了，不需要单独配置"),e("code",[t._v("Git Actions")]),t._v("，可以说是很简单好用了~~")])]),t._v(" "),e("p",[t._v("注：Vercel 能自动部署，且已经做了提前预设：假设你的代码变动发生在 "),e("code",[t._v("main")]),t._v(" 或者 "),e("code",[t._v("master")]),t._v(" 分支，那么 "),e("code",[t._v("vercel")]),t._v(" 就会自动构建部署生产环境，除此之外的分支，vercel 都会更新预览（测试）环境。")]),t._v(" "),e("ul",[e("li",[t._v("Vercel操作面板：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel06.jpeg"),width:"auto"}}),t._v(" "),e("h2",{attrs:{id:"例二-vercel-cli部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例二-vercel-cli部署"}},[t._v("#")]),t._v(" 例二：Vercel-Cli部署")]),t._v(" "),e("blockquote",[e("p",[t._v("如果你不想每次都在Vercel官网上手动点击部署，也可以通过"),e("code",[t._v("Vercel cli")]),t._v("在命令行进行部署，操作也比较简单~")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("首先是在本地重新创建一个项目，简单修改一下，本地启动运行，打包没问题即可；之后就可以开始准备部署了；")])]),t._v(" "),e("li",[e("p",[t._v("先全局安装vercel的脚手架工具："),e("code",[t._v("npm i -g vercel")]),t._v("；安装完成后也可通过"),e("code",[t._v("vercel -v")]),t._v("查看是否安装成功；")])])]),t._v(" "),e("blockquote",[e("p",[t._v("用脚本部署项目可以直接用"),e("code",[t._v("vercel-cli")]),t._v("部署本地项目，无需将项目推送到github，也无需授权，按提示操作即可~")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("vercel安装完成后，输入："),e("code",[t._v("vercel login")]),t._v(" 进行登录；")])]),t._v(" "),e("blockquote",[e("p",[t._v("执行该命令后会让你选择用哪个平台登陆，选择"),e("code",[t._v("GitHub")]),t._v("即可，之后会自动打开浏览器进行权限认证，认证成功后即登陆成功；")])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("然后项目里可以做一些修改，然后"),e("code",[t._v("npm run build")]),t._v("本地打包；之后执行："),e("code",[t._v("vercel --prod")]),t._v("开始部署：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果部署的是一个本地新创建的项目：")]),t._v("\n➜  nest-test-project git:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ vercel --prod\nVercel CLI "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("32.5")]),t._v(".0\n? Set up and deploy “~/test-code/nest-test-project”? "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Y/n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" y\n? Which scope "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" you want to deploy to? verneyzhou\n? Link to existing project? "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("y/N"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" n\n? What’s your project’s name? nest-test-project\n? In "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" directory is your code located? ./dist\n❗️  The vercel.json "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" should be inside of the provided root directory.\n❗️  The "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("name"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" property "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" vercel.json is deprecated "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("https://vercel.link/name-prop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n🔗  Linked to verneyzhou/nest-test-project "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("created .vercel and added it to .gitignore"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n🔍  Inspect: https://vercel.com/verneyzhou/nest-test-project/219SsSAaZ5Tsr9BHLqLoGgWB7T3T "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("6s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n✅  Production: https://nest-test-project-pxdu9y7fv-verneyzhou.vercel.app "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("6s"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("按提示操作后，等待部署；部署成功后访问"),e("a",{attrs:{href:"https://vercel.com/dashboard",target:"_blank",rel:"noopener noreferrer"}},[t._v("dashboard"),e("OutboundLink")],1),t._v("就会发现刚才本地新建的项目添加上去了；再次访问"),e("a",{attrs:{href:"https://nest-test-project-eight.vercel.app",target:"_blank",rel:"noopener noreferrer"}},[t._v("nest-test-project-eight.vercel.app"),e("OutboundLink")],1),t._v("就能访问到项目内容了~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel101.jpeg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("上面说明没有跟Github关联："),e("code",[t._v("No Git Repository connected")])])]),t._v(" "),e("p",[t._v("同时也会发现在部署成功后在原项目中会多出来一个"),e("code",[t._v(".vercel")]),t._v("文件夹~")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v(".vercel/\n    -- project.json "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 里面会生成 projectId 和 orgId")]),t._v("\n")])])]),e("ul",[e("li",[e("strong",[t._v("Velcel命令")])])]),t._v(" "),e("p",[t._v("vercel 其实也分为开发环境，预览环境（测试环境）以及生产环境三个概念，在 vercel 团队版，你甚至能在预览环境直接进行评论（而且评论也能集成到 slack，挺符合目前我们的生态），比如 UI 觉得某些页面还原度不够他就能在预览环境进行评论，所以不同环境确实有本质上的区别以及作用。")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("vercel dev")]),t._v(": 这个命令用于启动本地的开发环境。它会模拟 Vercel 的云环境，让你可以在本地进行开发和测试。使用这个命令，你可以实时看到你的更改效果，而不需要将它们部署到预览或生产环境;")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("vercel")]),t._v(": 这个命令用于将你的项目部署到 Vercel 的预览环境。预览环境是一个为了测试和分享而设立的临时环境，你可以在里面看到你的更改会在生产环境中出现的样子。这个命令非常适用于团队合作的场景，你可以用它来分享你的更改，获取反馈，然后在推向生产环境之前进行进一步的调整。")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("vercel --prod")]),t._v("： 这个命令会将你的应用部署到生产环境。生产环境通常代表了你的应用的正式发布版本，所部署的内容会对公众可见。这个命令就是将你的项目部署上线的最终步骤。")])])]),t._v(" "),e("h2",{attrs:{id:"例三-git-actions自动部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例三-git-actions自动部署"}},[t._v("#")]),t._v(" 例三：Git-Actions自动部署")]),t._v(" "),e("blockquote",[e("p",[t._v("上面例一直接在"),e("code",[t._v("Vercel")]),t._v("管理面板添加"),e("code",[t._v("Github")]),t._v("项目可以实现代码推送自动部署；但例二部署本地项目时，就需要手动输入脚本执行；那有什么方法可以自动部署我们本地新创建的项目呢？除了采用例一的方法，还可以通过配置 "),e("code",[t._v("Git Actions")]),t._v(" 来实现~")])]),t._v(" "),e("blockquote",[e("p",[t._v("接下来我们通过配置"),e("code",[t._v("Github Actions")]),t._v("实现自动部署~")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("这里继续以例二的项目进行实践；由于该项目还在本地，所以首先得先将该项目推送到"),e("code",[t._v("Github")]),t._v("："),e("a",{attrs:{href:"https://github.com/verneyZhou/nest-test-project",target:"_blank",rel:"noopener noreferrer"}},[t._v("nest-test-project"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[t._v("之后在该项目根目录下新建"),e("code",[t._v(".github/workflows/deploy.yml")]),t._v("文件：")])])]),t._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到 Vercel")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" main "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 监听main分支push操作")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" main "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 监听main分支pull_request操作")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-deploy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务器环境")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v1\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install Node.js\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v1  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 node 环境")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'16'")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的node版本")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cache\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存命中结果会存储在steps.[id].outputs.cache-hit里，该变量在继后的step中可读")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dependencies\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/cache@v3\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./node_modules "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存文件目录的路径")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" runner.os "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" hashFiles('"),e("span",{pre:!0,attrs:{class:"token important"}},[t._v("**/package-lock.json')")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# key中定义缓存标志位的生成方式。runner.OS指当前环境的系统")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restore-keys")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          ${{ runner.os }}-node-")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install npm dependencies\n      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果缓存标志位没命中，则执行该step。否则就跳过该step")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" steps.cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dependencies.outputs.cache"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hit "),e("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" 'true'\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install\n\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Run build\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm run build "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy to Vercel "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到 Vercel")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npx vercel "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("token $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("VERCEL_TOKEN"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("prod\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("VERCEL_TOKEN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.VERCEL_TOKEN "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("VERCEL_PROJECT_ID")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.VERCEL_PROJECT_ID "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("VERCEL_ORG_ID")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.VERCEL_ORG_ID "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("在上面的脚本最后"),e("code",[t._v("Deploy to Vercel")]),t._v("需要用到几个变量来授权登录部署，接下来配置一下：")])]),t._v(" "),e("ul",[e("li",[t._v("首先创建"),e("code",[t._v("VERCEL_TOKEN")]),t._v(": 进入Vercel"),e("a",{attrs:{href:"https://vercel.com/account",target:"_blank",rel:"noopener noreferrer"}},[t._v("设置"),e("OutboundLink")],1),t._v("页面 ==> 【Tokens】 ==> Create Token:")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel102.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("创建成功后需要复制生成的Token~")])]),t._v(" "),e("ul",[e("li",[t._v("打开项目Github页面 => 点击【Settings】，点击【New repository secret】添加 "),e("code",[t._v("Actions Secret")]),t._v("；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel103.jpg"),width:"auto"}}),t._v(" "),e("ul",[e("li",[t._v("这里"),e("code",[t._v("VERCEL_TOKEN")]),t._v("就是刚才在Vercel中创建的Token；"),e("code",[t._v("VERCEL_PROJECT_ID")]),t._v("就是项目"),e("code",[t._v(".vercel/project.json")]),t._v("文件中生成的"),e("code",[t._v("projectId")]),t._v("；"),e("code",[t._v("VERCEL_ORG_ID")]),t._v("就是生成的"),e("code",[t._v("orgId")]),t._v("；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel104.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("至此，我们的配置工作就已经完成了，之后在"),e("code",[t._v("main")]),t._v("分支做一些修改，"),e("code",[t._v("git push")]),t._v("推上去；之后就能在"),e("code",[t._v("github")]),t._v("的"),e("code",[t._v("Actions")]),t._v("中看到"),e("code",[t._v("deploy.html")]),t._v("的脚本在自动执行；")])]),t._v(" "),e("p",[t._v("不出意外执行结束即表示部署成功，这时在Velcel的"),e("a",{attrs:{href:"https://vercel.com/verneyzhou/nest-test-project/deployments",target:"_blank",rel:"noopener noreferrer"}},[t._v("Deployment"),e("OutboundLink")],1),t._v("就会看到新的部署记录，重新访问生成的url就可看到修改的内容了~~！！！")]),t._v(" "),e("h2",{attrs:{id:"其他"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),e("h3",{attrs:{id:"配置域名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置域名"}},[t._v("#")]),t._v(" 配置域名")]),t._v(" "),e("ul",[e("li",[t._v("在Vercel如果不想用它给我们提供的域名，也可以配置第三方域名：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel07.jpeg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("但个人配置的域名必须是有效域名，不然会校验不通过；可去域名管理处添加解析，解析"),e("code",[t._v("CNAME")]),t._v("到"),e("code",[t._v("cname.vercel-dns.com")]),t._v("~")])]),t._v(" "),e("ul",[e("li",[t._v("进入"),e("a",{attrs:{href:"https://dns.console.aliyun.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里云域名解析"),e("OutboundLink")],1),t._v(", 【解析设置】 > 【添加记录】；输入上面Vercel中的值，保存~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel108.jpeg"),width:"auto"}}),t._v(" "),e("ul",[e("li",[t._v("添加成功后，重新添加域名: "),e("code",[t._v("githook.verneyzhou-code.cn")]),t._v(", 就可以保存成功了；之后访问"),e("a",{attrs:{href:"https://githook.verneyzhou-code.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://githook.verneyzhou-code.cn/"),e("OutboundLink")],1),t._v("即可访问项目了~")])]),t._v(" "),e("h3",{attrs:{id:"添加serverless接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加serverless接口"}},[t._v("#")]),t._v(" 添加Serverless接口")]),t._v(" "),e("ul",[e("li",[t._v("什么是 Serverless？")])]),t._v(" "),e("p",[t._v("Serverless 又叫无服务器，是一种计算模型，这种模型使开发人员能够构建和运行应用程序而无需管理底层的服务器基础设施。 在传统的服务器模型中，开发人员需要自行购买、配置和管理服务器来运行应用程序。 而在 Serverless 模型中，开发人员只需关注应用程序的代码逻辑，而不需要担心服务器的管理。")]),t._v(" "),e("blockquote",[e("p",[t._v("Vercel 提供了 Serverless Function，而且支持各种前端框架的 Serverless 部署解决方案；用vercel部署Serverless Api，不购买云服务器也能拥有自己的动态网站~")])]),t._v(" "),e("p",[t._v("这里以例一项目继续实践，添加Serverless接口：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("首先是安装vercel的脚手架工具："),e("code",[t._v("npm i -g vercel")]),t._v("；安装完成后也可通过"),e("code",[t._v("vercel -v")]),t._v("查看是否安装成功；之后"),e("code",[t._v("vercel login")]),t._v("登录；")])]),t._v(" "),e("li",[e("p",[t._v("创建接口：根目录新增"),e("code",[t._v("api/")]),t._v("文件夹，里面添加接口：")])])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// api/hello.js")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'===hello===req'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello! this is a test vercel serverless api'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("这里是js写法，也可以用ts，但需要安装"),e("code",[t._v("@vercel/node")]),t._v("，这里不阐述了~")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("根目录新增"),e("code",[t._v("vercel.json")]),t._v("，自定义配置信息：")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vercel.json")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vercel 允许响应携带自定义的协议头，例如设置允许跨域的协议头。")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"headers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"source"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/(.*)"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"headers"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Origin"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Headers"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"content-type"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"key"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Access-Control-Allow-Methods"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DELETE,PUT,POST,GET,OPTIONS"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[e("code",[t._v("vercel.json")]),t._v("可覆盖默认配置信息，具体配置信息参考这里："),e("a",{attrs:{href:"https://vercel.com/docs/projects/project-configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuring Projects with vercel.json"),e("OutboundLink")],1)])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("本地开发：vercel dev --listen 3037")])]),t._v(" "),e("blockquote",[e("p",[t._v("可指定端口号，command参考："),e("a",{attrs:{href:"https://vercel.com/docs/cli/dev",target:"_blank",rel:"noopener noreferrer"}},[t._v("vercel dev"),e("OutboundLink")],1),t._v("；")])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("本地运行起来后，可在前端代码中调用该接口：")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// App.vue")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getHelloAPI")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("/api/hello?name=")]),e("span",{pre:!0,attrs:{class:"token interpolation"}},[e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),e("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        hello"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'====hello'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hello"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'===hello=err'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("执行该事件，如果接口请求成功，表示调用成功~")])]),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("本地接口开发完毕，开始部署：")])]),t._v(" "),e("ul",[e("li",[t._v("方法一："),e("code",[t._v("npm run build")]),t._v("打包，"),e("code",[t._v("vercel prod")]),t._v("直接脚本部署~")]),t._v(" "),e("li",[t._v("方法二："),e("code",[t._v("git push")]),t._v("提交最新修改，自动触发 vercel 部署~")])]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("部署成功后，直接访问"),e("a",{attrs:{href:"https://githook-vite-test.vercel.app/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://githook-vite-test.vercel.app/"),e("OutboundLink")],1),t._v("就可以看到最新修改了；请求"),e("a",{attrs:{href:"https://githook-vite-test.vercel.app/api/hello",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://githook-vite-test.vercel.app/api/hello"),e("OutboundLink")],1),t._v("就访问了新增的接口~")])]),t._v(" "),e("p",[e("strong",[t._v("参考：")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7096849494687350820",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vercel部署Serverless"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/6844904185427673095",target:"_blank",rel:"noopener noreferrer"}},[t._v("你学BFF和Serverless了吗"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"配置数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置数据库"}},[t._v("#")]),t._v(" 配置数据库")]),t._v(" "),e("blockquote",[e("p",[t._v("上面能通过 serverless 部署简单的接口，到这里前端其实已经可以通过 Vercel 来部署一些简单的工具了；但如果想实现一个有 CRUD 功能的项目可能还不够，因为还需要数据库支持~")])]),t._v(" "),e("p",[t._v("这里引入"),e("a",{attrs:{href:"https://cloud.mongodb.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mongodb免费云数据库"),e("OutboundLink")],1),t._v("实现数据持久化，该数据库提供"),e("code",[t._v("512M")]),t._v("免费存储额度，个人使用足够~")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.runoob.com/mongodb/mongodb-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB 教程"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://docs.mongoing.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("MongoDB中文手册|官方文档中文版"),e("OutboundLink")],1)])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("直接开始实践吧，首先创建数据库："),e("a",{attrs:{href:"https://cloud.mongodb.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("cloud.mongodb"),e("OutboundLink")],1),t._v("上注册账号，注册成功后会进入到一个操作面板页面；")])]),t._v(" "),e("li",[e("p",[t._v("【Data Services】选择【Build a Data base】, 选择【FREE】版，服务商和地区随便选，我这里选择的是【Google Clound】 + 【Singapore】; "),e("code",[t._v("name")]),t._v("默认为"),e("code",[t._v("Cluster0")]),t._v(", 可自定义；选完后点击【Create】;")])]),t._v(" "),e("li",[e("p",[t._v("创建成功后配置连接参数：")])])]),t._v(" "),e("ul",[e("li",[t._v("添加"),e("code",[t._v("Database Users")]),t._v("：【SECURITY】=> 【Database Access】， 选择【Password】形式，输入"),e("code",[t._v("用户名+密码")]),t._v("，"),e("code",[t._v("role")]),t._v("选择【Atlas Amin】 => 【Add User】;")])]),t._v(" "),e("blockquote",[e("p",[t._v("这里配置的用户和密码之后在"),e("code",[t._v("Navicat")]),t._v("客户端连接数据库、项目中连接数据库都需要用到~")])]),t._v(" "),e("ul",[e("li",[t._v("添加允许访问改数据库的IP地址: 【SECURITY】=> 【Network Access】=> 【Add IP address】, 选择添加；")])]),t._v(" "),e("blockquote",[e("p",[t._v("这里可以点"),e("code",[t._v("Add current ip address")]),t._v(" 表示添加当前电脑ip地址，点击 "),e("code",[t._v("Allow access from anywhere")]),t._v(" 表示允许所有网络ip地址访问该数据库（这样可能会有风险）")])]),t._v(" "),e("p",[t._v("至此我们已经有了一个属于我们自己的数据库的，可以在"),e("a",{attrs:{href:"https://cloud.mongodb.com/v2/65474095c5df044009ce7a55#/clusters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Database Deployments"),e("OutboundLink")],1),t._v("页面看到刚创建好的"),e("code",[t._v("MongoDB")]),t._v("数据库:")]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel201.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("接下来，我们要通过"),e("code",[t._v("Navicat")]),t._v("数据库可视化管理工具连接一下吧~")])]),t._v(" "),e("p",[t._v("在连接数据库之前，先下载"),e("a",{attrs:{href:"https://www.navicat.com.cn/products/navicat-for-mysql",target:"_blank",rel:"noopener noreferrer"}},[t._v("Navicat"),e("OutboundLink")],1),t._v("客户端~")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("进入"),e("a",{attrs:{href:"https://cloud.mongodb.com/v2/65474095c5df044009ce7a55#/clusters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Database Deployments"),e("OutboundLink")],1),t._v("，选择【Connect】, 选择【Compass】采用图形界面连接；复制如下图所示代码：")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel202.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"5"}},[e("li",[t._v("打开"),e("code",[t._v("Navcat")]),t._v("客户端，左上角点击【连接】，选择新建"),e("code",[t._v("MongoDB")]),t._v("，点击【URI】,输入刚复制的代码，密码输入在添加"),e("code",[t._v("Database Users")]),t._v("时创建的密码，然后【测试连接】，显示连接成功，【保存】；")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel203.jpg"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[t._v("创建连接成功后，进入 Navicat 面板会显示多一条连接数据，双击选中，选择【打开连接】，然后【新建数据库】,数据库名称为"),e("code",[t._v("vercel")]),t._v("；新建成功后【打开数据库】,【新建集合】，集合名称为"),e("code",[t._v("user")]),t._v("; 集合新建成功后，【打开集合】，点击最下方【+】添加一条数据: "),e("code",[t._v('{name:"zhou"}...')]),t._v(", 之后就会显示新增的数据~")])]),t._v(" "),e("img",{attrs:{src:t.$withBase("/images/more/vercel204.jpg"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("这里可以继续新添加几条数据~")])]),t._v(" "),e("p",[t._v("数据库配置连接完成后，接下来就可以在项目中使用它了~")]),t._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[t._v("打开项目，这里继续以例一中项目"),e("a",{attrs:{href:"https://github.com/verneyZhou/githook-vite-test",target:"_blank",rel:"noopener noreferrer"}},[t._v("githook-vite-test"),e("OutboundLink")],1),t._v("继续实践；首先安装"),e("code",[t._v("mongodb")]),t._v(":")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i mongodb\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ts需安装")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i @types/mongodb -D\n")])])]),e("ol",{attrs:{start:"8"}},[e("li",[t._v("新建"),e("code",[t._v("api/getUserName.js")]),t._v("接口：")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// api/getUserName.js")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" MongoClient "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mongodb'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// CONNECTION_STRING变量的值，和之前用Navicat连接的代码不太一样，可以在MongoDB网站后台这里找到")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 并将<password>替换为你的密码")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONNECTION_STRING")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mongodb+srv://zhou-mongodb-user01:<password>@cluster0.8sagmtl.mongodb.net/?retryWrites=true&w=majority'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" database "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vercel'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数据库名称")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" collection "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'userName'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 集合名称")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接MongoDB")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" MongoClient"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CONNECTION_STRING")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("useNewUrlParser")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("useUnifiedTopology")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log('===getUserName===client', client);")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" db "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("db")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("database"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数据库")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" userName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" db"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("collection")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("collection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取集合")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" userName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取集合中的所有数据")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'===getUserName===result'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'success'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'===getUserName===err'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("status")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("code")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("msg")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭连接")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),e("blockquote",[e("p",[t._v("代码中"),e("code",[t._v("CONNECTION_STRING")]),t._v("可在"),e("a",{attrs:{href:"https://cloud.mongodb.com/v2/65474095c5df044009ce7a55#/clusters",target:"_blank",rel:"noopener noreferrer"}},[t._v("Database Deployments"),e("OutboundLink")],1),t._v(" => 【Connect】 => 【Connect to your application】中查看，复制粘贴，然后将密码换成自己配置的密码~")])]),t._v(" "),e("ol",{attrs:{start:"9"}},[e("li",[t._v("接口编写好后，前端代码中调用：")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// App.vue")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getUserNameAPI")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token template-string"}},[e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("/api/getUserName")]),e("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" resJson "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" res"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'====username'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resJson"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        userNameList"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" resJson"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("data "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'===username=err'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("ol",{attrs:{start:"10"}},[e("li",[e("p",[t._v("之后"),e("code",[t._v("vercel dev")]),t._v("启动项目，不出意外的话，应该是能拿到我刚在"),e("code",[t._v("Navicat")]),t._v("中添加的用户数据的；")])]),t._v(" "),e("li",[e("p",[t._v("本地调试没问题的话，就可以部署到"),e("code",[t._v("vercel")]),t._v("生成环境进行使用了，操作前面已经讲过，这里不再赘述了~")])])]),t._v(" "),e("p",[t._v("以上，就算是简单的实现了一个接口对数据库的调用了；参照上述接口，我们可以实现简单的CRUD接口，从而不需要后端，前端就能写接口，连数据库，并且一键部署到Vercel上进行调用了~~！！！")]),t._v(" "),e("p",[e("strong",[t._v("参考：")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/347990778",target:"_blank",rel:"noopener noreferrer"}},[t._v("vercel是什么神仙网站？"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://blog.tangly1024.com/article/vercel-free-serverless-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vercel搭建API 服务，无需服务器"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"报错记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#报错记录"}},[t._v("#")]),t._v(" 报错记录")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("vercel dev")]),t._v("报错：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("➜  client git:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ vercel dev\nVercel CLI "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("32.5")]),t._v(".0\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Running Dev Command “npm install”\n\nup to date, audited "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("127")]),t._v(" packages "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" 1s\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" packages are looking "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" funding\n  run "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" fund"),e("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" details\n\nfound "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" vulnerabilities\n")])])]),e("blockquote",[e("p",[t._v("首先看下是不是"),e("code",[t._v("vercel")]),t._v("版本问题，升级到"),e("code",[t._v("v33+")]),t._v("试下；如果不行检查下 vercel 上面"),e("code",[t._v("Development Command")]),t._v("的配置是否有问题~")])]),t._v(" "),e("h2",{attrs:{id:"备注"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[t._v("#")]),t._v(" 备注")]),t._v(" "),e("h3",{attrs:{id:"原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),e("p",[t._v("略略略~~~")]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://blog.csdn.net/jslygwx/article/details/132801799",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是Vercel？"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7023690214803505166",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于Vercel+Github Action 部署Nest.js项目"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/641263373",target:"_blank",rel:"noopener noreferrer"}},[t._v("快速上手 vercel，手把手教你白嫖部署上线你的个人项目"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/347990778",target:"_blank",rel:"noopener noreferrer"}},[t._v("vercel是什么神仙网站？"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{769:function(t,s,e){"use strict";e.r(s);var a=e(8),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"git使用笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git使用笔记"}},[t._v("#")]),t._v(" git使用笔记")]),t._v(" "),e("h2",{attrs:{id:"git常用操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作"}},[t._v("#")]),t._v(" git常用操作")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"_1-基本操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本操作"}},[t._v("#")]),t._v(" 1. 基本操作")]),t._v(" "),e("ul",[e("li",[t._v("初始化本地Git存储库："),e("code",[t._v("git init")])]),t._v(" "),e("li",[t._v("创建远程存储库的本地副本："),e("code",[t._v("git clone ssh://git@github.com/[username]/[repository-name].git")])]),t._v(" "),e("li",[t._v("检查状态："),e("code",[t._v("git status")])]),t._v(" "),e("li",[t._v("将文件添加到暂存区："),e("code",[t._v("git add [file-name.txt]")])])]),t._v(" "),e("blockquote",[e("p",[t._v("将所有工作区的修改添加到暂存区："),e("code",[t._v("git add .")])])]),t._v(" "),e("ul",[e("li",[t._v("将暂存区的修改进行提交："),e("code",[t._v('git commit -m "[commit message]"')])])]),t._v(" "),e("blockquote",[e("p",[t._v("如果工作区没有添加新的文件，只是在原有文件上进行修改，可以执行"),e("code",[t._v('git commit -am "[commit message]"')]),t._v("直接将工作区的修改进行提交")])]),t._v(" "),e("ul",[e("li",[t._v("删除文件（或文件夹）："),e("code",[t._v("git rm -r [file-name.txt]")])]),t._v(" "),e("li",[t._v("列出本地所有分支："),e("code",[t._v("git branch")])])]),t._v(" "),e("blockquote",[e("p",[t._v("列出包含本地远程的所有分支："),e("code",[t._v("git branch -a")]),t._v("、重命名本地分支："),e("code",[t._v("git branch -m [old branch name] [new branch name]")])])]),t._v(" "),e("ul",[e("li",[t._v("创建一个新分支并切换到该分支："),e("code",[t._v("git checkout -b [branch name]")])])]),t._v(" "),e("blockquote",[e("p",[t._v("切换到已有分支："),e("code",[t._v("git checkout [branch name]")])])]),t._v(" "),e("ul",[e("li",[t._v("合并分支："),e("code",[t._v("git merge [branch name]")])])]),t._v(" "),e("blockquote",[e("p",[t._v("将一个分支合并到一个目标分支："),e("code",[t._v("git merge [source branch] [target branch]")])])]),t._v(" "),e("ul",[e("li",[t._v("将分支推送到你的远程存储库："),e("code",[t._v("git push origin [branch name]")])])]),t._v(" "),e("blockquote",[e("p",[t._v("强推："),e("code",[t._v("git push -f")])])]),t._v(" "),e("ul",[e("li",[t._v("拉取："),e("code",[t._v("git pull")])]),t._v(" "),e("li",[t._v("查看更改："),e("code",[t._v("git log")])]),t._v(" "),e("li",[t._v("合并前预览更改："),e("code",[t._v("git diff [source branch] [target branch]")])])]),t._v(" "),e("h3",{attrs:{id:"_2-删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-删除分支"}},[t._v("#")]),t._v(" 2. 删除分支")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("删除本地分支："),e("code",[t._v("git branch -D branchName")])])]),t._v(" "),e("li",[e("p",[t._v("批量删除本地分支："),e("code",[t._v("git branch |grep 'branchName' |xargs git branch -D")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("这是通过 shell 管道命令来实现的批量删除分支的功能"),e("br"),t._v(" "),e("code",[t._v("git branch")]),t._v(" 输出当前分支列表"),e("br"),t._v(" "),e("code",[t._v("grep")]),t._v(" 是对 git branch 的输出结果进行匹配，匹配值当然就是 "),e("code",[t._v("branchName")]),t._v(" "),e("br"),t._v(" "),e("code",[t._v("xargs")]),t._v(" 的作用是将参数列表转换成小块分段传递给其他命令 "),e("br"),t._v("\n所以这条命令意思为："),e("strong",[t._v("从分支列表中匹配到指定分支，然后一个一个(分成小块)传递给删除分支的命令，最后进行删除")]),t._v("。")])]),t._v(" "),e("ul",[e("li",[t._v("删除gitlab上的远程分支："),e("code",[t._v("git push origin :branch-name")])])]),t._v(" "),e("blockquote",[e("p",[t._v("branch-name为分支名")])]),t._v(" "),e("blockquote",[e("p",[t._v("Q：在gitlab上删除分支后，本地git branch -r还能看到怎么办？"),e("a",{attrs:{href:"https://www.cnblogs.com/lyraLee/p/10916504.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git remote prune --dry-run origin")]),t._v(" 查看当前有哪些是该消失还存在的分支")]),t._v(" "),e("li",[e("code",[t._v("git remote prune origin")]),t._v(" 删除上面展示的所有分支")]),t._v(" "),e("li",[e("code",[t._v("git fetch --prune origin")]),t._v("   如果没有结果输出说明已经删除完成了")])]),t._v(" "),e("h3",{attrs:{id:"_3-查看提交记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-查看提交记录"}},[t._v("#")]),t._v(" 3. 查看提交记录")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("git log -n")]),t._v("  :n为最近提交的次数\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git101.png"),width:"auto"}})])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git log --online")]),t._v("  把每一个提交压缩到一行，默认只显示提交ID和提交信息第一行\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git102.png"),width:"auto"}})])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git log --online -n")]),t._v(" :n是数字，获取最近n次的提交记录")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git log --stat")]),t._v(" :显示每次提交的文件增删数量\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git103.png"),width:"auto"}})])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git log -p")]),t._v("  :输出所有的删改\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git104.png"),width:"auto"}})])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git shortlog -n")]),t._v("  :每个提交按作者分类，显示提交信息第一行；n为数量，默认显示全部提交记录")])])]),t._v(" "),e("blockquote",[e("p",[t._v("如："),e("code",[t._v("git shortlog -10")])])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git105.png"),width:"auto"}}),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v('git log --after="2014-7-1"')]),t._v("  :时间过滤；  或者："),e("code",[t._v('git log --before="......."')])])]),t._v(" "),e("li",[e("p",[e("code",[t._v('git log --author="zhou"')]),t._v("  :作者过滤")])])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.360doc.com/content/16/0519/10/10058718_560380335.shtml",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git reflog")]),t._v("  :查看所有分支的提交记录，包括已经删除和reset的操作！！！而"),e("code",[t._v("git log")]),t._v(" 则看不到被删除的commitID")])]),t._v(" "),e("blockquote",[e("p",[t._v("git log是显示当前的HEAD和它的祖先的，递归是沿着当前指针的父亲，父亲的父亲，…，这样的原则；git reflog根本不遍历HEAD的祖先。它是HEAD所指向的一个顺序的提交列表：它的undo历史。reflog并不是repo（仓库）的一部分，它单独存储，而且不包含在pushes，fetches或者clones里面，它纯属是本地的，可以很好地帮助你恢复你误操作的数据。")])]),t._v(" "),e("h3",{attrs:{id:"_4-版本回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-版本回退"}},[t._v("#")]),t._v(" 4. 版本回退")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git reset --hard HEAD^")]),t._v(" :返回上个版本")])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("适应场景")]),t._v("：如果想恢复到之前某个提交的版本，且那个版本之后提交的版本我们都不要了")])]),t._v(" "),e("blockquote",[e("p",[t._v("此时用"),e("code",[t._v("git push")]),t._v("会报错，因为我们本地库HEAD指向的版本比远程库的要旧，使用"),e("code",[t._v("git push -f")]),t._v("强制推送上去即可")])]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("git reset --hard commitID")]),t._v("  回退到指定版本")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git reset --hard")]),t._v("  撤销失败的合并更改")])])]),t._v(" "),e("blockquote",[e("p",[t._v("彻底回退到某个版本，本地的源码也会变为上一个版本的内容，撤销的commit中所包含的更改被冲掉。")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git reset --soft")]),t._v("  回退到某个版本，只回退"),e("code",[t._v("log")]),t._v("中提交的commit的信息")])]),t._v(" "),e("blockquote",[e("p",[t._v("不会撤销该"),e("code",[t._v("commit")]),t._v("本地的修改，通过"),e("code",[t._v("git status")]),t._v("还能看到本地的修改，可再次通过"),e("code",[t._v("git commit -m...")]),t._v("提交")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013744142037508cf42e51debf49668810645e02887691000",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git revert -n commitID")]),t._v("  :撤销某次操作")])]),t._v(" "),e("blockquote",[e("p",[t._v("git revert 撤销某次操作，此次操作之前和之后的commit和history都会保留，并且把这次撤销，作为一次最新的提交。")])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("-n")]),t._v("是"),e("code",[t._v("--no-commit")]),t._v("的简写，应用这个参数会让revert 改动只限于程序员的本地仓库，而不自动进行commit；然后手动进行git add ,git commit；"),e("strong",[t._v("不加-n则自动生成commit")]),t._v("；")])]),t._v(" "),e("blockquote",[e("p",[t._v("适用场景：如果我们想恢复之前的某一版本（该版本不是merge类型），但是又想保留该目标版本后面的版本，记录下这整个版本变动流程。")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git revert -n commitID1..commitID4")]),t._v("  :撤销某几条连续的commitID")])]),t._v(" "),e("blockquote",[e("p",[t._v("撤销commitID1到commitID4之间的提交，这是一个前开后闭区间，不包括 commitID1，但包括 commitID4")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git cherry-pick commitID")]),t._v("  :”挑拣”提交")])]),t._v(" "),e("blockquote",[e("p",[t._v("注：”挑拣”提交，它会获取某一个分支的单笔提交，并作为一个新的提交引入到你当前分支上。 当我们需要在本地合入其他分支的提交时，如果我们不想对整个分支进行合并，而是只想将某一次提交合入到本地当前分支上，那么就要使用git cherry-pick了。")])]),t._v(" "),e("blockquote",[e("p",[t._v("合并之后如果存在冲突，则解决冲突之后手动commit,或者"),e("code",[t._v("git add .")]),t._v("后，"),e("code",[t._v("git check-pick --continue")]),t._v("；如果没有冲突则自动提交。")])]),t._v(" "),e("p",[e("code",[t._v("git cherry-pick -n commitID")]),t._v("  :不想自动进行提交")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/fightfightfight/article/details/81039050",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"_5-tag操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-tag操作"}},[t._v("#")]),t._v(" 5. tag操作")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git tag")]),t._v(" :查看tag")]),t._v(" "),e("li",[e("code",[t._v("git tag tagName -m '注释'")]),t._v("   :创建tag")]),t._v(" "),e("li",[e("code",[t._v("git push origin tagName")]),t._v("  :提交tag到github")])]),t._v(" "),e("h3",{attrs:{id:"_6-查看git账号"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-查看git账号"}},[t._v("#")]),t._v(" 6. 查看git账号")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git config user.name")]),t._v("   :查看账户名")]),t._v(" "),e("li",[e("code",[t._v("git config user.email")]),t._v("  :查看邮箱")])]),t._v(" "),e("h3",{attrs:{id:"_7-stash-保存未commit的代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-stash-保存未commit的代码"}},[t._v("#")]),t._v(" 7. stash 保存未commit的代码")]),t._v(" "),e("blockquote",[e("p",[t._v("stash 命令能够将还未 commit 的代码存起来。")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存当前未commit的代码")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存当前未commit的代码并添加备注")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash save "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"备注的内容"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 列出stash的所有记录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list\nstash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": WIP on "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nstash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": WIP on "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\nstash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(": On "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用第二条记录")]),t._v("\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply stash@"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除stash的所有记录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用最近一次的stash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用最近一次的stash，随后删除该记录")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除最近的一次stash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash drop\n\n")])])]),e("h3",{attrs:{id:"_8-设置-git-短命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-设置-git-短命令"}},[t._v("#")]),t._v(" 8. 设置 Git 短命令")]),t._v(" "),e("ul",[e("li",[t._v("先设置一条命令，"),e("code",[t._v("git push")]),t._v("等于"),e("code",[t._v("git ps")]),t._v("：")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global alias.ps push\n")])])]),e("ul",[e("li",[t._v("打开全局配置文件")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" ~/.gitconfig\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 会发现配置文件里存在以下内容")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" verneyZhou\n        email "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" verneyZhou@163.com\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alias"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" push\n")])])]),e("blockquote",[e("p",[t._v("之后可以在"),e("code",[t._v("alias")]),t._v("下面手动添加命令，如："),e("code",[t._v("l = log")])])]),t._v(" "),e("ul",[e("li",[t._v("修改成功后，执行"),e("code",[t._v("git l")]),t._v("就能查看log了~")])]),t._v(" "),e("h2",{attrs:{id:"场景应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景应用"}},[t._v("#")]),t._v(" 场景应用")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"代码回滚1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码回滚1"}},[t._v("#")]),t._v(" 代码回滚1")]),t._v(" "),e("ol",[e("li",[t._v("工作区的代码回滚（此时代码的修改还在本地工作区，还没有git add 到缓存区。）")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout a.txt   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 丢弃某个文件，或者")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("       "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 丢弃全部")]),t._v("\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[t._v("缓存区的代码回滚（此时代码已经git add至缓存区，但还没有git commit提交。）")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤回全部")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD a.txt "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤回某个文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个操作会把代码回滚到git add 之前")]),t._v("\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("git commit到本地分支、但没有git push到远程。")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 得到你需要回退一次提交的commit id")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回到其中你想要的某个版本")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回到最新的一次提交")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD^  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此时本地代码保留，回到 git add 之前")]),t._v("\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("git push已经把修改提交到远程仓库。\n"),e("ul",[e("li",[t._v("方法1："),e("code",[t._v("git reset")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 得到你需要回退一次提交的commit id")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin HEAD --force "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制提交一次，之前错误的提交就从远程仓库删除")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或者")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制推送")]),t._v("\n")])])]),e("ul",[e("li",[t._v("方法2："),e("code",[t._v("git revert")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 得到你需要回退一次提交的commit id")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" revert "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销指定的版本，撤销也会作为一次提交进行保存")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n")])])])])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/asoar/article/details/84111841",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"代码回滚2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代码回滚2"}},[t._v("#")]),t._v(" 代码回滚2")]),t._v(" "),e("blockquote",[e("p",[t._v("场景为：基于master新建dev分支进行开发，开发完成，合并到master之后上线，但出现bug，导致master分支需要回滚到合并之前。")])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// master分支")]),t._v("\ngit log "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看提交记录，找到自己merge的提交")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//commit 89e5a9e9867cfcd65e9ff479c91746276c4ce663")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Merge: cb50d57 7a4bdf7   // 一般第一个代表master分支 第二个代表自己的分支")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Author: xxxx <xxx@xxx.com>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Date:   Mon Sep 7 22:07:04 2020 +0800")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Merge branch 'feature/test'")]),t._v("\n\ngit revert "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" commitID  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这样就能撤销自己分支的代码，回滚到合并之前的")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -m代表这次 revert 的是一个 merge commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 数字1 代表保留master分支，撤销自己的分支")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// commitID为提交的合并id")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 然后在自己分支修改bug，重新上线之前如果直接merge到master上，回滚之前的提交会合不上去，因为回滚的时候已经撤销了，")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 先切到master分支,git log找到回滚的commitID")]),t._v("\ngit revert commitID "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 把之前撤销合并时丢弃的代码恢复了回来")]),t._v("\ngit merge dev "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再merge 自己的分支")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 再上线~")]),t._v("\n")])])]),e("p",[e("a",{attrs:{href:"https://www.cnblogs.com/bescheiden/articles/10563651.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("h4",{attrs:{id:"回滚复盘"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#回滚复盘"}},[t._v("#")]),t._v(" 回滚复盘")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("基于"),e("code",[t._v("master")]),t._v("新建分支"),e("code",[t._v("test")]),t._v("，开发完成后："),e("code",[t._v("git merge master")]),t._v(";")])]),t._v(" "),e("li",[e("p",[t._v("然后切换到master分支："),e("code",[t._v("git merge test")]),t._v("，上线")])])]),t._v(" "),e("blockquote",[e("p",[t._v("此时"),e("code",[t._v("git log")]),t._v("，记录如下：")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git201.png"),width:"auto"}}),t._v(" "),e("p",[t._v("最新的记录是一个"),e("code",[t._v("merge commit")]),t._v("，这里是先将mster合到test分支，所以"),e("code",[t._v("1")]),t._v("是test分支最新的commitID，"),e("code",[t._v("2")]),t._v("是master分支最新的commitID~")]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("回滚操作："),e("code",[t._v("git revert -m 2 commitID")])])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("2")]),t._v("是保留master分支的提交，撤销test分支的提交；commitID为最新的"),e("code",[t._v("35784e....")])])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git202.png"),width:"auto"}}),t._v(" "),e("p",[t._v("revert之后会生成一个新的commitID:"),e("code",[t._v("566687...")]),t._v("~")]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[e("p",[e("code",[t._v("master")]),t._v("回滚之后，恢复到合并"),e("code",[t._v("test")]),t._v("分支之前的状态，之后又合进来新的"),e("code",[t._v("commit")]),t._v("；"),e("code",[t._v("test")]),t._v("分支不用回滚，保留"),e("code",[t._v("master")]),t._v("最新的代码，修改bug，又提交了几个"),e("code",[t._v("commit")]),t._v("；")])]),t._v(" "),e("li",[e("p",[t._v("test修复完成，最后上线之前先切换到master分支："),e("code",[t._v("git revert commitID")]),t._v("，撤销之前的revert；这里的commitID为步骤3中master revert的commitID:"),e("code",[t._v("566687...")]),t._v("；")])]),t._v(" "),e("li",[e("p",[t._v("最后，切换到test分支，执行"),e("code",[t._v("git merge master")]),t._v("；再切到master执行："),e("code",[t._v("git merge test")]),t._v("，上线；或者直接在master分支上执行git merge test也可以~")])])]),t._v(" "),e("h2",{attrs:{id:"github新建流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github新建流程"}},[t._v("#")]),t._v(" github新建流程")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"_1-配置git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-配置git"}},[t._v("#")]),t._v(" 1. 配置git")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.runoob.com/w3cnote/git-guide.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"_2-新建项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-新建项目"}},[t._v("#")]),t._v(" 2. 新建项目")]),t._v(" "),e("ul",[e("li",[t._v("开始")])]),t._v(" "),e("blockquote",[e("p",[t._v("点击"),e("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),e("OutboundLink")],1),t._v("，开始新建项目：")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git001.png"),width:"auto"}}),t._v(" "),e("ul",[e("li",[t._v("命名")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git002.png"),width:"auto"}}),t._v(" "),e("ul",[e("li",[t._v("初次提交")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git003.png"),width:"auto"}}),t._v(" "),e("blockquote",[e("p",[t._v("关于"),e("code",[t._v("ssh")]),t._v("和"),e("code",[t._v("https")]),t._v("的区别可看这两个链接："),e("a",{attrs:{href:"https://www.cnblogs.com/dzblog/p/6930147.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ssh原理以及与https的区别"),e("OutboundLink")],1),t._v("、"),e("a",{attrs:{href:"https://www.cnblogs.com/yyds/p/6992125.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("网络数据传输安全及SSH与HTTPS工作原理"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("如果本地无项目，可按上步骤推到git仓库；如果本地已经有项目:")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("第一种:ssh key")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git remote add origin git@github.com:verneyZhou/miniApp3.0.git")])]),t._v(" "),e("li",[e("code",[t._v("git push --set-upstream origin master")])])]),t._v(" "),e("p",[t._v("如果未配置密钥，则会有如下提示，配置密钥流程见下面：")]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git004.png"),width:"auto"}}),t._v(" "),e("p",[t._v("密钥配置成功后，执行第二步，如果配置了密码，需输入id_rsa密码，如下：")]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git005.png"),width:"auto"}})]),t._v(" "),e("li",[e("p",[t._v("第二种：https")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git remote add origin https://github.com/verneyZhou/debug-test.git")])]),t._v(" "),e("li",[e("code",[t._v("git push -u origin master / git push --set-upstream origin master")])])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git006.png"),width:"auto"}}),t._v(" "),e("p",[t._v("或：")]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git007.png"),width:"auto"}})])]),t._v(" "),e("h4",{attrs:{id:"配置密钥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置密钥"}},[t._v("#")]),t._v(" 配置密钥")]),t._v(" "),e("ol",[e("li",[t._v("按上面第一步配置git中流程，如果不需要密码，则一路回车")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git008.png"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("code",[t._v("vim /Users/zhou/.ssh/id_rsa.pub")])])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git009.png"),width:"auto"}}),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("复制，粘贴到github上")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git010.png"),width:"auto"}}),t._v(" "),e("h3",{attrs:{id:"_3-删除项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除项目"}},[t._v("#")]),t._v(" 3. 删除项目")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/xyc_csdn/article/details/72865379?utm_source=itdadao&utm_medium=referral",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("setting")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git011.png"),width:"auto"}}),t._v(" "),e("ul",[e("li",[t._v("delete")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git012.png"),width:"auto"}}),t._v(" "),e("ul",[e("li",[t._v("输入名字")])]),t._v(" "),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/git013.png"),width:"auto"}}),t._v(" "),e("h3",{attrs:{id:"_4-将本地项目推到远程仓库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-将本地项目推到远程仓库"}},[t._v("#")]),t._v(" 4. 将本地项目推到远程仓库")]),t._v(" "),e("ol",[e("li",[e("code",[t._v("git init //初始化仓库")])]),t._v(" "),e("li",[e("code",[t._v("git add .(文件name) //添加文件到本地仓库")])]),t._v(" "),e("li",[e("code",[t._v('git commit -m "first commit" //添加文件描述信息')])]),t._v(" "),e("li",[e("code",[t._v("git remote add origin + 远程仓库地址 //链接远程仓库，创建主分支")])]),t._v(" "),e("li",[e("code",[t._v("git pull origin master // 把本地仓库的变化连接到远程仓库主分支")])])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("git push --set-upstream origin master")]),t._v(" 关联远程仓库master分支")])]),t._v(" "),e("blockquote",[e("p",[t._v("注：如果遇到"),e("code",[t._v("Updates were rejected because the tip of your current branch is behind")]),t._v("即:自己当前版本低于远程仓库版本；执行："),e("code",[t._v("git push -u origin master -f")])])]),t._v(" "),e("ol",{attrs:{start:"6"}},[e("li",[e("code",[t._v("git push -u origin master //把本地仓库的文件推送到远程仓库")])])]),t._v(" "),e("h2",{attrs:{id:"常见问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),e("hr"),t._v(" "),e("ol",[e("li",[e("code",[t._v("git remote add origin")]),t._v("的时候提示："),e("code",[t._v("fatal: remote origin already exists.")]),t._v(" "),e("a",{attrs:{href:"https://blog.csdn.net/qq_40428678/article/details/84074207",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)])]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这时因为你的项目已经关联过远程仓库，先删除关联，再推送~")]),t._v("\n➜  vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin git"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ git remote add origin https"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("verneyZhou"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ebook"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n"),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fatal")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" remote origin already exists"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n➜  vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin git"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ git remote "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 查看已关联远程仓库")]),t._v("\norigin\thttps"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("PanJiaChen"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fetch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\norigin\thttps"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("PanJiaChen"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("push"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n➜  vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin git"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ git remote rm origin "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 删除关联")]),t._v("\n➜  vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin git"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ git remote "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重新关联")]),t._v("\n➜  vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin git"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ git remote add origin https"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("verneyZhou"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ebook"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("vue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 强推")]),t._v("\n➜  vue"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("element"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("admin git"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ git push "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("set"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("upstream origin master "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f\n")])])]),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[t._v("输入"),e("code",[t._v("git branch")]),t._v("报错\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/giterror001.png"),width:"auto"}}),t._v("\n原因：从App Store升级到osx El Capitan，MAC git依附XCode的命令行工具。\n方法：输入 xcode-select --install")])]),t._v(" "),e("li",[e("p",[t._v("输入 "),e("code",[t._v("git checkout master")]),t._v("报错\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/giterror002.png"),width:"auto"}}),t._v("\n原因：Git在使用过程中遭遇了崩溃，部分被上锁资源没有被释放导致的")]),t._v(" "),e("p",[t._v("方法：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("rm -f ./.git/index.lock")])]),t._v(" "),e("li",[e("code",[t._v("cd .git del index.lock")])]),t._v(" "),e("li",[e("code",[t._v("open .git")]),t._v(",之后手动删除index.lock文件")])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("yarn dev")]),t._v("打包报错\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/giterror003.png"),width:"auto"}}),t._v("\n打包文件太多，内存过大，可通过配置扩大内存")])]),t._v(" "),e("li",[e("p",[t._v("未配置ssh key\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/giterror004.png"),width:"auto"}}),t._v("\n配置即可")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git push")]),t._v("失败\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/giterror005.png"),width:"auto"}}),t._v("\nname不对，更改即可~")])])]),t._v(" "),e("ul",[e("li",[t._v("命令行方式修改:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入对应代码库")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/repo\n  \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置用户名（只对当前仓库生效）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your domain name"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置邮箱（只对当前仓库生效）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your email"')]),t._v("\n  \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置用户名（全局生效）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your domain name"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#配置邮箱（全局生效）")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your email"')]),t._v("\n")])])]),e("ul",[e("li",[t._v("直接修改对应配置文件")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("修改当前仓库.git目录下config文件（只对当前仓库生效）；\n修改当前用户目录下.gitconfig文件（全局生效）；\n")])])]),e("blockquote",[e("p",[e("strong",[t._v("修改完成后，一定要再做一次 “非空commit”，然后再push！！！")]),e("br"),t._v("\n原因：我们刚才改的只是配置，但对于以前的commit信息我们是没有做任何修改的，所以我们要再做一次commit，即保证最后一次commit信息是正确的即可。")])]),t._v(" "),e("ol",{attrs:{start:"7"}},[e("li",[e("p",[e("code",[t._v("npm run start")]),t._v("报错\n"),e("img",{staticClass:"zoom-custom-imgs",attrs:{src:t.$withBase("/images/tool/giterror006.png"),width:"auto"}}),t._v("\n用yarn试下~")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git pull")]),t._v("报错：")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("You have not concluded your merge "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MERGE_HEAD exists"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".\nPlease, commit your changes before you can merge.\n")])])]),e("p",[t._v("可能是因为在你以前pull下来的代码没有自动合并导致的.")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 取消某次合并")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge --abort "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果Git版本 >= 1.7.4")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --merge "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果Git版本 >= 1.6.1")]),t._v("\n")])])]),e("p",[t._v("然后再"),e("code",[t._v("git pull")])]),t._v(" "),e("ol",{attrs:{start:"9"}},[e("li",[e("code",[t._v(".DS_Store")]),t._v("问题")])]),t._v(" "),e("blockquote",[e("p",[t._v("DS_Store(英文全称 Desktop Services Store)，处理参考："),e("a",{attrs:{href:"https://www.jianshu.com/p/793788ca7978",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何删除mac中的.DS_Store和git中的.DS_Store"),e("OutboundLink")],1)])]),t._v(" "),e("ol",{attrs:{start:"10"}},[e("li",[t._v("git push 的时候报错："),e("code",[t._v("error: You have not concluded your merge (MERGE_HEAD exists).")])])]),t._v(" "),e("blockquote",[e("p",[t._v("原因可能是在以前pull下来的代码自动合并失败")])]),t._v(" "),e("ul",[e("li",[t._v("舍弃本地代码,远端版本覆盖本地版本(慎重)")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$:git fetch --all\n$:git reset --hard origin/master\n$:git fetch\n")])])]),e("ul",[e("li",[t._v("保留本地的更改,中止合并->重新合并->重新拉取")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("$:git merge --abort\n$:git reset --merge\n$:git pull\n")])])]),e("ol",{attrs:{start:"11"}},[e("li",[t._v("往新建的gitlab项目"),e("code",[t._v("git push")]),t._v("的时候的时候报错："),e("code",[t._v("remote: GitLab: You are not allowed to push code to protected branches on this project.")])])]),t._v(" "),e("blockquote",[e("p",[t._v("使用GitLab系统管理员账户登录，更改代码仓库的master主分支开放权限为：Developers + Maintainers即可。"),e("a",{attrs:{href:"https://blog.csdn.net/weixin_44917045/article/details/123826523",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)])]),t._v(" "),e("ol",{attrs:{start:"12"}},[e("li",[t._v("往新建的gitlab项目"),e("code",[t._v("git push")]),t._v("的时候的时候报错: "),e("code",[t._v("remote: Ask a project Owner or Maintainer to create a default branch:")])])]),t._v(" "),e("blockquote",[e("p",[t._v("这个是gitlab的特性问题，必须要管理员第一次推代码创建master分支；或者把我改成Maintainer角色。")])]),t._v(" "),e("ol",{attrs:{start:"13"}},[e("li",[t._v("把本地项目推送到github仓库时报错：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("➜  jenkins-vite-test git:"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("main"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --set-upstream origin main\nerror: src refspec main does not match any\nerror: failed to push some refs to "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github.com:verneyZhou/jenkins-vite-test.git'")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("可能是github仓库没有main分支，远程随便新建个文件就添加了分支；之后本地代码"),e("code",[t._v("git commit -am...")]),t._v("提交，再 "),e("code",[t._v("git push --set-upstream origin main -f")]),t._v("强推一下~")])]),t._v(" "),e("ol",{attrs:{start:"14"}},[e("li",[t._v("在阿里云服务器上"),e("code",[t._v("git clone")]),t._v("项目报错：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("root@iz2zef9ue9eyhqrvjxs3aqz workspace"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git clone git@github.com:verneyZhou/jenkins-vite-test.git")]),t._v("\n正克隆到 "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'jenkins-vite-test'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nSomeone could be eavesdropping on you right now "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("man-in-the-middle attack"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nIt is also possible that a "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key has just been changed.\nThe fingerprint "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the RSA key sent by the remote "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" is\nSHA256:uNiVztksCsDhcc0u9e8BujQXVUpKZIDTMczCvj3tD2s.\nPlease contact your system administrator.\nAdd correct "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /root/.ssh/known_hosts to get rid of this message.\nOffending RSA key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" /root/.ssh/known_hosts:1\nRSA "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" github.com has changed and you have requested strict checking.\nHost key verification failed.\nfatal: Could not "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("read")]),t._v(" from remote repository.\n\nPlease "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" sure you have the correct access rights\nand the repository exists.\n")])])]),e("blockquote",[e("p",[t._v("当我在github上添加服务器的 ssh key 之后，就报错了~ 可通过执行"),e("code",[t._v("ssh-keygen -R github.com")]),t._v("命令更新"),e("code",[t._v("~/.ssh/known_hosts")]),t._v("信息，然后重新"),e("code",[t._v("git clone")]),t._v("即可~")])]),t._v(" "),e("blockquote",[e("p",[t._v("最简单粗暴的方法就是直接删除"),e("code",[t._v("~/.ssh/known_hosts")]),t._v("文件，然后再重新clone~")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/orgs/community/discussions/50878",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("ol",{attrs:{start:"15"}},[e("li",[e("code",[t._v("git push")]),t._v("报错：")])]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("Enumerating objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("496")]),t._v(", done.\nCounting objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("496")]),t._v("/496"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\nDelta compression using up to "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" threads\nCompressing objects: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("% "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("462")]),t._v("/462"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(", done.\nclient_loop: send disconnect: Broken pipe\nsend-pack: unexpected disconnect "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" reading sideband packet\nfatal: the remote end hung up unexpectedly\n")])])]),e("p",[t._v("解决方法："),e("a",{attrs:{href:"https://blog.csdn.net/qq_34466755/article/details/113748527",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),e("OutboundLink")],1)]),t._v(" "),e("ul",[e("li",[t._v("方法一：将git 远程地址改为自己的"),e("code",[t._v("ssh")]),t._v("地址: "),e("code",[t._v("git remote set-url origin git@github.com:github用户名/仓库名.git")])]),t._v(" "),e("li",[t._v("方法二：增加git缓冲区大小: "),e("code",[t._v("git config --global http.postBuffer 524288000")])])]),t._v(" "),e("blockquote",[e("p",[t._v("我试了上面两种方法后，又出现这种报错了，然后我把vpn关了，"),e("code",[t._v("git push")]),t._v("居然又可以了~~~！！神奇....")])]),t._v(" "),e("ol",{attrs:{start:"16"}},[e("li",[e("code",[t._v("git merge master")]),t._v("到main分支时报错："),e("code",[t._v("fatal: refusing to merge unrelated histories")])])]),t._v(" "),e("blockquote",[e("p",[e("code",[t._v("git merge master --allow-unrelated-histories")])])]),t._v(" "),e("ol",{attrs:{start:"17"}},[e("li",[e("code",[t._v("git add .")]),t._v("是报错："),e("code",[t._v("error: '[filename]/' does not have a commit checked out")])])]),t._v(" "),e("blockquote",[e("p",[t._v("这是子文件夹下面有"),e("code",[t._v(".git")]),t._v("文件，删除即可："),e("code",[t._v("rm -rf [filename]/.git")])])]),t._v(" "),e("h2",{attrs:{id:"备注"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[t._v("#")]),t._v(" 备注")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("如何下载公司"),e("code",[t._v("gitlab")]),t._v("上的项目？")]),t._v(" "),e("ol",[e("li",[t._v("下载vpn软件:"),e("code",[t._v("easy connect")])]),t._v(" "),e("li",[t._v("进入"),e("code",[t._v("gitlab")]),t._v("项目页面，添加电脑"),e("code",[t._v("id_rsd.pub")]),t._v("到"),e("code",[t._v("sshKey")])]),t._v(" "),e("li",[e("code",[t._v("git clone")]),t._v(" 即可")])]),t._v(" "),e("blockquote",[e("p",[t._v("注：一般只能下载项目，如果想push的话会报错，如果把"),e("code",[t._v("git config user")]),t._v("的name和email改为公司git账号应该就可以推送了（只是猜想。。。）")])])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),e("OutboundLink")],1),t._v("访问不了了~")]),t._v(" "),e("ul",[e("li",[t._v("搭梯子翻墙~具体流程在我另一篇博文里"),e("a",{attrs:{href:"./vpn"}},[t._v("搭梯子")]),t._v("；")]),t._v(" "),e("li",[t._v("配置git520，具体参考"),e("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/358183268",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub 访问不了？教你几招轻松解决"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[e("a",{attrs:{href:"https://github.com/521xueweihan/GitHub520",target:"_blank",rel:"noopener noreferrer"}},[t._v("github520"),e("OutboundLink")],1)])])])]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.cn/post/6895246702614806542",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git各指令的本质，真是通俗易懂啊"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.cn/post/7022746201598459940",target:"_blank",rel:"noopener noreferrer"}},[t._v("一些常用的 Git 进阶知识与技巧"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"http://www.itmind.net/11438.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("chrome Github加速插件"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"收藏"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#收藏"}},[t._v("#")]),t._v(" 收藏")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/DBnbDjY_oXuM-X6m2K5oeQ",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 是如何工作的"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://learngitbranching.js.org/?locale=zh_CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("Learn Git Branching"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/wEomQC6Q0D_LShPkIQIBbg",target:"_blank",rel:"noopener noreferrer"}},[t._v("搭建 Github 免费图床"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);
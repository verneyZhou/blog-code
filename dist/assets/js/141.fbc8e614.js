(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{750:function(t,s,a){"use strict";a.r(s);var e=a(8),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue项目性能优化技巧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue项目性能优化技巧"}},[t._v("#")]),t._v(" Vue项目性能优化技巧")]),t._v(" "),a("h2",{attrs:{id:"代码层面的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码层面的优化"}},[t._v("#")]),t._v(" 代码层面的优化")]),t._v(" "),a("h3",{attrs:{id:"v-if-和-v-show-区分使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-show-区分使用场景"}},[t._v("#")]),t._v(" v-if 和 v-show 区分使用场景")]),t._v(" "),a("blockquote",[a("p",[t._v("v-if 是真正的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建；")])]),t._v(" "),a("blockquote",[a("p",[t._v("v-show 不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 的 display 属性进行切换。")])]),t._v(" "),a("p",[t._v("v-if 适用于在运行时很少改变条件，不需要频繁切换条件的场景；v-show 则适用于需要非常频繁切换条件的场景。")]),t._v(" "),a("h3",{attrs:{id:"computed-和-watch-区分使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-和-watch-区分使用场景"}},[t._v("#")]),t._v(" computed 和 watch 区分使用场景")]),t._v(" "),a("blockquote",[a("p",[t._v("computed：是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，才会重新计算；")])]),t._v(" "),a("blockquote",[a("p",[t._v("watch：更多的是「观察」的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作；")])]),t._v(" "),a("ol",[a("li",[t._v("当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算；")]),t._v(" "),a("li",[t._v("当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch.")])]),t._v(" "),a("h3",{attrs:{id:"v-for-遍历必须为-item-添加-key-且避免同时使用-v-if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-for-遍历必须为-item-添加-key-且避免同时使用-v-if"}},[t._v("#")]),t._v(" v-for 遍历必须为 item 添加 key，且避免同时使用 v-if")]),t._v(" "),a("blockquote",[a("p",[t._v("为什么要避免v-if和v-for在同一个元素上同时使用呢？因为在vue的源码中对这两个指令的处理有优先级："),a("strong",[t._v("先处理v-for再处理v-if的")]),t._v("。所以如果我们在同一层中一起使用两个指令，会出现一些不必要的性能问题，比如这个列表有一百条数据，在某种情况下，它们都不需要显示，但vue还是会循环这个100条数据显示，再去判断v-if，因此，我们应该避免这种情况的出现。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cn.vuejs.org/v2/style-guide/#%E9%81%BF%E5%85%8D-v-if-%E5%92%8C-v-for-%E7%94%A8%E5%9C%A8%E4%B8%80%E8%B5%B7%E5%BF%85%E8%A6%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"v-once-和-v-pre-提升性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-once-和-v-pre-提升性能"}},[t._v("#")]),t._v(" v-once 和 v-pre 提升性能")]),t._v(" "),a("blockquote",[a("p",[t._v("见上一篇博文~")])]),t._v(" "),a("h3",{attrs:{id:"长列表性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#长列表性能优化"}},[t._v("#")]),t._v(" 长列表性能优化")]),t._v(" "),a("blockquote",[a("p",[t._v("Vue 会通过 Object.defineProperty 对数据进行劫持，来实现视图响应数据的变化；但有时对于纯粹展示的数据，就不需要 Vue 来劫持，这能够很明显的减少组件初始化的时间。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可通过 Object.freeze 方法来冻结一个对象，一旦被冻结的对象就再也不能被修改了。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" users "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" axios"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api/users"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("users "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("freeze")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("users"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"事件的销毁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件的销毁"}},[t._v("#")]),t._v(" 事件的销毁")]),t._v(" "),a("blockquote",[a("p",[t._v("Vue 组件销毁时，会自动清理它与其它实例的连接，解绑它的全部指令及事件监听器，但是仅限于组件本身的事件。如果在 js 内使用 addEventListene 等方式是不会自动销毁的，我们需要在组件销毁时手动移除这些事件的监听，以免造成内存泄露。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("created")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("click"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeDestroy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("click"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"图片资源懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片资源懒加载"}},[t._v("#")]),t._v(" 图片资源懒加载")]),t._v(" "),a("blockquote",[a("p",[t._v("使用第三方插件："),a("code",[t._v("vue-lazyload")])])]),t._v(" "),a("h3",{attrs:{id:"路由懒加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由懒加载"}},[t._v("#")]),t._v(" 路由懒加载")]),t._v(" "),a("blockquote",[a("p",[t._v("Vue 是单页面应用，很多路由的引入会使 webpcak 打包后的文件很大；当进入首页时，加载的资源过多，页面会出现白屏的情况，不利于用户体验。如果把不同路由对应的组件分割成不同的代码块，当路由访问时才加载对应的组件，就会大大提高首屏显示的速度。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" router "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VueRouter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("routes")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'首页'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/homepage'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" require"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/package/views/hompage.vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hompage'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 懒加载")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("meta")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"第三方插件的按需引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三方插件的按需引入"}},[t._v("#")]),t._v(" 第三方插件的按需引入")]),t._v(" "),a("blockquote",[a("p",[t._v("我们在项目中经常会需要引入第三方插件，如果我们直接引入整个插件，会导致项目的体积太大，我们可以借助 babel-plugin-component ，然后可以只引入需要的组件，以达到减小项目体积的目的。")])]),t._v(" "),a("p",[t._v("以下为项目中引入 element-ui 组件库为例：")]),t._v(" "),a("ol",[a("li",[t._v("首先，安装 babel-plugin-component ：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("npm install babel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plugin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("component "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("然后，将 .babelrc 修改为：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"presets"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"es2015"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"modules"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"component"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"libraryName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"element-ui"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"styleLibraryName"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"theme-chalk"')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("在 main.js 中引入部分组件：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Vue "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Select "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'element-ui'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Select"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"优化无限列表性能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化无限列表性能"}},[t._v("#")]),t._v(" 优化无限列表性能")]),t._v(" "),a("blockquote",[a("p",[t._v("对于无限循环列表，可以采用虚拟滚动来实现，参考第三方插件：vue-virtual-scroll-list 和 vue-virtual-scroller 。")])]),t._v(" "),a("h2",{attrs:{id:"webpack-层面的优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-层面的优化"}},[t._v("#")]),t._v(" Webpack 层面的优化")]),t._v(" "),a("h3",{attrs:{id:"webpack-对图片进行压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack-对图片进行压缩"}},[t._v("#")]),t._v(" Webpack 对图片进行压缩")]),t._v(" "),a("blockquote",[a("p",[t._v("在 vue 项目中可以在 url-loader 中设置 limit 大小来对图片处理，对小于 limit 的图片转化为 base64 格式；对有些较大的图片资源，可以使用 image-webpack-loader 来压缩图片。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.(png|jpe?g|gif|svg)(\\?.*)?$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("use")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'url-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("limit")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" utils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assetsPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'img/[name].[hash:7].[ext]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("loader")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'image-webpack-loader'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 压缩图片")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("bypassOnDebug")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"减少-es6-转为-es5-的冗余代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#减少-es6-转为-es5-的冗余代码"}},[t._v("#")]),t._v(" 减少 ES6 转为 ES5 的冗余代码")]),t._v(" "),a("blockquote",[a("p",[t._v("Babel 插件在将 ES6 代码转换成 ES5 代码时会注入一些辅助函数，在默认情况下， Babel 会在每个输出文件中内嵌这些依赖的辅助函数代码，如果多个源代码文件都依赖这些辅助函数，那么这些辅助函数的代码将会出现很多次，造成代码冗余。")])]),t._v(" "),a("p",[t._v("babel-plugin-transform-runtime 插件可以将相关辅助函数进行替换成导入语句，从而减小 babel 编译出来的代码的文件大小。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 安装")]),t._v("\nnpm install babel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("plugin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("transform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("runtime "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .babelrc")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"transform-runtime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"提取公共代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取公共代码"}},[t._v("#")]),t._v(" 提取公共代码")]),t._v(" "),a("blockquote",[a("p",[t._v("如果项目中没有将每个页面的第三方库和公共模块提取出来，则项目会存在"),a("code",[t._v("相同的资源被重复加载，浪费用户的流量和服务器的成本；每个页面需要加载的资源太大，导致网页首屏加载缓慢，影响用户体验。")]),t._v("这些问题。")])]),t._v(" "),a("p",[t._v("所以我们需要将多个页面的公共代码抽离成单独的文件，来优化以上问题。在 webpack3 中我们使用"),a("code",[t._v("webpack.optimize.CommonsChunkPlugin")]),t._v(" 插件进行提取，webpack4 中我们可以直接使用"),a("code",[t._v("optimization")]),t._v("配置项进行配置。")]),t._v(" "),a("h3",{attrs:{id:"模板预编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板预编译"}},[t._v("#")]),t._v(" 模板预编译")]),t._v(" "),a("blockquote",[a("p",[t._v("可以使用 vue-template-loader，它可以在构建过程中把模板文件转换成为 JavaScript 渲染函数。")])]),t._v(" "),a("p",[t._v("（不了解，待完善...）")]),t._v(" "),a("h3",{attrs:{id:"提取组件的-css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取组件的-css"}},[t._v("#")]),t._v(" 提取组件的 CSS")]),t._v(" "),a("blockquote",[a("p",[t._v("当使用单文件组件时，组件内的 CSS 会以 style 标签的方式通过 JavaScript 动态注入。这有一些小小的运行时开销，如果你使用服务端渲染，这会导致一段 “无样式内容闪烁 (fouc) ” 。将所有组件的 CSS 提取到同一个文件可以避免这个问题，也会让 CSS 更好地进行压缩和缓存。")])]),t._v(" "),a("ul",[a("li",[t._v("webpack + vue-loader ( vue-cli 的 webpack 模板已经预先配置好)")])]),t._v(" "),a("h3",{attrs:{id:"优化-sourcemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化-sourcemap"}},[t._v("#")]),t._v(" 优化 SourceMap")]),t._v(" "),a("blockquote",[a("p",[t._v("项目打包后，会将开发中的多个文件代码打包到一个文件中，并且经过压缩、去掉多余的空格、babel编译化后，最终将编译得到的代码会用于线上环境，那么这样处理后的代码和源代码会有很大的差别，当有 bug的时候，我们只能定位到压缩处理后的代码位置，无法定位到开发环境中的代码，对于开发来说不好调式定位问题，因此 sourceMap 出现了，它就是为了解决不好调式代码问题的。")])]),t._v(" "),a("ul",[a("li",[t._v("开发环境推荐："),a("code",[t._v("cheap-module-eval-source-map")]),t._v("；")]),t._v(" "),a("li",[t._v("生产环境推荐："),a("code",[t._v("cheap-module-source-map")]),t._v("；")])]),t._v(" "),a("h3",{attrs:{id:"构建结果输出分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建结果输出分析"}},[t._v("#")]),t._v(" 构建结果输出分析")]),t._v(" "),a("blockquote",[a("p",[t._v("可以使用第三方插件：webpack-bundle-analyzer 对构建结果进行分析，能更可视化地比较还有哪些地方需要优化~")])]),t._v(" "),a("h2",{attrs:{id:"基础的-web-技术优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础的-web-技术优化"}},[t._v("#")]),t._v(" 基础的 Web 技术优化")]),t._v(" "),a("h3",{attrs:{id:"开启-gzip-压缩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启-gzip-压缩"}},[t._v("#")]),t._v(" 开启 gzip 压缩")]),t._v(" "),a("blockquote",[a("p",[t._v("gzip 是 GNUzip 的缩写，最早用于 UNIX 系统的文件压缩。HTTP 协议上的 gzip 编码是一种用来改进 web 应用程序性能的技术，web 服务器和客户端（浏览器）必须共同支持 gzip。目前主流的浏览器，Chrome，firefox，IE等都支持该协议。常见的服务器如 Apache，Nginx，IIS 同样支持，gzip 压缩效率非常高，通常可以达到 70% 的压缩率，也就是说，如果你的网页有 30K，压缩之后就变成了 9K 左右。")])]),t._v(" "),a("p",[t._v("（服务端和客户端具体如何压缩，待完善...）")]),t._v(" "),a("h3",{attrs:{id:"浏览器缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存"}},[t._v("#")]),t._v(" 浏览器缓存")]),t._v(" "),a("blockquote",[a("p",[t._v("为了提高用户加载页面的速度，对静态资源进行缓存是非常必要的；关于http的缓存机制，可参考"),a("RouterLink",{attrs:{to:"/tool/http/"}},[t._v("《透视HTTP协议》学习笔记")]),t._v("~")],1)]),t._v(" "),a("h3",{attrs:{id:"cdn-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cdn-的使用"}},[t._v("#")]),t._v(" CDN 的使用")]),t._v(" "),a("blockquote",[a("p",[t._v("浏览器从服务器上下载 CSS、js 和图片等文件时都要和服务器连接，而大部分服务器的带宽有限，如果超过限制，网页就半天反应不过来。而 CDN 可以通过不同的域名来加载文件，从而使下载文件的并发连接数大大增加，且CDN 具有更好的可用性，更低的网络延迟和丢包率 。")])]),t._v(" "),a("h3",{attrs:{id:"使用-chrome-performance-查找性能瓶颈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-chrome-performance-查找性能瓶颈"}},[t._v("#")]),t._v(" 使用 Chrome Performance 查找性能瓶颈")]),t._v(" "),a("blockquote",[a("p",[t._v("Chrome 的 Performance 面板可以录制一段时间内的 js 执行细节及时间。使用 Chrome 开发者工具分析页面性能的步骤如下。")])]),t._v(" "),a("p",[t._v("（待了解..）")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/qAEHZtwxhV4IAub-j-2yqw",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于 Vue 项目性能优化技巧分享"),a("OutboundLink")],1)])]),t._v(" "),a("fix-link",{attrs:{label:"Back",href:"/skills/"}})],1)}),[],!1,null,null,null);s.default=r.exports}}]);
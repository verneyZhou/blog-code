(window.webpackJsonp=window.webpackJsonp||[]).push([[169],{757:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"面试题2022"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面试题2022"}},[t._v("#")]),t._v(" 面试题2022")]),t._v(" "),a("blockquote",[a("p",[t._v("以下是我2022年2月到4月的面试题总结~")])]),t._v(" "),a("ul",[a("li",[t._v("如何看待前端框架选型？")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/wangqing01/p/12402488.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("对于前端团队，可以实现企业受益最大化要点。\n一、技术选型的策略\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、保证产品质量\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）功能稳健：网页不白屏，不错位，不卡死；操作正常；数据精准。\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）体验优秀：加载体验，交互体验，视觉体验，无障碍访问。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、降低人力成本\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("）降低前期开发成本；\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）降低后期维护成本。\n\n二、前端开发模式选择\n开发模式："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("、纯前端开发；"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、前后端分离开发；"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("、后端主导的开发。\n")])])]),a("ul",[a("li",[t._v("vue的如何实现双向绑定的?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("基于数据劫持"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("发布订阅模式实现的双向绑定；\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 实现一个监听器 Observer：利用Proxy或Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defineProperty生成的Observer针对对象"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("对象的属性进行"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"劫持"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("在属性发生变化后通知订阅者"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 实现一个解析器 Compile：解析 Vue 模板指令；他会收集指令所依赖的方法和数据"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 等待数据变化，然后将模板中的变量都替换成数据，然后渲染页面视图；\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 实现一个订阅者 Watcher：Watcher 订阅者是 Observer 和 Compile 之间通信的桥梁 ，它将接收到的Observer产生的数据变化"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("并根据Compile提供的指令进行视图渲染"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 使得数据变化促使视图变化。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 实现一个调度中心 Dep：订阅器采用 发布"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("订阅 设计模式，用来收集订阅者 Watcher，对监听器 Observer 和 订阅者 Watcher 进行统一管理。\n")])])]),a("ul",[a("li",[t._v("react 虚拟DOM 是什么? 如何实现? 说一下diff算法 ?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("虚拟"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("，Virtual "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 就是一个用来描述真实"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("的javaScript对象。\n\n实现：基于React进行开发时所有的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("构造都是通过虚拟"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("进行，每当数据变化时，React都会重新构建整个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("树，然后React将当前整个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("树和上一次的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("树进行对比，得到"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("结构的区别，然后仅仅将需要变化的部分进行实际的浏览器"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("更新。\n\nDiff算法是一种对比算法。对比两者是旧虚拟"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("和新虚拟"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("，对比出是哪个虚拟节点更改了，找出这个虚拟节点，并只更新这个虚拟节点所对应的真实节点，而不用更新其他数据没发生改变的节点，实现精准地更新真实"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("，进而提高效率。\n复杂视图情况下使用虚拟"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("之所以提升渲染性能"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("是因为虚拟"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("Diff算法可以精准找到"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("树变更的地方"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 减少"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("的操作")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("重排重绘"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n\nReact的思路是递增法。通过对比新的列表中的节点，在原本的列表中的位置是否是递增，来判断当前节点是否需要移动。\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 所谓双端比较就是新列表和旧列表两个列表的头与尾互相对比，在对比的过程中指针会逐渐向内靠拢，直到某一个列表的节点全部遍历过，对比停止。\n")])])]),a("ul",[a("li",[t._v("react和vue的比较")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/CystalVon/article/details/78428036",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" react单向数据流；Vue双向数据绑定\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" jsx与template\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" mvc与mvvm\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 状态管理：Redux"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Vuex\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 在操作界面时，要尽量减少对"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("的操作，Vue 和 React 都使用虚拟"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("来实现\n")])])]),a("ul",[a("li",[t._v("http报文头部有哪些字段? 有什么意义 ?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 协议规定了非常多的头部字段，实现各种各样的功能，但基本上可以分为四大类：\n\n通用字段：在请求头和响应头里都可以出现；\n    Date 字段是一个通用字段，但通常出现在响应头里，表示 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 报文创建的时间，客户端可以使用这个时间再搭配其他字段决定缓存策略。\n请求字段：仅能出现在请求头里，进一步说明请求信息或者额外的附加条件；\n    Host 字段告诉服务器这个请求应该由哪个主机来处理\n    User"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent属于请求字段，只出现在请求头里。它使用一个字符串来描述发起 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),t._v(" 请求的客户端，服务器可以依据它来返回最合适此浏览器显示的页面。\n响应字段：仅能出现在响应头里，补充说明响应报文的信息；\n    Server 字段是响应字段，只能出现在响应头里。它告诉客户端当前正在提供 Web 服务的软件名称和版本号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n实体字段：它实际上属于通用字段，但专门描述 body 的额外信息。\n    Content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Length是一个实体字段，它表示报文里 body 的长度，也就是请求头或响应头空行后面数据的长度。\n")])])]),a("ul",[a("li",[t._v("1px问题")])]),t._v(" "),a("ol",[a("li",[t._v("用媒体查询根据dpr用“伪元素+transform”对边框进行缩放；")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设计稿是750,采用1：100的比例,font-size为100*(100vw/750) */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".border-1px")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" relative"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token atrule"}},[a("span",{pre:!0,attrs:{class:"token rule"}},[t._v("@media")]),t._v(" screen "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-min-device-pixel-ratio")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".border-1px:before")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("position")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" absolute"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border-top")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid #D9D9D9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" #D9D9D9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform-origin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0 0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("-webkit-transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scaleY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("scaleY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("用JS根据屏幕尺寸和dpr精确地设置不同屏幕所应有的rem基准值和initial-scale缩放值。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 设计稿是750,采用1：100的比例,font-size为100 * (docEl.clientWidth * dpr / 750) */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dpr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" docEl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fontEl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" metaEl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'meta[name=\"viewport\"]'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ndpr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" window"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("devicePixelRatio "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nrem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("docEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" dpr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("750")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nscale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" dpr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置viewport，进行缩放，达到高清效果")]),t._v("\nmetaEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'content'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width='")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" dpr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" docEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clientWidth "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("',initial-scale='")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("',maximum-scale='")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("', minimum-scale='")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" scale "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("',user-scalable=no'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置data-dpr属性，留作的css hack之用，解决图片模糊问题和1px细线问题")]),t._v("\ndocEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data-dpr'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dpr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 动态写入样式")]),t._v("\ndocEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("firstElementChild"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fontEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfontEl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("innerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'html{font-size:'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" rem "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'px!important;}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("rem布局")])]),t._v(" "),a("blockquote",[a("p",[t._v("rem是css3新引入的单位，在pc端会有兼容性的问题，对移动端比较友好。简而言之就是通过动态设置html根元素的fontsize，等比缩放元素大小来自适应移动设备。")])]),t._v(" "),a("ol",[a("li",[t._v("根据设备屏幕的DPR（设备像素比，比如dpr=2时，表示1个CSS像素由2X2个物理像素点组成） 动态设置 html 的font-size")]),t._v(" "),a("li",[t._v("同时根据设备DPR调整页面的缩放值，进而达到高清效果。")])]),t._v(" "),a("ul",[a("li",[t._v("webpack的原理, loader 和 plugin 是干什么的? 有自己手写过么?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 初始化参数：解析webpack配置参数，合并shell传入和webpack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js文件配置的参数，形成最后的配置结果。\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）开始编译：上一步得到的参数初始化compiler对象，注册所有配置的插件，插件监听webpack构建生命周期的事件节点，做出相应的反应，执行对象的 run 方法开始执行编译。\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）确定入口：从配置的entry入口，开始解析文件构建"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AST")]),t._v("语法树，找出依赖，递归下去。\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("）编译模块：递归中根据文件类型和loader配置，调用所有配置的loader对文件进行转换，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理。\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("）完成模块编译并输出：递归完事后，得到每个文件结果，包含每个模块以及他们之间的依赖关系，根据entry配置生成代码块chunk。\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("）输出完成：输出所有的chunk到文件系统。\n\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Loader")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 用于对模块源码的转换，loader 描述了 webpack 如何处理非 javascript 模块，并且在 buld 中引入这些依赖。loader 可以将文件从不同的语言（如 TypeScript）转换为 JavaScript，或者将内联图像转换为 data "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v("。比如说："),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Loader，Style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Loader 等。\n\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Plugin")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 目的在于解决 loader 无法实现的其他事"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("它直接作用于 webpack，扩展了它的功能。在 webpack 运行的生命周期中会广播出许多事件，plugin 可以监听这些事件，在合适的时机通过 webpack 提供的 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v(" 改变输出结果。插件的范围包括，从打包优化和压缩，一直到重新定义环境中的变量。插件接口功能极其强大，可以用来处理各种各样的任务。\n")])])]),a("ul",[a("li",[t._v("SSR 和 客户端渲染有什么区别？")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.jianshu.com/p/c7fb1dbdea99",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("数据请求：由服务端请求首屏数据，而不是客户端请求首屏数据，这是“快”的一个主要原因。服务端在内网进行请求，数据响应速度快。客户端在不同网络环境进行数据请求，且外网http请求开销大，导致时间差。\n")])])]),a("ul",[a("li",[t._v("vue是如何实现绑定事件的？")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("vuejs中的事件绑定，使用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("事件名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 函数名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("来完成的，这里函数名是定义在Vue实例中的methods对象中的，Vue实例可以直接访问其中的方法。 \n简写：@click"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\nv"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on实现原理：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 在模板编译阶段，生成"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AST")]),t._v("语法树，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AST")]),t._v("处理后，会在对应的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AST")]),t._v("节点上生成events属性，events属性是一个对象，key值是v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("on绑定的事件名称，值是事件的响应函数。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" codegen时递归的对每一个"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AST")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("节点进行处理。针对events属性，最终的data属性中有一个on属性")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("如果有native事件，还会有nativeOn属性"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，on属性的值也是一个对象，其中的key值是事件名称，value值是事件响应函数。\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 事件和对应的响应最终存储在vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_events属性中；事件在子组件中通过emit触发，emit就是从vm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_events属性中取对应事件的响应函数，然后执行\n\n对于原生标签使用了更为简单的处理，即使用原生"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("自带的addEventListener "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v("\n")])])]),a("ul",[a("li",[t._v("浏览器事件有哪些过程? 为什么一般在冒泡阶段, 而不是在捕获阶段注册监听? addEventListener 参数分别是什么 ?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("js中时间执行的整个过程称之为事件流，分为三个阶段：事件捕获阶段，事件目标处理函数、事件冒泡。\n\n当某个元素触发某个事件（如：click），顶级对象document发出一个事件流，顺着dom的树节点向触发它的目标节点流去，直到达到目标元素，这个层层递进，向下找目标的过程为事件的捕获阶段，此过程与事件相应的函数是不会触发的。\n到达目标函数，便会执行绑定在此元素上的，与事件相应的函数，即事件目标处理函数阶段。\n最后，从目标元素起，再依次往顶层元素对象传递，途中如果有节点绑定了同名事件，这些事件所对应的函数，在此过程中便称之为事件冒泡。\n通常情况下，事件相应的函数在冒泡阶段执行的。addEventListener的第三个参数默认为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("，表示冒泡阶段执行（为"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("的时候，表示捕获阶段执行）。\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("面向对象如何实现? 需要复用的变量 怎么处理 ?")])]),t._v(" "),a("blockquote",[a("p",[t._v("ES5: 构造函数+prototype; ES6: Class; 复用的变量放在构造函数的原型上")])]),t._v(" "),a("ul",[a("li",[t._v("移动端300ms延时的原因? 如何处理?")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/chengxs/p/11064469.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("因为移动端的click有很大延迟（大约300ms），300ms延迟来自判断双击和长按，因为只有默认等待时间结束以确定没有后续动作发生时，才会触发click事件。而触摸事件的延迟则是非常短的，使用触摸事件的能够提高页面响应速度，带来更好的用户体验。\n\n禁用缩放：\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("meta name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"viewport"')]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"user-scalable=no"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("meta name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"viewport"')]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"initial-scale=1,maximum-scale=1"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n表明这个页面是不可缩放的，那双击缩放的功能就没有意义了，此时浏览器可以禁用默认的双击缩放行为并且去掉300ms的点击延迟。\n\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("FastClick")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" FastClick是"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FT")]),t._v(" Labs专门为解决移动端浏览器 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v(" 毫秒点击延迟问题所开发的一个轻量级的库。FastClick的实现原理是在检测到touchend事件的时候，会通过"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("自定义事件立即出发模拟一个click事件，并把浏览器在300ms之后的click事件阻止掉。\n")])])]),a("ul",[a("li",[t._v("点击穿透问题")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("假如页面上有两个元素"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("和"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("。"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("元素在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("元素之上。我们在"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("元素的touchstart事件上注册了一个回调函数，该回调函数的作用是隐藏"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("元素。我们发现，当我们点击"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("元素，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("元素被隐藏了，随后，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("元素触发了click事件。\n这是因为在移动端浏览器，事件执行的顺序是touchstart "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" touchend "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" click。而click事件有300ms的延迟，当touchstart事件把"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("元素隐藏之后，隔了300ms，浏览器触发了click事件，但是此时"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v("元素不见了，所以该事件被派发到了"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("元素身上。如果"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("A")]),t._v("元素是一个链接，那此时页面就会意外地跳转。\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 点击穿透问题：点击蒙层（mask）上的关闭按钮，蒙层消失后发现触发了按钮下面元素的click事件。\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("）跨页面点击穿透问题：如果按钮下面恰好是一个有href属性的a标签，那么页面就会发生跳转因为 a标签跳转默认是click事件触发 ，所以原理和上面的完全相同\n（"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("）点击穿透问题：这次没有mask了，直接点击页内按钮跳转至新页，然后发现新页面中对应位置元素的click事件被触发了。\n\n解决方案：把页面内所有click全部换成touch事件 touchstart 、’touchend’、’tap’， 需要特别注意 a标签，a标签的href也是click，需要去掉换成js控制的跳转，或者直接改成span "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" tap控制跳转。\n")])])]),a("ul",[a("li",[t._v("主流框架的数据单向/双向绑定实现原理？")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("AngularJs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 脏检查；只有当"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UI")]),t._v("事件，ajax请求或者 timeout 延迟事件，才会触发脏检查。Angular 每一个绑定到"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UI")]),t._v("的数据，就会有一个 $watch 对象。所有的watch存储在$$watchList中，一次脏检查就是调用一次 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 或者 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$digest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，遍历检查所有watch，将数据中最新的值呈现在界面上。$digest现在至少运行每个监听器一次了。如果第一次运行完，有监控值发生变更了，标记为dirty，所有监听器再运行第二次。这会一直运行，直到所有监控的值都不再变化，整个局面稳定下来了。\n\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("VueJs")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 基于数据劫持，结合发布订阅模式，实现的双向数据绑定\n\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("React")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 本身并没有提到双向绑定的概念，但是可以基于setState和onChange事件实现数据层于视图层的同步更新。例如每次修改表单值时执行onChange事件，调用setState更新数据层，从而更新视图。\n")])])]),a("ul",[a("li",[t._v("DIFF算法为什么是O(n)复杂度而不是O(n^3)?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("传统Diff算法需要找到两个树的最小更新方式，所以需要"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("两两"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("对比每个叶子节点是否相同，对比就需要"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("次了，找到差异后还要计算最小转换方式，所以是"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n相较于传统的diff算法，框架层的 diff 有个大前提假设：Web "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("UI")]),t._v(" 中 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v(" 节点跨层级的移动操作特别少，可以忽略不计，所以 diff 的核心就在于，它只对同层节点进行比较，忽略跨层节点的复用。\n同层节点的比较也不会两两进行，而是按照一定的顺序比较，或通过 key 属性判断，所以只需要遍历一次新节点，因此算法的复杂度就降低到了"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。\n")])])]),a("ul",[a("li",[t._v("移动端rem布局如何实现? 简述原理?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("动态计算html的font"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("size\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 1rem等于75px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("以width为750px的设计稿为标准"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 比如p标签内设置font"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("size为24px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("当width为750px时，根元素font"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("size为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("5px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第一步：打包的时候转为rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("75")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("32rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第二步：由lib"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("flexible动态计算得根元素font"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("size为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("5px，即该宽度下，1rem为"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("37")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("5px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第三步：计算p标签内字体展示大小："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.5")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 12px\n")])])]),a("ul",[a("li",[t._v("常见的页面布局?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("静态布局  px布局\n流式布局（Liquid Layout） 主要的划分区域的尺寸使用百分数（搭配min"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("、max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("属性使用）"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" 例子：左侧固定，右侧自适应\n自适应布局（Adaptive Layout） 即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围\n响应式布局（Responsive Layout） 检测窗口大小利用bootstrap布局"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 媒体查询\n弹性布局（rem"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("em布局） css3 rem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flex\n")])])]),a("ul",[a("li",[t._v("JSbridge原理, js和native是如何通信的?")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/yuzhengfei7/article/details/93468914",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("JSBridge")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 主要是给 JavaScript 提供调用 Native 功能的接口，让混合开发中的前端部分可以方便地使用 Native 的功能（例如：地址位置、摄像头）。\n而且 JSBridge 的功能不止调用 Native 功能这么简单宽泛。实际上，JSBridge 就像其名称中的Bridge的意义一样，是 Native 和非 Native 之间的桥梁，它的核心是构建 Native 和非 Native 间消息通信的通道，而且这个通信的通道是双向的。\n")])])]),a("ul",[a("li",[t._v("Rollup和webpack区别?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Webpack对于代码分割和静态资源导入有着“先天优势”，并且支持热模块替换")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HMR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，而Rollup并不支持，所以当项目需要用到以上，则可以考虑选择Webpack。但是，Rollup对于代码的Tree"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shaking和"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES6")]),t._v("模块有着算法优势上的支持，若你项目只需要打包出一个简单的bundle包，并是基于"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ES6")]),t._v("模块开发的，可以考虑使用Rollup。其实Webpack从"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),t._v("开始支持Tree"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("shaking，并在使用babel"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("loader的情况下支持了es6 module的打包了，实际上，Rollup已经在渐渐地失去了当初的优势了。但是它并没有被抛弃，反而因其简单的"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("API")]),t._v("、使用方式被许多库开发者青睐，如React、Vue等，都是使用Rollup作为构建工具的。而Webpack目前在中大型项目中使用得非常广泛。最后，用一句话概括就是：在开发应用时使用 Webpack，开发库时使用 Rollup。\n")])])]),a("ul",[a("li",[t._v("静态文件的浏览器缓存如何实现？")])]),t._v(" "),a("blockquote",[a("p",[t._v("强缓存+协商缓存")])]),t._v(" "),a("ul",[a("li",[t._v("前端跨域方案?")])]),t._v(" "),a("blockquote",[a("p",[t._v("jsonp, CORS, postMessage, websocket, node正向代理，Nginx反向代理， window.name+window.location.hash+document.domain")])]),t._v(" "),a("ul",[a("li",[t._v("http 请求包含哪些字段 分别是什么意思?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Connection")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" keep"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("alive"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("close  长链接还是短连接\nCookie\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Type\nCache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" no"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cache  缓存控制\nAccept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Language： 语言\nHost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" User"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent\n")])])]),a("ul",[a("li",[t._v("js 有哪些数据类型 如何判断")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" 用于判断基本数据类型\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" 只能用来判断两个对象是否属于实例关系， 而不能判断一个对象实例具体属于哪种类型。\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 是 Object 的原型方法，调用该方法，默认返回当前对象的 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "[object Object]"')]),t._v("\n")])])]),a("ul",[a("li",[t._v("new String('a') 和 'a' 是一样的么?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("一个是字符串对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("一个是基本类型\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),t._v(" 与 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 的区别就是一个是原始类型、一个是引用类型，而它两的关系就是 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 是 ‘abc’的包装对象，而包装对象的作用就是方便原始类型调用一些方法。\n")])])]),a("ul",[a("li",[t._v("移动端如何优化首页白屏时间过长?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("手机白屏主要是因为页面渲染阻塞导致的，导致的原因有：\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：css文件加载需要一定的时间，在加载的过程中页面是空白的\n解决：将css代码前置或者内联html 即使用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("可能是等待异步加载数据再渲染页面导致白屏"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("数据量大加载慢，导致数据没请求到阻塞页面渲染\n解决：在手机显示的首屏时同步渲染页面，后续的数据在页面滚动（滑屏时）时再采取异步请求渲染页面\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v("手机页面的首屏"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("的执行会阻塞页面的渲染\n解决：尽量不要再首屏html代码中放置内联脚本。即：不要使用"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("script"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 使用defer\n\nGzip压缩： Accept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gzip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deflate\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("http缓存\n骨架屏\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("离线包")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 是将包括 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTML")]),t._v("、JavaScript、"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CSS")]),t._v(" 等页面内静态资源打包到一个压缩包内。预先下载该离线包到本地，然后通过客户端打开，直接从本地加载离线包，从而最大程度地摆脱网络环境对 "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("H5")]),t._v(" 页面的影响。\n")])])]),a("ul",[a("li",[t._v("js浮点数运算不精确 如何解决？")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JS")]),t._v("浮点数精度的缺失实际上是因为浮点数的小数部分无法用二进制很精准的转换出来，而以近似值来进行运算的话，肯定就存在精度的问题\n把需要计算的数字升级（乘以"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("的n次幂）成计算机能够精确识别的整数，等计算完毕再降级（除以"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("的n次幂），这是大部分编程语言处理精度差异的通用方法。 \n")])])]),a("ul",[a("li",[t._v("正则表达式如何匹配手机号?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("^1[345789]\\d{9}$")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n")])])]),a("ul",[a("li",[t._v("Doctype作用? 严格模式与混杂模式-如何触发这两种模式，区分它们有何意义?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("doctype是一种标准通用标记语言的文档声明类型，目的是告知要有什么来解析文档。\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOCTYPE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("声明是用来指示web浏览器关于页面使用哪个html版本进行编写的指令。声明必须是在文档的第一行，在html标签之前。\n浏览器本身就分为两种模式，一种是严格模式（标准模式），一种是混杂模式（怪异模式），浏览器就是通过doctype来区分这两种模式的， doctype在html中的作用就是触发浏览器的严格模式，如果省略doctype，浏览器就会进入到混乱模式。\n严格模式的排版和要求都是以js运作模式是以该浏览器支持的最高的标准来运行程序的。\n混乱模式中，页面以宽松的渐进增强的方式来兼容显示，先以老旧的浏览器的行为来渲染页面。在这种模式下，有些样式会和标准模式存在差异，而在不同的浏览器下，界面的显示也会不同，所以一定要在开头使用doctype。\n")])])]),a("ul",[a("li",[t._v("大文件的分片上传和断点续传怎么做的")])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_44475093/article/details/115191898",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考"),a("OutboundLink")],1)])]),t._v(" "),a("ul",[a("li",[t._v("性能指标FP、FCP和FMP分别跟哪些因素有关?")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("首次绘制时间（ "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FP")]),t._v(" ） ：即 First Paint，为首次渲染的时间点。\n首次内容绘制时间（ "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FCP")]),t._v(" ） ：即 First Contentful Paint，为首次有内容渲染的时间点。\n首次有效绘制时间（ "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FMP")]),t._v(" ） ：用户启动页面加载与页面呈现首屏之间的时间。它是我们测量用户加载体验的主要指标。\n首次交互时间（ "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FID")]),t._v(" ） ：即 First Input Delay，记录页面加载阶段，用户首次交互操作的延时时间。"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FID")]),t._v(" 指标影响用户对页面交互性和响应性的第一印象。\n\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FP")]),t._v("与"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FCP")]),t._v("这两个指标之间的主要区别是："),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FP")]),t._v("是当浏览器开始绘制内容到屏幕上的时候，只要在视觉上开始发生变化，无论是什么内容触发的视觉变化，在这一刻，这个时间点，叫做"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FP")]),t._v("。\n相比之下，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FCP")]),t._v("指的是浏览器首次绘制来自"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOM")]),t._v("的内容。例如：文本，图片，"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SVG")]),t._v("，canvas元素等，这个时间点叫"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FCP")]),t._v("。\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);
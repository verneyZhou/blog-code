(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{661:function(t,s,e){"use strict";e.r(s);var a=e(8),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"《从-0-到-1-实现一套-ci-cd-流程》学习笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#《从-0-到-1-实现一套-ci-cd-流程》学习笔记"}},[t._v("#")]),t._v(" 《从 0 到 1 实现一套 CI/CD 流程》学习笔记")]),t._v(" "),e("p",[t._v("课程地址："),e("a",{attrs:{href:"https://juejin.cn/book/6897616008173846543",target:"_blank",rel:"noopener noreferrer"}},[t._v("从 0 到 1 实现一套 CI/CD 流程"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#笔记"}},[t._v("#")]),t._v(" 笔记")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("以前的构建部署流程：")])])]),t._v(" "),e("ol",[e("li",[t._v("开发人员将源代码，经过编译、压缩等一系列流程打包为制品（意思为打包后的成品）")]),t._v(" "),e("li",[t._v("将制品上传到服务器。")]),t._v(" "),e("li",[t._v("在服务器将编译后的文件，手动上传到可用的容器服务内（例如"),e("code",[t._v("Nginx，Tomcat，Apache")]),t._v(" 等服务）")])]),t._v(" "),e("p",[e("strong",[t._v("总结")]),t._v("：编写代码 => 上传代码库 => 编译代码并压缩，生成制品 => 上传至服务器")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("缺点")]),t._v("：繁琐，且容易出错，是非常影响开发效率")])]),t._v(" "),e("h3",{attrs:{id:"ci-cd"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd"}},[t._v("#")]),t._v(" CI/CD")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("CI")])])]),t._v(" "),e("p",[t._v("CI（continuous integration） 的意思是 "),e("strong",[t._v("持续构建")]),t._v(" 。")]),t._v(" "),e("p",[t._v("负责拉取代码库中的代码后，执行用户预置定义好的操作脚本，通过一系列编译操作构建出一个 "),e("strong",[t._v("制品")]),t._v(" ，并将制品推送至到制品库里面。常用工具有 "),e("code",[t._v("Gitlab CI，Github CI，Jenkins")]),t._v(" 等。这个环节不参与部署，只负责构建代码，然后保存构建物。构建物被称为 制品，保存制品的地方被称为 “制品库”。")]),t._v(" "),e("p",[t._v("持续集成CI是在源代码变更后自动检测、拉取、构建的过程。")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("CD")])])]),t._v(" "),e("p",[t._v("CD 则有2层含义："),e("strong",[t._v("持续部署（Continuous Deployment） 和 持续交付（Continuous Delivery） 。")])]),t._v(" "),e("p",[t._v("持续交付 的概念是：将制品库的制品拿出后，部署在测试环境 / 交付给客户提前测试。")]),t._v(" "),e("p",[t._v("持续部署 则是将制品部署在生产环境。可以进行持续部署的工具也有很多： "),e("code",[t._v("Ansible")]),t._v(" 批量部署， "),e("code",[t._v("Kubernetes")]),t._v(" 集群部署，"),e("code",[t._v("Docker")]),t._v(" 直接推拉镜像等等。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("写一个自己的网站放到服务器上：")]),t._v(" "),e("p",[t._v("编写代码 -> （单元测试/集成测试） -> 上传至代码仓库 -> 打包构建 -> 上传至服务器 -> 配置 Nginx/Apache 将 80 端口映射至网站文件夹")])]),t._v(" "),e("blockquote",[e("p",[t._v("有了 CI/CD 的系统之后，我们就只需要编写代码，剩下的步骤都交给 CI/CD 系统来处理，这极大地解放了我们的双手，提升了开发效率。")])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("小册学习内容")]),t._v(" "),e("ol",[e("li",[t._v("你写完了代码，提交到了 Git 代码库")]),t._v(" "),e("li",[t._v("随后，代码库配置的 WebHook 钩子或人工手动启动了 Jenkins 的构建流程")]),t._v(" "),e("li",[t._v("Jenkins 启动构建流程。按照你之前配置好的构建脚本，将代码编译成功。")]),t._v(" "),e("li",[t._v("编译成功后，将编译后的文件打包为 docker 镜像，并将镜像上传到私有镜像库。")]),t._v(" "),e("li",[t._v("随后，使用 kubectl 指定远程的k8s集群，发送镜像版本更新指令")]),t._v(" "),e("li",[t._v("远程的k8s集群接收到指令后，去镜像库拉取新镜像")]),t._v(" "),e("li",[t._v("镜像拉取成功，按照升级策略（滚动升级）进行升级，此时不会停机。")]),t._v(" "),e("li",[t._v("升级完毕。")])])]),t._v(" "),e("h2",{attrs:{id:"备注"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[t._v("#")]),t._v(" 备注")]),t._v(" "),e("h3",{attrs:{id:"mac查看系统信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mac查看系统信息"}},[t._v("#")]),t._v(" Mac查看系统信息")]),t._v(" "),e("ul",[e("li",[t._v("Mac终端输入shell命令"),e("code",[t._v("sw_vers")]),t._v(", 获取当前Mac 操作系统 版本号和编译版本号:")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("➜  ~ sw_vers\nProductName:\tmacOS "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作系统")]),t._v("\nProductVersion:\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 版本号")]),t._v("\nBuildVersion:\t21C52 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译版本号")]),t._v("\n➜  ~ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("uname")]),t._v(" -a "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 读取到Mac 操作系统的信息")]),t._v("\nDarwin APB22015030.local "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.2")]),t._v(".0 Darwin Kernel Version "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.2")]),t._v(".0: Sun Nov "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(":29:10 PST "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" root:xnu-8019.61.5~1/RELEASE_ARM64_T8101 arm64\n")])])]),e("ul",[e("li",[t._v("Mac终端输入"),e("code",[t._v("system_profiler")]),t._v("查看系统信息：")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v("➜  ~ system_profiler SPHardwareDataType "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取系统硬件信息")]),t._v("\nHardware:\n\n    Hardware Overview:\n\n      Model Name: MacBook Pro "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 型号名称")]),t._v("\n      Model Identifier: MacBookPro17,1  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 型号标识符：")]),t._v("\n      Chip: Apple M1  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 芯片")]),t._v("\n      Total Number of Cores: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" performance and "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" efficiency"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  核总数：8（4性能和4能效）")]),t._v("\n      Memory: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" GB  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内存")]),t._v("\n      System Firmware Version: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7429.61")]),t._v(".2  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 系统固件版本")]),t._v("\n      OS Loader Version: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7429.61")]),t._v(".2   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 操作系统加载程序版本")]),t._v("\n      Serial Number "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("system"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(": C02GX3NSQ05P "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   序列号（系统）")]),t._v("\n      Hardware UUID: BA50DA8D-9B6E-559C-9D41-DB9018BF0805   \n      Provisioning UDID: 00008103-000634911150801E\n      Activation Lock Status: Enabled   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 激活锁状态")]),t._v("\n\n\n➜  ~ system_profiler SPSoftwareDataType "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取系统软件信息")]),t._v("\nSoftware:\n\n    System Software Overview:\n\n      System Version: macOS "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12.1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("21C52"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 系统版本")]),t._v("\n      Kernel Version: Darwin "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.2")]),t._v(".0  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 内核版本")]),t._v("\n      Boot Volume: Macintosh HD  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动宗卷")]),t._v("\n      Boot Mode: Normal   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动模式")]),t._v("\n      Computer Name: APB22015030  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   电脑名称")]),t._v("\n      User Name: zhouyuan10 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("zhouyuan10"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n      Secure Virtual Memory: Enabled  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安全虚拟内存")]),t._v("\n      System Integrity Protection: Enabled   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 系统完整性保护")]),t._v("\n      Time since boot: "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" days "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(":32  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  启动后的时间长度")]),t._v("\n\n➜  ~\n")])])]),e("blockquote",[e("p",[t._v("操作：点击桌面左上角 》关于本机 》系统报告，也能查看系统信息~")])]),t._v(" "),e("ul",[e("li",[t._v("macOS Ventura（版本13.0）是苹果公司用于麦金塔桌面操作系统macOS的第19个主要版本；")]),t._v(" "),e("li",[t._v("macOS Monterey（版本12）是苹果公司用于麦金塔桌面操作系统macOS的第18个主要版本；")]),t._v(" "),e("li",[t._v("macOS Big Sur（版本11.0）是苹果公司用于麦金塔桌面操作系统macOS的第17个主要版本，也是现时的主要版本，并且是macOS Catalina（版本10.15）的继任版本；")]),t._v(" "),e("li",[t._v("搭载 Apple 芯片的 Mac 电脑: 从 2020 年末推出的某些机型开始，Apple 开启了 Mac 电脑从 Intel 处理器到 Apple 芯片的过渡。")])]),t._v(" "),e("h3",{attrs:{id:"服务器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#服务器"}},[t._v("#")]),t._v(" 服务器")]),t._v(" "),e("p",[t._v("ECS 云服务器")]),t._v(" "),e("p",[t._v("实例：2核 2GB")]),t._v(" "),e("p",[t._v("CPU：2核，  内存：2GB")]),t._v(" "),e("p",[t._v("操作系统: centos lunix")]),t._v(" "),e("p",[t._v("Centos 是一个基于 Linux 的开源免费操作系统")]),t._v(" "),e("h3",{attrs:{id:"devops"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#devops"}},[t._v("#")]),t._v(" DevOps")]),t._v(" "),e("p",[t._v("DevOps Development 和 Operations 的组合，是一种方法论，并不特指某种技术或者工具。DevOps 是一种重视 Dev 开发人员和 Ops 运维人员之间沟通、协作的流程。通过自动化的软件交付，使软件的构建，测试，发布更加的快捷、稳定、可靠。")]),t._v(" "),e("h3",{attrs:{id:"前端部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端部署"}},[t._v("#")]),t._v(" 前端部署")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("FTP部署")])]),t._v(" "),e("li",[e("p",[t._v("nginx + jenkins 部署")])]),t._v(" "),e("li",[e("p",[t._v("nginx + jenkins + docker 部署")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);
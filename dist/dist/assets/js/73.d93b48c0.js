(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{669:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"github-actions自动部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-actions自动部署"}},[t._v("#")]),t._v(" Github Actions自动部署")]),t._v(" "),a("blockquote",[a("p",[t._v("其实前端部署无非就是把打包之后的代码丢到 "),a("code",[t._v("nginx html")]),t._v(" 目录下。")])]),t._v(" "),a("blockquote",[a("p",[t._v("但如果每次上线总是手动："),a("code",[t._v("修改、打包、登录服务器、上传代码、重启服务器")]),t._v("的话，就太低效了。这个时候，如果有个机器人能帮我们完成以上这些重复又没技术含量的活，那样部署工作就会轻松很多；而 "),a("code",[t._v("Github Actions")]),t._v(" 就是我们需要的那个机器人。")])]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[a("strong",[t._v("GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署管道。")]),t._v(" 您可以创建工作流程来构建和测试存储库的每个拉取请求，或将合并的拉取请求部署到生产环境。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.github.com/zh/actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Actions 文档"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("github于2019年11月后对该功能全面开放，现在所有的github用户可以直接使用该功能。GitHub 提供 Linux、Windows 和 macOS 虚拟机来运行您的工作流程，或者您可以在自己的数据中心或云基础架构中托管自己的自托管运行器。")])]),t._v(" "),a("p",[t._v("CI（持续集成）由很多操作组成，比如拉取最新代码、运行测试、登录服务器、部署服务器等，GitHub 把这些操作统一称为 "),a("strong",[t._v("Actions")]),t._v(" 。")]),t._v(" "),a("blockquote",[a("p",[t._v("GitHub Actions是GitHub提供的一种自动化工作流程（workflow）管理工具。它可以根据特定的事件触发，执行各种操作和任务，例如编译代码、运行测试、部署应用等。")])]),t._v(" "),a("blockquote",[a("p",[t._v("使用GitHub Actions，开发者可以定义一个或多个工作流程，每个工作流程由一系列步骤（steps）组成。每个步骤可以包含命令行脚本、调用API、运行测试等任务。这些步骤可以在不同的操作系统环境下执行，如Linux、macOS和Windows。")])]),t._v(" "),a("blockquote",[a("p",[t._v("GitHub Actions提供了一系列预定义的事件（events），如提交代码、创建分支、打标签等，当这些事件发生时，可以触发相应的工作流程执行。同时，开发者也可以通过手动方式触发工作流程的执行。")])]),t._v(" "),a("p",[t._v("正常需求的开发流程为："),a("code",[t._v("需求 => 开发 => 构建 => 测试 => 预发 => 部署")]),t._v("，这些操作是可重复利用的，利用这一概念，Github 集成了 Actions 市场，允许开发者把操作写成独立的脚本，发布到 Actions 市场，允许所有开发者使用。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Actions 市场"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("公共仓库和自托管运行器免费使用 GitHub Actions。 对于私有仓库，每个 GitHub 帐户可获得一定数量的免费记录和存储，具体取决于帐户所使用的产品。 超出包含金额的任何使用量都由支出限制控制。")])]),t._v(" "),a("h3",{attrs:{id:"github-action基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#github-action基本概念"}},[t._v("#")]),t._v(" Github Action基本概念")]),t._v(" "),a("blockquote",[a("p",[t._v("当我们想往自己的项目里接入"),a("code",[t._v("Github Actions")]),t._v("时，要在根项目目录里新建"),a("code",[t._v(".github/workflows")]),t._v("目录。然后通过编写"),a("code",[t._v("yml")]),t._v("格式文件定义"),a("code",[t._v("Workflow(工作流程)")]),t._v("去实现CI。在阅读yml文件之前，我们要先搞懂在Workflow中一些比较重要的概念：")])]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Workflows 工作流")])])]),t._v(" "),a("p",[a("code",[t._v("Workflows")]),t._v("（工作流程）持续集成的运行过程称为一次工作流程，也就是我们项目开始自动化部署到部署结束的这一段过程可以称为工作流程.")]),t._v(" "),a("blockquote",[a("p",[t._v("工作流是一个可配置的自动化流程，它将运行一个或多个作业。工作流是由签入存储库的 "),a("code",[t._v("YAML")]),t._v(" 文件定义的，并且在由 "),a("code",[t._v("repository")]),t._v(" 中的事件触发时运行，或者可以手动触发，或者按照定义的时间表运行。")])]),t._v(" "),a("blockquote",[a("p",[t._v("工作流在"),a("code",[t._v(".github/workflows")]),t._v(" 目录中定义, 并且存储库可以有多个工作流，每个工作流可以执行不同的任务集。例如，您可以使用一个工作流来构建和测试拉请求，使用另一个工作流在每次创建发行版时部署您的应用程序，还可以使用另一个工作流在每次有人打开新问题时添加标签。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("Events 事件")])])]),t._v(" "),a("p",[t._v("事件是存储库中触发工作流运行的特定活动。例如，活动可以来自 GitHub 创建请求("),a("code",[t._v("pull request")]),t._v(")、打开问题("),a("code",[t._v("open an issue")]),t._v(")或向存储库提交("),a("code",[t._v("push an commit")]),t._v(")。您还可以通过向 REST API 发布或手动触发按计划运行的工作流。")]),t._v(" "),a("blockquote",[a("p",[t._v("工作流可以由各种GitHub事件触发，例如代码推送、"),a("code",[t._v("pull request")]),t._v(" 或发布。")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("Jobs 作业")])])]),t._v(" "),a("p",[t._v("作业是工作流中在同一运行程序上执行的一组步骤。每个步骤要么是将要执行的 shell 脚本，要么是将要运行的操作。步骤按顺序执行，并相互依赖。由于每个步骤都在同一个运行程序上执行，因此可以将数据从一个步骤共享到另一个步骤。例如，您可以有一个生成应用程序的步骤，然后有一个测试生成的应用程序的步骤。")]),t._v(" "),a("p",[a("code",[t._v("job")]),t._v(" （任务）一个工作流程中包含多个任务，简单来说就是一次自动部署的过程需要完成一个或多个任务.")]),t._v(" "),a("p",[a("code",[t._v("step")]),t._v("（步骤）部署项目需要按照一个一个的步骤来进行，每个job由多个step构成.")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[t._v("Actions 动作")])])]),t._v(" "),a("p",[t._v("动作是 GitHub Actions 平台的自定义应用程序，它执行复杂但经常重复的任务。使用一个操作来帮助减少在工作流文件中编写的重复代码的数量。操作可以从 GitHub 获取 git 存储库，为构建环境设置正确的工具链等。")]),t._v(" "),a("p",[a("code",[t._v("action")]),t._v("（动作）每个步骤step可以包含一个或多个动作，比如我们在一个步骤中执行打包命令这个Action.")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("strong",[t._v("Runners 运行器")])])]),t._v(" "),a("p",[t._v("运行器是在工作流被触发时运行它们的服务器。每个运行器可以一次运行一个作业。GitHub 提供 Ubuntu Linux、 Microsoft Windows 和 macOS 运行程序来运行您的工作流; 每个工作流运行在一个全新的、新配置的虚拟机中执行。GitHub 还提供了更大的运行器，可以进行更大的配置。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("Docker 集成")]),t._v("：支持使用 Docker 容器运行工作流中的步骤。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("共享与重用")]),t._v("：开发者可以在 "),a("code",[t._v("GitHub Marketplace")]),t._v(" 上共享自己的 Actions，并使用其他开发者分享的 Actions。")])])]),t._v(" "),a("h3",{attrs:{id:"yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml"}},[t._v("#")]),t._v(" Yaml")]),t._v(" "),a("p",[t._v("编写 Github Action 的流程时，需要创建一个 workflow 工作流，workflow 必须存储在你的项目库根路径下的"),a("code",[t._v(".github/workflows")]),t._v("目录中，每一个 workflow 对应一个具体的"),a("code",[t._v(".yml")]),t._v(" 文件（或者 "),a("code",[t._v(".yaml")]),t._v("）。")]),t._v(" "),a("blockquote",[a("p",[t._v("yml是"),a("code",[t._v("YAML（YAML Ain’t Markup Language）")]),t._v("语言的文件，以数据为中心，比properties、xml等更适合做配置文件。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("特点")]),t._v(" "),a("ul",[a("li",[t._v("大小写敏感。")]),t._v(" "),a("li",[t._v("使用缩进表示层级关系。")]),t._v(" "),a("li",[t._v("缩进只能使用空格，不能用 "),a("code",[t._v("TAB")]),t._v(" 字符。")]),t._v(" "),a("li",[t._v("缩进的空格数量不重要，只要层级相同的元素左对齐即可。")]),t._v(" "),a("li",[a("code",[t._v("‘#’")]),t._v(" 表示注释。")])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.github.com/zh/actions/using-workflows/workflow-syntax-for-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Actions 的工作流语法"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("一个示例："),a("code",[t._v("learn-github-actions.yml")]),t._v("：")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定工作流程的名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" learn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("actions\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定此工作流程的触发事件Event。 此示例使用 推送 事件，即执行push后，触发该流水线的执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存放 learn-github-actions 工作流程中的所有Job")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定一个Job的名称为check-bats-version")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("check-bats-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定该Job在最新版本的 Ubuntu Linux 的 Runner(运行器)上运行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 存放 check-bats-version 作业中的所有Step")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# step-no.1: 运行actions/checkout@v3操作，操作一般用uses来调用，")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一般用于处理一些复杂又频繁的操作例如拉取分支，安装插件")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此处 actions/checkout 操作是从仓库拉取代码到Runner里的操作")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# step-no.2: actions/setup-node@v3 操作来安装指定版本的 Node.js，此处指定安装的版本为v14")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v3\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"14"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# step-no.3: 运行命令行下载bats依赖到全局环境中")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("g bats\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# step-no.4: 运行命令行查看bats依赖的版本")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bats "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("v\n\n")])])]),a("ul",[a("li",[t._v("又一个示例："),a("code",[t._v("hello-github-actions.yml")])])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("actions\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 触发 workflow 的事件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 分支随意")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个workflow由执行的一项或多项job")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 一个job任务，任务名为build")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#运行在最新版ubuntu系统中")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#步骤合集")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#新建一个名为checkout_actions的步骤")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" checkout_actions\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用checkout@v2这个action获取源码")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2 \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用建一个名为setup-node的步骤")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#使用setup-node@v1这个action")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v1\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#指定某个action 可能需要输入的参数")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'14'")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install and build\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#执行执行某个shell命令或脚本")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          npm install\n          npm run build")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" commit push\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#执行执行某个shell命令或脚本")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n          git config --global user.email xxx@163.com\n          git config --global user.name xxxx\n          git add .\n          git commit -m "update" -a\n          git push')]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境变量")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("email")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx@163.com   \n\n")])])]),a("ul",[a("li",[a("p",[a("code",[t._v("job->steps")]),t._v("：steps字段指定每个 Job 的运行步骤，每个job由多个step构成，它会从上至下依次执行。steps可以包含一个或多个步骤")])]),t._v(" "),a("li",[a("p",[t._v("环境变量可以配置在以下地方: "),a("code",[t._v("jobs->job->env")]),t._v(", "),a("code",[t._v("jobs->job->steps.env")])])]),t._v(" "),a("li",[a("p",[t._v("使用"),a("code",[t._v("uses")]),t._v("指的是这一步骤需要先调用哪个 Action。 Action 是组成工作流最核心最基础的元素。 每个 Action 可以看作封装的独立脚本，有自己的操作逻辑，我们只需要 uses 并通过 with 传入参数即可。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("比如 "),a("code",[t._v("actions/checkout@v2")]),t._v(" 就是官方社区贡献的用来拉取仓库分支的 Action， 你不需要考虑安装 git 命令工具，只需要把分支参数传入即可。")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("steps")]),t._v(" 其实是一个步骤数组，在 "),a("code",[t._v("YAML")]),t._v(" 语法中，以 "),a("code",[t._v("-")]),t._v(" 开始就是一个数组项, 每一个小步骤都有几个相关的选项：")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("name")]),t._v("，小步骤的名称。")]),t._v(" "),a("li",[a("code",[t._v("uses")]),t._v("，小步骤使用的 "),a("code",[t._v("actions")]),t._v(" 库名称或路径，"),a("code",[t._v("Github Actions")]),t._v(" 允许你使用别人写好的 "),a("code",[t._v("Actions")]),t._v(" 库。")]),t._v(" "),a("li",[a("code",[t._v("run")]),t._v("，小步骤要执行的 "),a("code",[t._v("shell")]),t._v(" 命令。")]),t._v(" "),a("li",[a("code",[t._v("env")]),t._v("，设置与小步骤相关的环境变量。")]),t._v(" "),a("li",[a("code",[t._v("with")]),t._v("，提供参数。")])])])])]),t._v(" "),a("p",[a("strong",[t._v("Action")])]),t._v(" "),a("p",[t._v("Github Actions 是GitHub的持续集成服务。持续集成由很多操作组成，比如登录远程服务器，发布内容到第三方服务等等，这些相同的操作完全可以提取出来制作成脚本供所有人使用。")]),t._v(" "),a("p",[t._v("GitHub允许开发者把每个操作写成独立的脚本文件，存放到代码仓库，使得其他开发者可以引用该脚本，这个脚本就是一个Action。")]),t._v(" "),a("p",[t._v("如果你需要某种功能的Action可以从GitHub社区共享的"),a("a",{attrs:{href:"https://github.com/marketplace?type=actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("action官方市场"),a("OutboundLink")],1),t._v("查找，也可以自己编程Action开源出来供大家使用。既然 actions 是代码仓库，当然就有版本的概念，用户可以引用某个具体版本的 action。")]),t._v(" "),a("h3",{attrs:{id:"context-上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#context-上下文"}},[t._v("#")]),t._v(" Context 上下文")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/contexts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Context 上下文"),a("OutboundLink")],1),t._v("就是工作流各个步骤的信息。例如"),a("code",[t._v("env.sha")]),t._v("，就是自己设置的环境变量里面的sha变量。")]),t._v(" "),a("p",[t._v("上下文种类和工作流步骤相关, 共有十一种:"),a("code",[t._v("github、env、job、jobs、steps、runner、secrets、strategy、matrix、needs、inputs")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("secrets上下文")])])]),t._v(" "),a("blockquote",[a("p",[t._v("在持续集成的过程中，我们可能会使用到自己的敏感数据，这些数据不应该被开源并泄露。那么如何才能安全的使用这些敏感数据呢?")])]),t._v(" "),a("p",[a("code",[t._v("GithubActions")]),t._v("提供了"),a("code",[t._v("Secrets")]),t._v("变量来实现这一效果, 我们可以在 github repo 上依次点击 "),a("code",[t._v("Settings -> Secrets-> Actions->New repository secret")]),t._v("创建一个敏感数据例如:"),a("code",[t._v("OSS_KEY_ID，OSS_KEY_SECRET")]),t._v("， 然后我们就可以在"),a("code",[t._v("GithubAction")]),t._v("脚本中使用这一变量了:")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  setup  aliyun  oss\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  manyuanrong/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ossutil@master\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("endpoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  oss"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("beijing.aliyuncs.com\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("access-key-id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  secrets.OSS_KEY_ID  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("access-key-secret")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  secrets.OSS_KEY_SECRET  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h2",{attrs:{id:"实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实践"}},[t._v("#")]),t._v(" 实践")]),t._v(" "),a("h3",{attrs:{id:"新增git-page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新增git-page"}},[t._v("#")]),t._v(" 新增Git Page")]),t._v(" "),a("blockquote",[a("p",[t._v("Git Page 可以将我们托管在 GitHub 仓库的项目部署为一个可以对外访问的网站，免去了我们自己购买与配置服务器的麻烦。")])]),t._v(" "),a("ol",[a("li",[t._v("首先新建一个项目，项目搭建与配置不再赘述；")])]),t._v(" "),a("blockquote",[a("p",[t._v("这里我直接用 Vite 搭建了一个项目，并且推送到github上，项目地址："),a("a",{attrs:{href:"https://github.com/verneyZhou/githook-vite-test",target:"_blank",rel:"noopener noreferrer"}},[t._v("githook-vite-test"),a("OutboundLink")],1)])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("p",[t._v("项目推送上去以后，可以先在github上看下是否推送成功；之后需要新建一个GitPage分支, 就命名为"),a("code",[t._v("feature/git-page")]),t._v("吧~")])]),t._v(" "),a("li",[a("p",[t._v("在这个分支上"),a("code",[t._v("npm run build")]),t._v("打包生成 dist文件，然后执行"),a("code",[t._v("cp -rf dist/* ./")]),t._v("将 dist 里面的内容都复制到根目录下；之后就可以"),a("code",[t._v("git push")]),t._v("提交了；")])])]),t._v(" "),a("blockquote",[a("p",[t._v("github pages 默认只能识别项目根目录的 index 文件，所以需要把打包产物放在根目录下~")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("项目提交后，进入github上该项目的 "),a("code",[t._v("GitHub Pages")]),t._v("配置项：")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git01.jpeg"),width:"auto"}}),t._v(" "),a("blockquote",[a("p",[t._v("选择"),a("code",[t._v("feature/git-page")]),t._v("分支后，保存，刷新，等一会儿上方就会出现可访问链接，点击就能访问该项目了~！！！")])]),t._v(" "),a("p",[a("strong",[t._v("注：")]),t._v(" 上面可访问的域名理论上其实应该是"),a("code",[t._v("https://verneyzhou.github.io/githook-vite-test")]),t._v("这种形式，但因为我之前买了个的域名，已经添加过解析设置，所以这里自动解析为我自己的域名；自己如果想自定义域名也可以在【Custom domain】中添加自己的域名~")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("之后如果我们再在"),a("code",[t._v("feature/git-page")]),t._v("分支上做修改，push提交后，github会在【Actions】自动执行"),a("code",[t._v("pages build and deployment")]),t._v("工作流，将"),a("code",[t._v("feature/git-page")]),t._v("的代码自动部署到git page~")])]),t._v(" "),a("h3",{attrs:{id:"git-actions自动部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-actions自动部署"}},[t._v("#")]),t._v(" Git Actions自动部署")]),t._v(" "),a("blockquote",[a("p",[t._v("上面的项目每一次修改后都要重新打包，切换分支拷贝dist文件夹，比较麻烦，能不能让GitHub自动检测push动作,自动进行打包部署吗？那就是GitHub Actions的工作了.")])]),t._v(" "),a("h4",{attrs:{id:"配置-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-yml"}},[t._v("#")]),t._v(" 配置"),a("code",[t._v(".yml")])]),t._v(" "),a("blockquote",[a("p",[t._v("在main分支下，新建"),a("code",[t._v(".github/workflows/git-page.yml")]),t._v("文件，添加如下命令：")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git-page.yml")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CI Github Pages "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# workflow 名称, 若省略则为文件名")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置触发条件，指定触发workflow的条件，通常是某些事件,比如代码推送push,拉取pull_request,可以是事件的数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# on: [push, pull_request]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听push操作")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" main "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里只配置了main分支，所以只有推送main分支才会触发以下任务")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置权限为write，这样才能推送代码到仓库，否则会报错")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("permissions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contents")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" write\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务，可以有多个")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# workflow的核心就是jobs，任务job放在jobs这个集合下，每一个job都有job_id，用job_id标识一个具体任务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务ID，可以自定义")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build-and-deploy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定运行所需要的虚拟机环境,必填字段")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建环境使用 ubuntu")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务步骤，一个job可以包含多个步骤")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 官方action，将代码拉取到虚拟机")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout   \n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install and Build   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖、打包，如果提前已打包好无需这一步")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          npm install\n          npm run build")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署， 将打包内容发布到 github page")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" JamesIves/github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@3.7.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用别人写好的 actions")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义环境变量")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ACCESS_TOKEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.GITHOOK_VITE_TEST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# github token，需要在仓库的 secrets 中配置")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BRANCH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" feature/git"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("page "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到哪个分支")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("FOLDER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dist "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包后的文件夹")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   REPOSITORY_NAME: verneyzhou/verneyzhou.github.io # 这是我的 github page 仓库")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   TARGET_FOLDER: githook-vite-test # 打包的文件将放到静态服务器 githook-vite-test 目录下")]),t._v("\n\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("流程梳理")]),t._v(" "),a("ol",[a("li",[t._v("只有当 main 分支有新的 push 推送时候才会执行整个 "),a("code",[t._v("workflow")]),t._v("；")]),t._v(" "),a("li",[t._v("整个 "),a("code",[t._v("workflow")]),t._v(" 只有一个 job, job_id 是 "),a("code",[t._v("build-and-deploy")]),t._v(" ,name 被省略；")]),t._v(" "),a("li",[t._v("job 有三个"),a("code",[t._v("step")]),t._v("：\n"),a("ul",[a("li",[t._v("第一步是 "),a("code",[t._v("Checkout")]),t._v(",获取源码，使用的 "),a("code",[t._v("action")]),t._v(" 是GitHub官方的 "),a("code",[t._v("actions/checkout")]),t._v(";")]),t._v(" "),a("li",[t._v("第二步："),a("code",[t._v("Install and Build,")]),t._v("执行了两条命令："),a("code",[t._v("npm install,npm run build")]),t._v(",分别安装依赖与打包应用.")]),t._v(" "),a("li",[t._v("第三步："),a("code",[t._v("Deploy")]),t._v(" 部署，使用的第三方action："),a("code",[t._v("JamesIves/github-pages-deploy-action@3.7.1")]),t._v(",它有两个参数：分别是"),a("code",[t._v("ACCESS_TOKEN, BRANCH, FOLDER")]),t._v("，更多关于这个 action 的详情可以去查看"),a("a",{attrs:{href:"https://github.com/JamesIves/github-pages-deploy-action",target:"_blank",rel:"noopener noreferrer"}},[t._v("github-pages-deploy-action"),a("OutboundLink")],1),t._v(".")])])])])]),t._v(" "),a("blockquote",[a("p",[t._v("如果你需要某个action，不必自己写复杂的脚本，直接引用他人写好的 action即可，整个持续集成过程，就变成了一个actions的组合，你可以在GitHub的官方市场，可以搜索到他人提交的actions。")])]),t._v(" "),a("p",[a("code",[t._v("runs-on")]),t._v(": GitHub Actions给我们提提供的运行环境主要有以下几种：")]),t._v(" "),a("p",[a("code",[t._v("ubuntu-latest，ubuntu-18.04或ubuntu-16.04windows-latest，windows-2019或windows-2016macOS-latest或macOS-10.14")])]),t._v(" "),a("p",[t._v("上面"),a("code",[t._v(".yml")]),t._v("里面的内容也可以在github里面直接进行添加：进入项目主页, "),a("code",[t._v("Actions -> New workflow -> set up a workflow yourself")]),t._v("，添加上述"),a("code",[t._v(".yml")]),t._v("模板，点击"),a("code",[t._v("Commit changes")]),t._v("即可~")]),t._v(" "),a("h4",{attrs:{id:"添加token"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加token"}},[t._v("#")]),t._v(" 添加Token")]),t._v(" "),a("blockquote",[a("p",[t._v("在上面的"),a("code",[t._v(".yml")]),t._v("中需要传一个"),a("code",[t._v("ACCESS_TOKEN")]),t._v("，这个需要在github中配置~")])]),t._v(" "),a("ol",[a("li",[t._v("生成"),a("code",[t._v("Personal access tokens（个人访问令牌）")]),t._v(": 进入github个人主页，"),a("code",[t._v("Settings => Developer settings => Personal access tokens")]),t._v("，选择"),a("code",[t._v("Tokens(classic)")]),t._v("，再选择"),a("code",[t._v("Generate new token(calssic)")]),t._v("，生成token:")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git02.jpg"),width:"auto"}}),t._v(" "),a("blockquote",[a("p",[t._v("如上图勾选之后，点击【Gernerate Token】，即可生成~")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("个人token生成之后，赶紧复制（只会显示一次！！！）；之后进入项目主页，"),a("code",[t._v("settings => Secrets and varibles")]),t._v("，生成 secret:")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git03.jpg"),width:"auto"}}),t._v(" "),a("p",[t._v("名称自定义，然后将刚才复制的token粘贴到这里即可，保存~")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git04.jpg"),width:"auto"}}),t._v(" "),a("blockquote",[a("p",[t._v("这个创建的scret"),a("code",[t._v("GITHOOK_VITE_TEST")]),t._v("就是我们在"),a("code",[t._v(".yml")]),t._v("配置中需要用的到token了~")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("等到token配置完毕，之后直接"),a("code",[t._v("git push")]),t._v("提交 main 分支代码，就会自动触发 Actions 就行 Git Page 的自动部署了~")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git05.jpg"),width:"auto"}}),t._v(" "),a("blockquote",[a("p",[t._v("部署完成后就可以在"),a("code",[t._v("https://verneyzhou.github.io/githook-vite-test")]),t._v("中访问到最新的修改了~~~！！！")])]),t._v(" "),a("h3",{attrs:{id:"自动部署阿里云服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动部署阿里云服务器"}},[t._v("#")]),t._v(" 自动部署阿里云服务器")]),t._v(" "),a("blockquote",[a("p",[t._v("上面是通过"),a("code",[t._v("git-page.yml")]),t._v("脚本执行"),a("code",[t._v("Git Actions")]),t._v("让我们的项目自动部署到"),a("code",[t._v("Git Page")]),t._v("，那接下来实现怎么通过"),a("code",[t._v("Git Actions")]),t._v("自动部署项目到我们自己的服务器~")])]),t._v(" "),a("p",[t._v("在配置工作流之前，我们需要先在阿里云服务器中生成SSH密钥对~ "),a("a",{attrs:{href:"https://www.alibabacloud.com/help/zh/ecs/user-guide/connect-to-a-linux-instance-by-using-an-ssh-key-pair",target:"_blank",rel:"noopener noreferrer"}},[t._v("通过密钥认证登录Linux实例"),a("OutboundLink")],1)]),t._v(" "),a("blockquote",[a("p",[t._v("SSH密钥对是一种安全便捷的登录认证方式。在Windows环境和支持SSH命令的环境（例如Linux环境、Windows下的MobaXterm）中，您均可以使用SSH密钥对连接Linux实例。")])]),t._v(" "),a("p",[t._v("1."),a("strong",[t._v("创建密钥对")]),t._v("："),a("code",[t._v("ECS控制台 => 网络与安全 => 密钥对")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.alibabacloud.com/help/zh/ecs/user-guide/create-an-ssh-key-pair",target:"_blank",rel:"noopener noreferrer"}},[t._v("创建SSH密钥对"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("创建密钥对流程比较简单，按上面官方文档操作即可~创建后会自动在本地下载"),a("code",[t._v(".pem")]),t._v("私钥文件")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[t._v("绑定密钥对")]),t._v("："),a("code",[t._v("ECS控制台 => 实例与镜像 => 实例 => 实例属性 => 绑定密钥对")])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.alibabacloud.com/help/zh/ecs/user-guide/bind-an-ssh-key-pair-to-an-instance",target:"_blank",rel:"noopener noreferrer"}},[t._v("绑定SSH密钥对"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("创建秘钥对之后，接着就是绑定ECS实例；流程简单，按上面官网操作即可~")]),t._v(" "),a("blockquote",[a("p",[t._v("绑定之后需要重启服务器，重启之后服务器中的nginx,node，jenkins服务可能会关闭，也需要重启（没有就算了）~")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("github中添加秘钥")]),t._v("：项目 => "),a("code",[t._v("Settings => Secrets and variables => New repository secret")])])]),t._v(" "),a("blockquote",[a("p",[t._v("跟上面添加"),a("code",[t._v("ACCESS_TOKEN")]),t._v("流程一样，这里填入的key就是创建秘钥时下载到本地私钥~")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[a("strong",[t._v("项目中添加"),a("code",[t._v("yml")]),t._v("文件")]),t._v("：")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# aliyun-deploy.yml")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Build app and deploy to aliyun  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 工作流名称")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#监听push操作")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所监听的分支")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" feature/git"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("aliyun\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 服务器环境，表示你这个工作流程要运行在什么操作系统上")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 步骤")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v1\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install Node.js\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v1  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装 node 环境")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n       "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'16'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的node版本")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install npm dependencies\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Run build task\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" OUTDIR=githook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vite npm run build  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包到 githook-vite 文件夹")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deploy to Server\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" easingthemes/ssh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy@main "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用的 action, 部署到阿里云服务器")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境变量")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SSH_PRIVATE_KEY")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.ALIYUN_ECS_KEY "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 保存在github上的私钥")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ARGS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-rltgoDzvO --delete'")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("SOURCE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" githook"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("vite "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这是要复制到阿里云静态服务器的文件夹名称")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("REMOTE_HOST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123.57.172.182'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 你的阿里云公网地址")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("REMOTE_USER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" root "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 阿里云登录后默认为 root 用户，并且所在文件夹为 root")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("TARGET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /root/nginx/upload/dev "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包后的文件夹将放在 /root/nginx/upload/dev 目录下")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("流程")]),t._v(" "),a("ol",[a("li",[t._v("使用 "),a("code",[t._v("actions/checkout@v1")]),t._v(" 库克隆代码到 "),a("code",[t._v("ubuntu")]),t._v(" 上。")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("actions/setup-node@v1")]),t._v(" 库安装 "),a("code",[t._v("nodejs")]),t._v("，"),a("code",[t._v("with")]),t._v(" 提供了一个参数 "),a("code",[t._v("node-version")]),t._v(" 表示要安装的 "),a("code",[t._v("nodejs")]),t._v(" 版本。")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("ubuntu")]),t._v(" 的 "),a("code",[t._v("shell")]),t._v(" 上执行 "),a("code",[t._v("npm install")]),t._v(" 下载依赖。")]),t._v(" "),a("li",[t._v("执行 "),a("code",[t._v("npm run build")]),t._v(" 打包项目。")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("easingthemes/ssh-deploy@main")]),t._v(" 库，这个库的作用就是用 "),a("code",[t._v("SSH")]),t._v(" 的方式远程登录到阿里云服务器，将打包好的文件夹复制到阿里云指定的目录上。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("这里使用了第三方脚本来实现部署到阿里云服务器："),a("a",{attrs:{href:"https://github.com/easingthemes/ssh-deploy",target:"_blank",rel:"noopener noreferrer"}},[t._v("easingthemes/ssh-deploy@main"),a("OutboundLink")],1)])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("yml文件配置完成后，之后将"),a("code",[t._v("feature/git-aliyun")]),t._v("分支"),a("code",[t._v("git push")]),t._v("提交，就会自动执行该脚本，将我们打包后的文件部署到阿里云服务器了，部署成功后，直接访问"),a("code",[t._v("http://123.57.172.182/dev/githook-vite")]),t._v("就可以看到我们的项目了~~~！！！")])]),t._v(" "),a("blockquote",[a("p",[t._v("我在部署过程中报错了，下方【报错记录】有备注，应该是ssh登录权限问题，我先在服务器安全规则处配上"),a("code",[t._v("0.0.0.0")]),t._v("把权限放开，才能部署成功...暂时无其他解...")])]),t._v(" "),a("p",[t._v("上面的"),a("code",[t._v("Git Page")]),t._v("自动部署和自动部署阿里云服务器是属于"),a("code",[t._v("CD")]),t._v("的流程；作为"),a("code",[t._v("CI/CD")]),t._v("工具，"),a("code",[t._v("Git Actions")]),t._v("肯定是还可以添加一些"),a("code",[t._v("CI")]),t._v("操作的。")]),t._v(" "),a("h3",{attrs:{id:"代码规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码规范"}},[t._v("#")]),t._v(" 代码规范")]),t._v(" "),a("blockquote",[a("p",[t._v("代码规范离不开各种 "),a("code",[t._v("Linter")]),t._v(", 一般前端项目都是使用 "),a("code",[t._v("Prettier")]),t._v(" 解决代码格式问题，使用 "),a("code",[t._v("linters")]),t._v(" 解决代码质量问题~")])]),t._v(" "),a("h4",{attrs:{id:"eslint-prettier"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eslint-prettier"}},[t._v("#")]),t._v(" Eslint&Prettier")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("集成Prettier配置")])])]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Prettier"),a("OutboundLink")],1),t._v("是一款强大的代码格式化工具，支持 "),a("code",[t._v("JavaScript、TypeScript、CSS、SCSS、Less、JSX、Angular、Vue、GraphQL、JSON、Markdown")]),t._v(" 等语言，基本上前端能用到的文件格式它都可以搞定，是当下最流行的代码格式化工具。")])]),t._v(" "),a("p",[t._v("VSCode 编辑器使用 Prettier 配置需要下载插件: "),a("code",[t._v("Code formatter")])]),t._v(" "),a("ol",[a("li",[t._v("安装："),a("code",[t._v("npm i prettier -D")])]),t._v(" "),a("li",[t._v("在根目录下创建 "),a("code",[t._v(".prettierrc")]),t._v(" 文件，配置")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("集成Eslint配置")])])]),t._v(" "),a("blockquote",[a("p",[t._v("ESLint 是一款用于查找并报告代码中问题的工具，并且支持部分问题自动修复。")])]),t._v(" "),a("p",[t._v("VSCode 使用 ESLint 配置文件需要去插件市场下载插件: "),a("code",[t._v("ESLint")]),t._v(" 。")]),t._v(" "),a("ol",[a("li",[t._v("安装："),a("code",[t._v("npm i eslint -D")])]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("npx eslint --init")]),t._v("配置 ESlint")])]),t._v(" "),a("blockquote",[a("p",[t._v("关于 Eslint 与 Prettier 的具体配置不是这篇博文的重点，这里不再赘述~")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("解决Eslint 与 Prettier 冲突问题")])])]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("npm i eslint-plugin-prettier eslint-config-prettier -D")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("eslint-plugin-prettier")]),t._v(": 将 "),a("code",[t._v("Prettier")]),t._v(" 的规则设置到 "),a("code",[t._v("ESLint")]),t._v(" 的规则中；")]),t._v(" "),a("li",[a("code",[t._v("eslint-config-prettier")]),t._v(": 关闭 "),a("code",[t._v("ESLint")]),t._v(" 中与 "),a("code",[t._v("Prettier")]),t._v(" 中会发生冲突的规则。")])])]),t._v(" "),a("li",[a("p",[t._v("在 "),a("code",[t._v(".eslintrc.js")]),t._v(" 添加 prettier 插件, 形成优先级："),a("code",[t._v("Prettier 配置规则 > ESLint 配置规则")])])])]),t._v(" "),a("ul",[a("li",[t._v("配置完成后，还需要在"),a("code",[t._v("package.json")]),t._v("中添加命令：")])]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --ext .js,.vue src"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint:fix"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint --ext .js,.vue src --fix"')]),t._v("\n")])])]),a("ul",[a("li",[t._v("之后在项目中添加如下代码：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("addFn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log('====addFn', addFn(3, 4));")]),t._v("\n")])])]),a("p",[t._v("然后执行"),a("code",[t._v("npm run lint")]),t._v("看下eslint配置是否生效~ 正常命令行应该会有提示; 执行"),a("code",[t._v("npm run lint:fix")]),t._v(", 一般的格式会问题应该也会修复，但像上面代码应该会报错误：")]),t._v(" "),a("p",[a("code",[t._v("Error: 4:7 error 'addFn' is assigned a value but never used no-unused-vars")])]),t._v(" "),a("p",[t._v("不能自动修复，就需要手动修复了~")]),t._v(" "),a("h4",{attrs:{id:"配置ci-yml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置ci-yml"}},[t._v("#")]),t._v(" 配置"),a("code",[t._v("ci.yml")])]),t._v(" "),a("blockquote",[a("p",[t._v("代码规范配置完成，项目中试着"),a("code",[t._v("npm run lint")]),t._v("看下是否生效；没问题后，接着配置ci流程~")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CI\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 监听任意分支的pull或push都会触发")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任意分支")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pull_request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branches")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("linter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 任务ID，可以自定义")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 构建环境使用 ubuntu")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 官方action，将代码拉取到虚拟机")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装node环境")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("\n      \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 检查缓存")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果key命中缓存则直接将缓存的文件还原到 path 目录，从而减少流水线运行时间")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 若 key 没命中缓存时，在当前Job成功完成时将自动创建一个新缓存")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cache\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存命中结果会存储在steps.[id].outputs.cache-hit里，该变量在继后的step中可读")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dependencies\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/cache@v3\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./node_modules "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存文件目录的路径")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" runner.os "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" hashFiles('"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("**/package-lock.json')")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# key中定义缓存标志位的生成方式。runner.OS指当前环境的系统")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restore-keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n            ${{ runner.os }}-node-")]),t._v("\n      \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install Dependencies\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果缓存标志位没命中，则执行该step。否则就跳过该step")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" steps.cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dependencies.outputs.cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hit "),a("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" 'true'\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm ci  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# npm ci和npm install命令一样，是用来安装依赖的命令, npm i依赖package.json，而npm ci依赖package-lock.json")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码格式检查")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Running Lint\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm run lint\n")])])]),a("blockquote",[a("p",[t._v("关于上面的"),a("code",[t._v("Cahe")]),t._v("步骤中，7 天内未被访问的任何缓存条目将会被删除。 可以存储的缓存数没有限制，但存储库中所有缓存的总大小限制为 10 GB。")])]),t._v(" "),a("p",[t._v("上面的"),a("code",[t._v("ci.yml")]),t._v("配置完成后，然后执行"),a("code",[t._v("git push")]),t._v(",会在"),a("code",[t._v("github")]),t._v("的 Actions 上发现有 workflows 在执行，如果代码中有格式问题的话，应该是会报错的~")]),t._v(" "),a("h4",{attrs:{id:"husky"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[t._v("#")]),t._v(" Husky")]),t._v(" "),a("blockquote",[a("p",[t._v("上面添加了"),a("code",[t._v("npm run lint")]),t._v("虽然能够暴露出来不规范的语法，但不能保证每个人在提交代码之前执行一遍"),a("code",[t._v("lint")]),t._v("校验; 而且"),a("code",[t._v("ci.yml")]),t._v("运行报错也只是一个提示而已，用户还是很有可能提交不符合规范的代码的~ 所以就需要 "),a("code",[t._v("git hooks")]),t._v(" 来自动化校验的过程，否则禁止提交。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://git-scm.com/docs/githooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git hooks"),a("OutboundLink")],1),t._v("是可以设置在 "),a("code",[t._v("Git")]),t._v(" 生命周期的在某些事件下运行的脚本。 这些事件包括提交的不同阶段，例如在提交之前（"),a("code",[t._v("pre-commit")]),t._v(",提交之后（"),a("code",[t._v("post-commit")]),t._v("）。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("Husky"),a("OutboundLink")],1),t._v("是一种工具:让我们可以轻松地接入 "),a("code",[t._v("Git hooks")]),t._v(" ，并在我们需要的某些阶段运行脚本。")]),t._v(" "),a("blockquote",[a("p",[t._v("它的工作方式是在"),a("code",[t._v("package.json")]),t._v("文件中包含一个对象，该对象通过配置 "),a("code",[t._v("Husky")]),t._v(" 来运行我们指定的脚本。 之后，"),a("code",[t._v("Husky")]),t._v(" 负责管理我们的脚本("),a("code",[t._v("hooks")]),t._v(" 将在 "),a("code",[t._v("Git")]),t._v(" 生命周期中的哪一点运行)~")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("husky初体验")])])]),t._v(" "),a("ol",[a("li",[t._v("安装 husky：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm i husky -D\nnpx husky install\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[t._v("package.json")]),t._v("脚本中添加命令：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('"prepare": "husky install"\n')])])]),a("p",[t._v("如果如果你的"),a("code",[t._v("npm")]),t._v("版本大于等于"),a("code",[t._v("7.1.0")]),t._v(", 可以执行："),a("code",[t._v('npm set-script prepare "husky install"')]),t._v("自动添加~")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("添加一个"),a("code",[t._v("lint")]),t._v("钩子：新建"),a("code",[t._v(".husky/pre-commit")]),t._v("，写入以下内容：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#!/bin/sh\n. "$(dirname "$0")/_/husky.sh"\nnpm run lint\n')])])]),a("p",[t._v("或者执行"),a("code",[t._v('npx husky add .husky/pre-commit "npm run lint"')]),t._v("，也会自动生成上述文件~")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("之后项目中添加如下代码：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("addFn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log('====addFn', addFn(3, 4));")]),t._v("\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("最后"),a("code",[t._v("git commit")]),t._v("提交修改，会发现报错了：")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("➜  githook-vite-test git:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("feature/dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -am添加husky\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" githook-vite-test@0.0.0 lint\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" eslint --ext .js,.vue src\n\n\n/Users/zhouyuan10/test-code/githook-vite-test/src/App.vue\n  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(":7  error  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'addFn'")]),t._v(" is assigned a value but never used  no-unused-vars\n\n✖ "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" problem "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" error, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" warnings"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nhusky - pre-commit hook exited with code "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("说明在"),a("code",[t._v("pre-commmit")]),t._v("这个"),a("code",[t._v("hook")]),t._v("里执行了"),a("code",[t._v("npm run lint")]),t._v("，存在报错信息，则"),a("code",[t._v("commit")]),t._v("提交将会失效~")])]),t._v(" "),a("p",[t._v("运用"),a("code",[t._v("Husky")]),t._v("我们就可以在"),a("code",[t._v("commit, push")]),t._v("等这些钩子中执行一些如代码校验，代码格式化等任务，在这个项目中添加了"),a("code",[t._v("Husky")]),t._v("以后每次提交都会强制进行校验，能很大程度确保代码格式规范~")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6904150964266074119",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何通过 Git 和 Husky 添加提交钩子并实现代码任务自动化"),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"commitlint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[t._v("#")]),t._v(" Commitlint")]),t._v(" "),a("blockquote",[a("p",[t._v("既然已经到这里了，那就顺手再把"),a("code",[t._v("commitlint")]),t._v("加了吧~")])]),t._v(" "),a("p",[t._v("为什么需要 "),a("code",[t._v("Commitlint")]),t._v("，除了在后续的生成"),a("code",[t._v("changelog")]),t._v("文件和语义发版中需要提取"),a("code",[t._v("commit")]),t._v("中的信息，也利于其他同学分析你提交的代码，所以我们要约定"),a("code",[t._v("commit")]),t._v("的规范。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("安装"),a("code",[t._v("Commitlint")]),t._v(": "),a("code",[t._v("npm i @commitlint/config-conventional @commitlint/cli -D")])])]),t._v(" "),a("li",[a("p",[t._v("将"),a("code",[t._v("commitlint")]),t._v("添加到钩子："),a("code",[t._v("npx husky add .husky/commit-msg 'npx --no-install commitlint --edit \"$1\"'")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("也可以新建"),a("code",[t._v(".husky/commit-msg")]),t._v(", 手动添加内容：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('#!/usr/bin/env sh\n. "$(dirname -- "$0")/_/husky.sh"\n\nnpx --no-install commitlint --edit ""\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("项目根目录下创建"),a("code",[t._v(".commitlintrc")]),t._v("，并写入配置：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"extends"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/config-conventional"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("最后随便修改一下，提交一条不符合规范的"),a("code",[t._v("commit")]),t._v("，测试下是否生效，如："),a("code",[t._v("git commit -amsubmit")]),t._v("；正常情况应该会像下面一样报错：")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("➜  githook-vite-test git:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("feature/dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" ✗ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -amsubmit\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" githook-vite-test@0.0.0 lint\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" eslint --ext .js,.vue src\n\n⧗   input: submit\n✖   subject may not be empty "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("subject-empty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n✖   "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("type")]),t._v(" may not be empty "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("type-empty"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n✖   found "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" problems, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" warnings\nⓘ   Get help: https://github.com/conventional-changelog/commitlint/"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#what-is-commitlint")]),t._v("\n\nhusky - commit-msg hook exited with code "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("提交一个符合规范的commit:"),a("code",[t._v('git commit -am"ci: 添加commitlint"')]),t._v(", 就提交成功了~")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("@commitlint/config-conventional 规范")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("feat")]),t._v("：新功能")]),t._v(" "),a("li",[a("code",[t._v("fix")]),t._v("：修补 BUG")]),t._v(" "),a("li",[a("code",[t._v("docs")]),t._v("：修改文档，比如 "),a("code",[t._v("README, CHANGELOG, CONTRIBUTE")]),t._v(" 等等")]),t._v(" "),a("li",[a("code",[t._v("style")]),t._v("：不改变代码逻辑 (仅仅修改了空格、格式缩进、逗号等等)")]),t._v(" "),a("li",[a("code",[t._v("refactor")]),t._v("：重构（既不修复错误也不添加功能）")]),t._v(" "),a("li",[a("code",[t._v("perf")]),t._v("：优化相关，比如提升性能、体验")]),t._v(" "),a("li",[a("code",[t._v("test")]),t._v("：增加测试，包括单元测试、集成测试等")]),t._v(" "),a("li",[a("code",[t._v("build")]),t._v("：构建系统或外部依赖项的更改")]),t._v(" "),a("li",[a("code",[t._v("ci")]),t._v("：自动化流程配置或脚本修改")]),t._v(" "),a("li",[a("code",[t._v("chore")]),t._v("：非 src 和 test 的修改，发布版本等")]),t._v(" "),a("li",[a("code",[t._v("revert")]),t._v("：恢复先前的提交")])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/config-conventional"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"代码测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码测试"}},[t._v("#")]),t._v(" 代码测试")]),t._v(" "),a("blockquote",[a("p",[t._v("前端测试主要有单元测试（Unit Test）、集成测试（Integration Test）、UI 测试（UI Test）。由于项目里只有一个页面组件，且本章节的重点是实现CI而不是前端自动化测试，因此这里用单元测试来实现一下~")])]),t._v(" "),a("p",[t._v("所谓"),a("strong",[t._v("单元测试")]),t._v("，指的是对最小测试单元进行测试。比如在项目中写了一个计算文本宽度的方法，方法写好之后如果直接拿过去用，除非是经过验证的现有方法，否则是容易出现处理上的漏洞的。因此我们可以把这个方法单独提取出来，放到测试文件夹中。")]),t._v(" "),a("p",[t._v("在前端项目中，有很多用于单元测试的工具，如最常见的"),a("a",{attrs:{href:"https://jestjs.io/zh-Hans/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest"),a("OutboundLink")],1),t._v("。但对于由"),a("code",[t._v("vite")]),t._v("构建的前端项目而言，使用"),a("code",[t._v("vite")]),t._v("配套的"),a("code",[t._v("vitest")]),t._v("会更加方便、舒适。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://cn.vitest.dev/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vitest官方文档"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[a("p",[t._v("安装"),a("code",[t._v("vitest")]),t._v(": "),a("code",[t._v("npm install vitest -D")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("package.json")]),t._v("中添加脚本命令："),a("code",[t._v('"test": "vitest"')])])]),t._v(" "),a("li",[a("p",[t._v("根目录下新建"),a("code",[t._v("test")]),t._v("目录，新建"),a("code",[t._v("sum.js")]),t._v("和"),a("code",[t._v("sum.text.js")]),t._v("文件：")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * sum.js\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * sum.test.js\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vitest'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./sum'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test方法是用于编写单元测试的函数。test方法接受两个参数：测试名称和测试函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test(name: string, testFn: Function, timeout?: number | TestOptions): Promise<void>;")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'adds 1 + 2 to equal 3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expect方法是用于创建断言的函数。断言是一种用于验证代码的行为和输出是否符合预期的方式。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// expect(actual).matcher(expected)")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// actual是一个表达式或变量，表示要检查的实际值。matcher是一个函数，表示要使用的比较方法。expected是一个值或对象，表示期望的结果。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("然后执行"),a("code",[t._v("npm run test")]),t._v("，会发现：")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" vitest\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" serve "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" \n\n DEV  v0.34.5 /Users/zhouyuan10/test-code/githook-vite-test\n\n ✓ test/sum.test.js "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   ✓ adds "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" to equal "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n Test Files  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      Tests  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   Start at  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v(":12:59\n   Duration  156ms "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transform 19ms, setup 0ms, collect 10ms, tests 1ms, environment 0ms, prepare 52ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n PASS  Waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" changes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n       press h to show help, press q to quit\n")])])]),a("blockquote",[a("p",[t._v("说明添加单元测试成功了~")])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("之后在"),a("code",[t._v("ci.yml")]),t._v("后面添加测试step:")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tests")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 测试")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" linter "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 依赖linter任务")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v2\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装依赖")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install Dependencies\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果缓存标志位没命中，则执行该step。否则就跳过该step")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" steps.cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dependencies.outputs.cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hit "),a("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" 'true'\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm ci\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm run test\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("添加完成后，就可以提交，这样就每次提交会执行"),a("code",[t._v("npm run test")]),t._v("了，在github的 Actions 上就能看到"),a("code",[t._v("tests")]),t._v("任务的自动执行~")])]),t._v(" "),a("ul",[a("li",[t._v("测试覆盖率")])]),t._v(" "),a("blockquote",[a("p",[t._v("代码覆盖率是一种用于评估代码的质量和完整性的指标，它表示代码中有多少比例被测试用例所覆盖。测试覆盖率的工具可以帮助开发者生成和查看覆盖率报告，从而发现代码中的潜在问题和改进点。")])]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("vitest")]),t._v("更多的使用这里不做阐述了，具体可参考下面链接：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://blog.csdn.net/qq_28255733/article/details/132479859",target:"_blank",rel:"noopener noreferrer"}},[t._v("【前端】前端单元测试、覆盖率测试工具Vitest入门指南"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/7190159077908381756",target:"_blank",rel:"noopener noreferrer"}},[t._v("年轻人的第一款单元测试框架———vitest"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"生成压缩包并发版"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成压缩包并发版"}},[t._v("#")]),t._v(" 生成压缩包并发版")]),t._v(" "),a("p",[t._v("这里在"),a("code",[t._v("git-page.yml")]),t._v("中添加一个新的任务, 实现自动生成压缩包并发版，这里就直接上代码了~")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git-page.yml")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("zip-and-release")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成压缩包并发版")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("needs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("and"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 依赖前面的build-and-deploy任务")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node@v2\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node-version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cache\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存命中结果会存储在steps.[id].outputs.cache-hit里，该变量在继后的step中可读")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dependencies\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/cache@v3\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./node_modules "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 缓存文件目录的路径")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" runner.os "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" hashFiles('"),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("**/package-lock.json')")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# key中定义缓存标志位的生成方式。runner.OS指当前环境的系统")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("restore-keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n                ${{ runner.os }}-node-")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Install npm dependencies\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果缓存标志位没命中，则执行该step。否则就跳过该step")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" steps.cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dependencies.outputs.cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hit "),a("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!=")]),t._v(" 'true'\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 从package.json里获取version属性的值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在CD Workflow中会给每个生成的制品打上标签，而标签取值于version值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Read Version\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 读取出来的值会放在steps.[id].outputs.value供其他步骤step读取")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" version\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ashley"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("taylor/read"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("property"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v1.0\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./package.json\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("property")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" version\n\n        \n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包, 压缩制品，压缩到bundle.zip压缩包里")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Building\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n            npm run build\n            pwd & ls\n            zip -r bundle ./dist/**")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 基于当前commit进行版本发布(Create a release)，tag_name是v前缀加上package.json的version值")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Create GitHub Release\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 此步骤中，版本发布后会返回对应的url，以供下面上传制品的步骤中读取使用")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" create_release\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/create"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("release@v1\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.GITHOOK_VITE_TEST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tag_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("steps.version.outputs.value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("release_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("steps.version.outputs.value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("draft")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prerelease")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把bundle.zip上传到仓库对应的发布版本Release上")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Update Release Asset\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" upload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("asset\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/upload"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("asset@v1\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("GITHUB_TOKEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.GITHOOK_VITE_TEST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("upload_url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" steps.create_release.outputs.upload_url "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("asset_path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./bundle.zip\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("asset_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bundle.zip\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("asset_content_type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" application/zip "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 格式")]),t._v("\n")])])]),a("ol",[a("li",[t._v("配置完成后，在"),a("code",[t._v("main")]),t._v("分支上提交新的修改，之后github上就会自动执行"),a("code",[t._v("git-page.yml")]),t._v("里面的工作流；")]),t._v(" "),a("li",[t._v("等到"),a("code",[t._v("Git Page")]),t._v("部署完成后，就开始获取"),a("code",[t._v("package.json")]),t._v("中的版本信息，打包压缩成"),a("code",[t._v(".zip")]),t._v("文件；")]),t._v(" "),a("li",[t._v("压缩完成后就添加版本信息，并把压缩包上传到"),a("code",[t._v("Release")]),t._v("上；执行完毕后，就可以在github上看到信息了：")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git20.jpeg"),width:"auto"}}),t._v(" "),a("p",[t._v("点进去就可以看到"),a("code",[t._v("Release")]),t._v("压缩包信息：")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git21.png"),width:"auto"}}),t._v(" "),a("blockquote",[a("p",[t._v("在每次主干更新后进行版本发布不仅符合开源项目的更新流程，而且利于我们之后部署特定发布版本的制品~")])]),t._v(" "),a("p",[t._v("Q: 为什么需要 "),a("code",[t._v("Update Release Asset")]),t._v(" 这个流程?")]),t._v(" "),a("blockquote",[a("p",[t._v("首先，把制品放在对应的发布版本上是很常见的开源行为，读者也可以把制品下载下来放到nginx直接查看页面效果。其次也是很重要的，是为了回滚（下面深入篇会写回滚机制的实现）的实现，回滚需要快速获取前一个发布版本的制品覆盖到部署机器上。因此需要我们把每个制品都存放在对应的发布版本以实现持久化。")])]),t._v(" "),a("p",[t._v("**注：**每次提 pr 时要确保 "),a("code",[t._v("package.json")]),t._v(" 中的 "),a("code",[t._v("version")]),t._v(" 值有变化，不然 "),a("code",[t._v("CD Workflow")]),t._v(" 会在 "),a("code",[t._v("Create GitHub Release")]),t._v(" 的步骤里报已存在 "),a("code",[t._v("Tag")]),t._v(" 的错误; "),a("code",[t._v("version")]),t._v("值在"),a("code",[t._v("CD Workflow")]),t._v("主要用于版本发布，此过程需要填写指定的"),a("code",[t._v("tag_name")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"邮箱自动通知"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#邮箱自动通知"}},[t._v("#")]),t._v(" 邮箱自动通知")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("github action")]),t._v("执行流程的时候，成功后不会发送通知，只有失败才会，需要我们手动开启一下~")])]),t._v(" "),a("p",[t._v("进入github，点击右侧头像 => settings, 进入个人主页  => 点击左侧【Notifations】 => 往下滑，System => Actions, 【Only notify failed workflows】取消，保存~")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git10.jpeg"),width:"auto"}}),t._v(" "),a("h3",{attrs:{id:"添加状态徽章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加状态徽章"}},[t._v("#")]),t._v(" 添加状态徽章")]),t._v(" "),a("p",[t._v("我们可以在项目的"),a("code",[t._v("README.md")]),t._v("中加了"),a("code",[t._v("CI")]),t._v("和"),a("code",[t._v("CD")]),t._v("两个状态徽章来代表这个项目已成功实现了"),a("code",[t._v("CI")]),t._v("和"),a("code",[t._v("CD")]),t._v("的流程，如上图所示。这两个状态徽章是根据你指定的"),a("code",[t._v("Workflow")]),t._v("的名称和最近一次运行的结果动态变化的")]),t._v(" "),a("ul",[a("li",[t._v("直接在"),a("code",[t._v("README.md")]),t._v("中添加即可：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("![CI](https://github.com/verneyZhou/githook-vite-test/actions/workflows/ci.yml/badge.svg)\n![CD](https://github.com/verneyZhou/githook-vite-test/actions/workflows/git-page.yml/badge.svg)\n")])])]),a("ul",[a("li",[t._v("添加完成，提交，就会有这个：")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git22.jpeg"),width:"auto"}}),t._v(" "),a("h3",{attrs:{id:"添加回滚机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加回滚机制"}},[t._v("#")]),t._v(" 添加回滚机制")]),t._v(" "),a("p",[t._v("在项目发布后，如果发现当前项目存在重大bug时，一般操作就是手动回滚到上一个版本。因此需要新增一个用于回滚的workflow(下称"),a("code",[t._v("Rollback Workflow")]),t._v(")。")]),t._v(" "),a("ul",[a("li",[t._v("新增"),a("code",[t._v("rollback.yml")]),t._v(":")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Rollback\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 触发条件Event: workflow_dispatch; 该事件还能支持手动输入信息，然后把这个信息当作环境变量供整个Workflow读取")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inputs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的version指的是我们要部署的哪个发布版本的制品")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里输入的信息会作为github.event.inputs.version供此Workflow下的job读取")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"choose a version to deploy"')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("required")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Rollback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 输出我们输入的version值")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Echo Version\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("VERSION")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" github.event.inputs.version "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n          echo "Version: $VERSION"')]),t._v("\n  \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取对应发布版本的制品")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Download Artifact\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dsaltares/fetch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("gh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("release"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("asset@master\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tags/${{ github.event.inputs.version }}"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定存放制品的压缩包")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bundle.zip"')]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里需要CD Workflow中准备工作里的Github Personal Access Token")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("token")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.GITHOOK_VITE_TEST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 下载压缩包后解压")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Unzip\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n          unzip bundle.zip\n          ls -a ./dist")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 把部署到git page")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Upload to GitPage Deploy   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署， 将打包内容发布到 github page")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" JamesIves/github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@3.7.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用别人写好的 actions")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义环境变量")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ACCESS_TOKEN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.GITHOOK_VITE_TEST "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# github token，需要在仓库的 secrets 中配置")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("BRANCH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" feature/git"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("page "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署到哪个分支")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("FOLDER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dist "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 打包后的文件夹")]),t._v("\n")])])]),a("blockquote",[a("p",[a("code",[t._v("Rollback Workflow")]),t._v("的触发条件"),a("code",[t._v("Event")]),t._v(", 这里我们选择"),a("code",[t._v("workflow_dispatch")]),t._v(": 该事件还能支持手动输入信息，然后把这个信息当作环境变量供整个"),a("code",[t._v("Workflow")]),t._v("读取。")])]),t._v(" "),a("ul",[a("li",[t._v("配置好"),a("code",[t._v("rollback.yml")]),t._v("之后，"),a("code",[t._v("main")]),t._v("分支提交代码，之后如果发现线上版本有问题，需要回滚时，在 github 上直接手动操作：")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/images/more/git23.jpeg"),width:"auto"}}),t._v(" "),a("blockquote",[a("p",[t._v("手动执行成功后，即将线上代码回滚到了指定版本~")])]),t._v(" "),a("h3",{attrs:{id:"搭配docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#搭配docker"}},[t._v("#")]),t._v(" 搭配Docker")]),t._v(" "),a("h3",{attrs:{id:"gitlab-ci"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-ci"}},[t._v("#")]),t._v(" Gitlab-ci")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("gitlab-ci && 自动化部署工具的运行机制")])])]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过在项目根目录下配置"),a("code",[t._v(".gitlab-ci.yml")]),t._v("文件，可以控制ci流程的不同阶段，例如"),a("code",[t._v("install/检查/编译/部署服务器")]),t._v("；gitlab平台会扫描"),a("code",[t._v(".gitlab-ci.yml")]),t._v("文件，并据此处理ci流程；")])]),t._v(" "),a("li",[a("p",[t._v("ci流程在每次团队成员"),a("code",[t._v("push/merge")]),t._v("后之后触发。每当你"),a("code",[t._v("push/merge")]),t._v("一次，"),a("code",[t._v("gitlab-ci")]),t._v("都会检查项目下有没有"),a("code",[t._v(".gitlab-ci.yml")]),t._v("文件，如果有，它会执行你在里面编写的脚本，并完整地走一遍从"),a("code",[t._v("intall => eslint检查=>编译 =>部署服务器")]),t._v("的流程；")])]),t._v(" "),a("li",[a("p",[t._v("gitlab-ci提供了指定ci运行平台的机制，它提供了一个叫"),a("code",[t._v("gitlab-runner")]),t._v("的软件，只要在对应的平台(机器或docker)上下载并运行这个命令行软件，并输入从gitlab交互界面获取的token,就可以把当前机器和对应的gitlab-ci流程绑定，也即：每次跑ci都在这个平台上进行。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v(".gitlab-ci")]),t._v("的所有流程都是可视化的，每个流程节点的状态可以在gitlab的交互界面上看到，包括执行成功或失败。因为它的执行看上去就和多节管道一样，所以我们通常用"),a("code",[t._v("pipeLine")]),t._v("来称呼它;")])]),t._v(" "),a("li",[a("p",[t._v("不同"),a("code",[t._v("push/merge")]),t._v("所触发的CI流程不会互相影响，也就是说，你的一次push引发的CI流程并不会因为接下来另一位同事的push而阻断，它们是互不影响的。这一个特点方便让测试同学根据不同版本进行测试。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("pipeline")]),t._v("不仅能被动触发，也是可以手动触发的。")])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/184936276",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gitlab-ci:从零开始的前端自动化部署"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"备注"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[t._v("#")]),t._v(" 备注")]),t._v(" "),a("h3",{attrs:{id:"与其他ci-cd工具的比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与其他ci-cd工具的比较"}},[t._v("#")]),t._v(" 与其他CI/CD工具的比较")]),t._v(" "),a("p",[t._v("Gitlab CI：与Gitlab高度绑定，项目放在Gitlab就谈不上开源了")]),t._v(" "),a("p",[t._v("Travic CI：限时免费，过后按进程收费")]),t._v(" "),a("p",[t._v("Drone CI：执行任务时，国内机器从Github拉取仓库代码时会偶尔超时，从而导致任务失败")]),t._v(" "),a("p",[t._v("Jenkins CI：除了存在与Drone CI一样的缺点外，自身比较重量，占用宿主机较多资源")]),t._v(" "),a("h2",{attrs:{id:"报错记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#报错记录"}},[t._v("#")]),t._v(" 报错记录")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("git push")]),t._v("后自行执行"),a("code",[t._v(".yml")]),t._v("时报错：")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("remote: Permission to verneyzhou/verneyzhou.github.io.git denied to github-actions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bot"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".\nfatal: unable to access "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://github.com/verneyzhou/verneyzhou.github.io.git/'")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" The requested URL returned error: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("403")]),t._v("\nRunning post deployment cleanup jobs… 🗑️\n/usr/bin/git worktree remove github-pages-deploy-action-temp-deployment-folder --force\nfatal: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'github-pages-deploy-action-temp-deployment-folder'")]),t._v(" is not a working tree\nError: The process "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/usr/bin/git'")]),t._v(" failed with "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v(" code "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("128")]),t._v("\nDeployment failed"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" ❌\n")])])]),a("blockquote",[a("p",[t._v("因为在我的"),a("code",[t._v("git-page.yml")]),t._v("文件是使用第三方脚本来部署git page,这里报的是用户没有权限的问题，在 "),a("code",[t._v(".yml")]),t._v("中添加如下命令即可~")])]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("permissions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contents")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" write\n")])])]),a("ul",[a("li",[t._v("自动部署到阿里云服务器时报错：")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 报错1：")]),t._v("\n❌ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Rsync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" stderr: \nssh: connect to "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.57")]),t._v(".172.182 port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(": Connection timed out\nrsync: connection unexpectedly closed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" bytes received so far"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" error: unexplained error "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("code "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" at io.c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("231")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sender"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.2")]),t._v(".7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n❌️ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Rsync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" stdout: \n\n❌ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Rsync"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" command: \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("\nError: R"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" exited with code "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 报错2：")]),t._v("\n❌ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SSH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Adding "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("host")]),t._v(" to "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("known_hosts"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" ERROR "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.57")]),t._v(".172.182 Command failed: ssh-keyscan -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" -H "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.57")]),t._v(".172.182  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" \n")])])]),a("blockquote",[a("p",[t._v("ssh 22 端口访问权限问题，需要在"),a("a",{attrs:{href:"https://ecs.console.aliyun.com/server/i-2zef9ue9eyhqrvjxs3aq/group/ingress",target:"_blank",rel:"noopener noreferrer"}},[t._v("安全组规则"),a("OutboundLink")],1),t._v("添加~")])]),t._v(" "),a("p",[t._v("方法1：安全组规则"),a("code",[t._v("22")]),t._v("的端口授权对象直接配置为"),a("code",[t._v("0.0.0.0")]),t._v("，但这样比较危险，意味着谁都可以访问，比较容易被攻击，慎用~")]),t._v(" "),a("p",[t._v("方法2：暂没找到...😌")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://mp.weixin.qq.com/s/_MhYVCoJwgd0VsFVxPpxuw",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Actions 自动部署前端 Vue 项目"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6887751398499287054#heading-7",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github Actions 自动构建前端项目并部署到服务器"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/unreliable_narrator/article/details/124468384",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHubActions详解"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6950799922178310152",target:"_blank",rel:"noopener noreferrer"}},[t._v("手把手教你用 Github Actions 部署前端项目"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/7113562222852309023",target:"_blank",rel:"noopener noreferrer"}},[t._v("作为前端，要学会用Github Action给自己的项目加上CICD"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6971812117993226248",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端工程化配置指南"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);